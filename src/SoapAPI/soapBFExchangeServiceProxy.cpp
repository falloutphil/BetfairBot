/* soapBFExchangeServiceProxy.cpp
   Generated by gSOAP 2.8.1 from Betfair.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#include "soapBFExchangeServiceProxy.h"

BFExchangeServiceProxy::BFExchangeServiceProxy()
{	BFExchangeServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BFExchangeServiceProxy::BFExchangeServiceProxy(const struct soap &_soap) : soap(_soap)
{ }

BFExchangeServiceProxy::BFExchangeServiceProxy(soap_mode iomode)
{	BFExchangeServiceProxy_init(iomode, iomode);
}

BFExchangeServiceProxy::BFExchangeServiceProxy(soap_mode imode, soap_mode omode)
{	BFExchangeServiceProxy_init(imode, omode);
}

void BFExchangeServiceProxy::BFExchangeServiceProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://www.betfair.com/publicapi/types/global/v3/", NULL, NULL},
	{"ns3", "http://www.betfair.com/publicapi/types/exchange/v5/", NULL, NULL},
	{"ns2", "http://www.betfair.com/publicapi/v3/BFGlobalService/", NULL, NULL},
	{"ns4", "http://www.betfair.com/publicapi/v5/BFExchangeService/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
}

BFExchangeServiceProxy::~BFExchangeServiceProxy()
{ }

void BFExchangeServiceProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void BFExchangeServiceProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *BFExchangeServiceProxy::soap_fault()
{	return this->fault;
}

const char *BFExchangeServiceProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *BFExchangeServiceProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int BFExchangeServiceProxy::soap_close_socket()
{	return soap_closesock(this);
}

void BFExchangeServiceProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void BFExchangeServiceProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *BFExchangeServiceProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int BFExchangeServiceProxy::getAccountFunds(_ns4__getAccountFunds *ns4__getAccountFunds, _ns4__getAccountFundsResponse *ns4__getAccountFundsResponse)
{	struct soap *soap = this;
	struct __ns4__getAccountFunds soap_tmp___ns4__getAccountFunds;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getAccountFunds";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getAccountFunds.ns4__getAccountFunds = ns4__getAccountFunds;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getAccountFunds(soap, &soap_tmp___ns4__getAccountFunds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getAccountFunds(soap, &soap_tmp___ns4__getAccountFunds, "-ns4:getAccountFunds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getAccountFunds(soap, &soap_tmp___ns4__getAccountFunds, "-ns4:getAccountFunds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getAccountFundsResponse)
		return soap_closesock(soap);
	ns4__getAccountFundsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getAccountFundsResponse->soap_get(soap, "ns4:getAccountFundsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::cancelBets(_ns4__cancelBets *ns4__cancelBets, _ns4__cancelBetsResponse *ns4__cancelBetsResponse)
{	struct soap *soap = this;
	struct __ns4__cancelBets soap_tmp___ns4__cancelBets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "cancelBets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__cancelBets.ns4__cancelBets = ns4__cancelBets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__cancelBets(soap, &soap_tmp___ns4__cancelBets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__cancelBets(soap, &soap_tmp___ns4__cancelBets, "-ns4:cancelBets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__cancelBets(soap, &soap_tmp___ns4__cancelBets, "-ns4:cancelBets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__cancelBetsResponse)
		return soap_closesock(soap);
	ns4__cancelBetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__cancelBetsResponse->soap_get(soap, "ns4:cancelBetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::cancelBetsByMarket(_ns4__cancelBetsByMarket *ns4__cancelBetsByMarket, _ns4__cancelBetsByMarketResponse *ns4__cancelBetsByMarketResponse)
{	struct soap *soap = this;
	struct __ns4__cancelBetsByMarket soap_tmp___ns4__cancelBetsByMarket;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "cancelBetsByMarket";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__cancelBetsByMarket.ns4__cancelBetsByMarket = ns4__cancelBetsByMarket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__cancelBetsByMarket(soap, &soap_tmp___ns4__cancelBetsByMarket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__cancelBetsByMarket(soap, &soap_tmp___ns4__cancelBetsByMarket, "-ns4:cancelBetsByMarket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__cancelBetsByMarket(soap, &soap_tmp___ns4__cancelBetsByMarket, "-ns4:cancelBetsByMarket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__cancelBetsByMarketResponse)
		return soap_closesock(soap);
	ns4__cancelBetsByMarketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__cancelBetsByMarketResponse->soap_get(soap, "ns4:cancelBetsByMarketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::updateBets(_ns4__updateBets *ns4__updateBets, _ns4__updateBetsResponse *ns4__updateBetsResponse)
{	struct soap *soap = this;
	struct __ns4__updateBets soap_tmp___ns4__updateBets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "updateBets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__updateBets.ns4__updateBets = ns4__updateBets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__updateBets(soap, &soap_tmp___ns4__updateBets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__updateBets(soap, &soap_tmp___ns4__updateBets, "-ns4:updateBets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__updateBets(soap, &soap_tmp___ns4__updateBets, "-ns4:updateBets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__updateBetsResponse)
		return soap_closesock(soap);
	ns4__updateBetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__updateBetsResponse->soap_get(soap, "ns4:updateBetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::placeBets(_ns4__placeBets *ns4__placeBets, _ns4__placeBetsResponse *ns4__placeBetsResponse)
{	struct soap *soap = this;
	struct __ns4__placeBets soap_tmp___ns4__placeBets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "placeBets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__placeBets.ns4__placeBets = ns4__placeBets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__placeBets(soap, &soap_tmp___ns4__placeBets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__placeBets(soap, &soap_tmp___ns4__placeBets, "-ns4:placeBets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__placeBets(soap, &soap_tmp___ns4__placeBets, "-ns4:placeBets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__placeBetsResponse)
		return soap_closesock(soap);
	ns4__placeBetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__placeBetsResponse->soap_get(soap, "ns4:placeBetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarket(_ns4__getMarket *ns4__getMarket, _ns4__getMarketResponse *ns4__getMarketResponse)
{	struct soap *soap = this;
	struct __ns4__getMarket soap_tmp___ns4__getMarket;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarket";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarket.ns4__getMarket = ns4__getMarket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarket(soap, &soap_tmp___ns4__getMarket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarket(soap, &soap_tmp___ns4__getMarket, "-ns4:getMarket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarket(soap, &soap_tmp___ns4__getMarket, "-ns4:getMarket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketResponse)
		return soap_closesock(soap);
	ns4__getMarketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketResponse->soap_get(soap, "ns4:getMarketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarketInfo(_ns4__getMarketInfo *ns4__getMarketInfo, _ns4__getMarketInfoResponse *ns4__getMarketInfoResponse)
{	struct soap *soap = this;
	struct __ns4__getMarketInfo soap_tmp___ns4__getMarketInfo;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarketInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarketInfo.ns4__getMarketInfo = ns4__getMarketInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarketInfo(soap, &soap_tmp___ns4__getMarketInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarketInfo(soap, &soap_tmp___ns4__getMarketInfo, "-ns4:getMarketInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarketInfo(soap, &soap_tmp___ns4__getMarketInfo, "-ns4:getMarketInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketInfoResponse)
		return soap_closesock(soap);
	ns4__getMarketInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketInfoResponse->soap_get(soap, "ns4:getMarketInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarketPrices(_ns4__getMarketPrices *ns4__getMarketPrices, _ns4__getMarketPricesResponse *ns4__getMarketPricesResponse)
{	struct soap *soap = this;
	struct __ns4__getMarketPrices soap_tmp___ns4__getMarketPrices;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarketPrices";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarketPrices.ns4__getMarketPrices = ns4__getMarketPrices;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarketPrices(soap, &soap_tmp___ns4__getMarketPrices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarketPrices(soap, &soap_tmp___ns4__getMarketPrices, "-ns4:getMarketPrices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarketPrices(soap, &soap_tmp___ns4__getMarketPrices, "-ns4:getMarketPrices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketPricesResponse)
		return soap_closesock(soap);
	ns4__getMarketPricesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketPricesResponse->soap_get(soap, "ns4:getMarketPricesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getCompleteMarketPricesCompressed(_ns4__getCompleteMarketPricesCompressed *ns4__getCompleteMarketPricesCompressed, _ns4__getCompleteMarketPricesCompressedResponse *ns4__getCompleteMarketPricesCompressedResponse)
{	struct soap *soap = this;
	struct __ns4__getCompleteMarketPricesCompressed soap_tmp___ns4__getCompleteMarketPricesCompressed;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getCompleteMarketPricesCompressed";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCompleteMarketPricesCompressed.ns4__getCompleteMarketPricesCompressed = ns4__getCompleteMarketPricesCompressed;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCompleteMarketPricesCompressed(soap, &soap_tmp___ns4__getCompleteMarketPricesCompressed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCompleteMarketPricesCompressed(soap, &soap_tmp___ns4__getCompleteMarketPricesCompressed, "-ns4:getCompleteMarketPricesCompressed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCompleteMarketPricesCompressed(soap, &soap_tmp___ns4__getCompleteMarketPricesCompressed, "-ns4:getCompleteMarketPricesCompressed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getCompleteMarketPricesCompressedResponse)
		return soap_closesock(soap);
	ns4__getCompleteMarketPricesCompressedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getCompleteMarketPricesCompressedResponse->soap_get(soap, "ns4:getCompleteMarketPricesCompressedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarketTradedVolumeCompressed(_ns4__getMarketTradedVolumeCompressed *ns4__getMarketTradedVolumeCompressed, _ns4__getMarketTradedVolumeCompressedResponse *ns4__getMarketTradedVolumeCompressedResponse)
{	struct soap *soap = this;
	struct __ns4__getMarketTradedVolumeCompressed soap_tmp___ns4__getMarketTradedVolumeCompressed;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarketTradedVolumeCompressed";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarketTradedVolumeCompressed.ns4__getMarketTradedVolumeCompressed = ns4__getMarketTradedVolumeCompressed;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarketTradedVolumeCompressed(soap, &soap_tmp___ns4__getMarketTradedVolumeCompressed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarketTradedVolumeCompressed(soap, &soap_tmp___ns4__getMarketTradedVolumeCompressed, "-ns4:getMarketTradedVolumeCompressed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarketTradedVolumeCompressed(soap, &soap_tmp___ns4__getMarketTradedVolumeCompressed, "-ns4:getMarketTradedVolumeCompressed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketTradedVolumeCompressedResponse)
		return soap_closesock(soap);
	ns4__getMarketTradedVolumeCompressedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketTradedVolumeCompressedResponse->soap_get(soap, "ns4:getMarketTradedVolumeCompressedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarketPricesCompressed(_ns4__getMarketPricesCompressed *ns4__getMarketPricesCompressed, _ns4__getMarketPricesCompressedResponse *ns4__getMarketPricesCompressedResponse)
{	struct soap *soap = this;
	struct __ns4__getMarketPricesCompressed soap_tmp___ns4__getMarketPricesCompressed;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarketPricesCompressed";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarketPricesCompressed.ns4__getMarketPricesCompressed = ns4__getMarketPricesCompressed;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarketPricesCompressed(soap, &soap_tmp___ns4__getMarketPricesCompressed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarketPricesCompressed(soap, &soap_tmp___ns4__getMarketPricesCompressed, "-ns4:getMarketPricesCompressed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarketPricesCompressed(soap, &soap_tmp___ns4__getMarketPricesCompressed, "-ns4:getMarketPricesCompressed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketPricesCompressedResponse)
		return soap_closesock(soap);
	ns4__getMarketPricesCompressedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketPricesCompressedResponse->soap_get(soap, "ns4:getMarketPricesCompressedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getAllMarkets(_ns4__getAllMarkets *ns4__getAllMarkets, _ns4__getAllMarketsResponse *ns4__getAllMarketsResponse)
{	struct soap *soap = this;
	struct __ns4__getAllMarkets soap_tmp___ns4__getAllMarkets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getAllMarkets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getAllMarkets.ns4__getAllMarkets = ns4__getAllMarkets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getAllMarkets(soap, &soap_tmp___ns4__getAllMarkets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getAllMarkets(soap, &soap_tmp___ns4__getAllMarkets, "-ns4:getAllMarkets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getAllMarkets(soap, &soap_tmp___ns4__getAllMarkets, "-ns4:getAllMarkets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getAllMarketsResponse)
		return soap_closesock(soap);
	ns4__getAllMarketsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getAllMarketsResponse->soap_get(soap, "ns4:getAllMarketsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getInPlayMarkets(_ns4__getInPlayMarkets *ns4__getInPlayMarkets, _ns4__getInPlayMarketsResponse *ns4__getInPlayMarketsResponse)
{	struct soap *soap = this;
	struct __ns4__getInPlayMarkets soap_tmp___ns4__getInPlayMarkets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getInPlayMarkets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getInPlayMarkets.ns4__getInPlayMarkets = ns4__getInPlayMarkets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getInPlayMarkets(soap, &soap_tmp___ns4__getInPlayMarkets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getInPlayMarkets(soap, &soap_tmp___ns4__getInPlayMarkets, "-ns4:getInPlayMarkets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getInPlayMarkets(soap, &soap_tmp___ns4__getInPlayMarkets, "-ns4:getInPlayMarkets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getInPlayMarketsResponse)
		return soap_closesock(soap);
	ns4__getInPlayMarketsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getInPlayMarketsResponse->soap_get(soap, "ns4:getInPlayMarketsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getPrivateMarkets(_ns4__getPrivateMarkets *ns4__getPrivateMarkets, _ns4__getPrivateMarketsResponse *ns4__getPrivateMarketsResponse)
{	struct soap *soap = this;
	struct __ns4__getPrivateMarkets soap_tmp___ns4__getPrivateMarkets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getPrivateMarkets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getPrivateMarkets.ns4__getPrivateMarkets = ns4__getPrivateMarkets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getPrivateMarkets(soap, &soap_tmp___ns4__getPrivateMarkets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getPrivateMarkets(soap, &soap_tmp___ns4__getPrivateMarkets, "-ns4:getPrivateMarkets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getPrivateMarkets(soap, &soap_tmp___ns4__getPrivateMarkets, "-ns4:getPrivateMarkets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getPrivateMarketsResponse)
		return soap_closesock(soap);
	ns4__getPrivateMarketsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getPrivateMarketsResponse->soap_get(soap, "ns4:getPrivateMarketsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getCurrentBets(_ns4__getCurrentBets *ns4__getCurrentBets, _ns4__getCurrentBetsResponse *ns4__getCurrentBetsResponse)
{	struct soap *soap = this;
	struct __ns4__getCurrentBets soap_tmp___ns4__getCurrentBets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getCurrentBets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCurrentBets.ns4__getCurrentBets = ns4__getCurrentBets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCurrentBets(soap, &soap_tmp___ns4__getCurrentBets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCurrentBets(soap, &soap_tmp___ns4__getCurrentBets, "-ns4:getCurrentBets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCurrentBets(soap, &soap_tmp___ns4__getCurrentBets, "-ns4:getCurrentBets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getCurrentBetsResponse)
		return soap_closesock(soap);
	ns4__getCurrentBetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getCurrentBetsResponse->soap_get(soap, "ns4:getCurrentBetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getCoupon(_ns4__getCoupon *ns4__getCoupon, _ns4__getCouponResponse *ns4__getCouponResponse)
{	struct soap *soap = this;
	struct __ns4__getCoupon soap_tmp___ns4__getCoupon;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getCoupon";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCoupon.ns4__getCoupon = ns4__getCoupon;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCoupon(soap, &soap_tmp___ns4__getCoupon);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCoupon(soap, &soap_tmp___ns4__getCoupon, "-ns4:getCoupon", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCoupon(soap, &soap_tmp___ns4__getCoupon, "-ns4:getCoupon", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getCouponResponse)
		return soap_closesock(soap);
	ns4__getCouponResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getCouponResponse->soap_get(soap, "ns4:getCouponResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getCurrentBetsLite(_ns4__getCurrentBetsLite *ns4__getCurrentBetsLite, _ns4__getCurrentBetsLiteResponse *ns4__getCurrentBetsLiteResponse)
{	struct soap *soap = this;
	struct __ns4__getCurrentBetsLite soap_tmp___ns4__getCurrentBetsLite;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getCurrentBetsLite";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCurrentBetsLite.ns4__getCurrentBetsLite = ns4__getCurrentBetsLite;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCurrentBetsLite(soap, &soap_tmp___ns4__getCurrentBetsLite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCurrentBetsLite(soap, &soap_tmp___ns4__getCurrentBetsLite, "-ns4:getCurrentBetsLite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCurrentBetsLite(soap, &soap_tmp___ns4__getCurrentBetsLite, "-ns4:getCurrentBetsLite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getCurrentBetsLiteResponse)
		return soap_closesock(soap);
	ns4__getCurrentBetsLiteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getCurrentBetsLiteResponse->soap_get(soap, "ns4:getCurrentBetsLiteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMUBets(_ns4__getMUBets *ns4__getMUBets, _ns4__getMUBetsResponse *ns4__getMUBetsResponse)
{	struct soap *soap = this;
	struct __ns4__getMUBets soap_tmp___ns4__getMUBets;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMUBets";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMUBets.ns4__getMUBets = ns4__getMUBets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMUBets(soap, &soap_tmp___ns4__getMUBets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMUBets(soap, &soap_tmp___ns4__getMUBets, "-ns4:getMUBets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMUBets(soap, &soap_tmp___ns4__getMUBets, "-ns4:getMUBets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMUBetsResponse)
		return soap_closesock(soap);
	ns4__getMUBetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMUBetsResponse->soap_get(soap, "ns4:getMUBetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMUBetsLite(_ns4__getMUBetsLite *ns4__getMUBetsLite, _ns4__getMUBetsLiteResponse *ns4__getMUBetsLiteResponse)
{	struct soap *soap = this;
	struct __ns4__getMUBetsLite soap_tmp___ns4__getMUBetsLite;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMUBetsLite";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMUBetsLite.ns4__getMUBetsLite = ns4__getMUBetsLite;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMUBetsLite(soap, &soap_tmp___ns4__getMUBetsLite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMUBetsLite(soap, &soap_tmp___ns4__getMUBetsLite, "-ns4:getMUBetsLite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMUBetsLite(soap, &soap_tmp___ns4__getMUBetsLite, "-ns4:getMUBetsLite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMUBetsLiteResponse)
		return soap_closesock(soap);
	ns4__getMUBetsLiteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMUBetsLiteResponse->soap_get(soap, "ns4:getMUBetsLiteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getDetailAvailableMktDepth(_ns4__getDetailAvailableMktDepth *ns4__getDetailAvailableMktDepth, _ns4__getDetailAvailableMktDepthResponse *ns4__getDetailAvailableMktDepthResponse)
{	struct soap *soap = this;
	struct __ns4__getDetailAvailableMktDepth soap_tmp___ns4__getDetailAvailableMktDepth;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getDetailAvailableMktDepth";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getDetailAvailableMktDepth.ns4__getDetailAvailableMktDepth = ns4__getDetailAvailableMktDepth;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getDetailAvailableMktDepth(soap, &soap_tmp___ns4__getDetailAvailableMktDepth);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getDetailAvailableMktDepth(soap, &soap_tmp___ns4__getDetailAvailableMktDepth, "-ns4:getDetailAvailableMktDepth", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getDetailAvailableMktDepth(soap, &soap_tmp___ns4__getDetailAvailableMktDepth, "-ns4:getDetailAvailableMktDepth", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getDetailAvailableMktDepthResponse)
		return soap_closesock(soap);
	ns4__getDetailAvailableMktDepthResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getDetailAvailableMktDepthResponse->soap_get(soap, "ns4:getDetailAvailableMktDepthResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarketTradedVolume(_ns4__getMarketTradedVolume *ns4__getMarketTradedVolume, _ns4__getMarketTradedVolumeResponse *ns4__getMarketTradedVolumeResponse)
{	struct soap *soap = this;
	struct __ns4__getMarketTradedVolume soap_tmp___ns4__getMarketTradedVolume;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarketTradedVolume";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarketTradedVolume.ns4__getMarketTradedVolume = ns4__getMarketTradedVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarketTradedVolume(soap, &soap_tmp___ns4__getMarketTradedVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarketTradedVolume(soap, &soap_tmp___ns4__getMarketTradedVolume, "-ns4:getMarketTradedVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarketTradedVolume(soap, &soap_tmp___ns4__getMarketTradedVolume, "-ns4:getMarketTradedVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketTradedVolumeResponse)
		return soap_closesock(soap);
	ns4__getMarketTradedVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketTradedVolumeResponse->soap_get(soap, "ns4:getMarketTradedVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getBetHistory(_ns4__getBetHistory *ns4__getBetHistory, _ns4__getBetHistoryResponse *ns4__getBetHistoryResponse)
{	struct soap *soap = this;
	struct __ns4__getBetHistory soap_tmp___ns4__getBetHistory;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getBetHistory";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBetHistory.ns4__getBetHistory = ns4__getBetHistory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBetHistory(soap, &soap_tmp___ns4__getBetHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBetHistory(soap, &soap_tmp___ns4__getBetHistory, "-ns4:getBetHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBetHistory(soap, &soap_tmp___ns4__getBetHistory, "-ns4:getBetHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getBetHistoryResponse)
		return soap_closesock(soap);
	ns4__getBetHistoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getBetHistoryResponse->soap_get(soap, "ns4:getBetHistoryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getAccountStatement(_ns4__getAccountStatement *ns4__getAccountStatement, _ns4__getAccountStatementResponse *ns4__getAccountStatementResponse)
{	struct soap *soap = this;
	struct __ns4__getAccountStatement soap_tmp___ns4__getAccountStatement;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getAccountStatement";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getAccountStatement.ns4__getAccountStatement = ns4__getAccountStatement;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getAccountStatement(soap, &soap_tmp___ns4__getAccountStatement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getAccountStatement(soap, &soap_tmp___ns4__getAccountStatement, "-ns4:getAccountStatement", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getAccountStatement(soap, &soap_tmp___ns4__getAccountStatement, "-ns4:getAccountStatement", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getAccountStatementResponse)
		return soap_closesock(soap);
	ns4__getAccountStatementResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getAccountStatementResponse->soap_get(soap, "ns4:getAccountStatementResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getMarketProfitAndLoss(_ns4__getMarketProfitAndLoss *ns4__getMarketProfitAndLoss, _ns4__getMarketProfitAndLossResponse *ns4__getMarketProfitAndLossResponse)
{	struct soap *soap = this;
	struct __ns4__getMarketProfitAndLoss soap_tmp___ns4__getMarketProfitAndLoss;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getMarketProfitAndLoss";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getMarketProfitAndLoss.ns4__getMarketProfitAndLoss = ns4__getMarketProfitAndLoss;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getMarketProfitAndLoss(soap, &soap_tmp___ns4__getMarketProfitAndLoss);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getMarketProfitAndLoss(soap, &soap_tmp___ns4__getMarketProfitAndLoss, "-ns4:getMarketProfitAndLoss", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getMarketProfitAndLoss(soap, &soap_tmp___ns4__getMarketProfitAndLoss, "-ns4:getMarketProfitAndLoss", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getMarketProfitAndLossResponse)
		return soap_closesock(soap);
	ns4__getMarketProfitAndLossResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getMarketProfitAndLossResponse->soap_get(soap, "ns4:getMarketProfitAndLossResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getBet(_ns4__getBet *ns4__getBet, _ns4__getBetResponse *ns4__getBetResponse)
{	struct soap *soap = this;
	struct __ns4__getBet soap_tmp___ns4__getBet;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getBet";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBet.ns4__getBet = ns4__getBet;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBet(soap, &soap_tmp___ns4__getBet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBet(soap, &soap_tmp___ns4__getBet, "-ns4:getBet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBet(soap, &soap_tmp___ns4__getBet, "-ns4:getBet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getBetResponse)
		return soap_closesock(soap);
	ns4__getBetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getBetResponse->soap_get(soap, "ns4:getBetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getBetLite(_ns4__getBetLite *ns4__getBetLite, _ns4__getBetLiteResponse *ns4__getBetLiteResponse)
{	struct soap *soap = this;
	struct __ns4__getBetLite soap_tmp___ns4__getBetLite;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getBetLite";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBetLite.ns4__getBetLite = ns4__getBetLite;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBetLite(soap, &soap_tmp___ns4__getBetLite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBetLite(soap, &soap_tmp___ns4__getBetLite, "-ns4:getBetLite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBetLite(soap, &soap_tmp___ns4__getBetLite, "-ns4:getBetLite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getBetLiteResponse)
		return soap_closesock(soap);
	ns4__getBetLiteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getBetLiteResponse->soap_get(soap, "ns4:getBetLiteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getBetMatchesLite(_ns4__getBetMatchesLite *ns4__getBetMatchesLite, _ns4__getBetMatchesLiteResponse *ns4__getBetMatchesLiteResponse)
{	struct soap *soap = this;
	struct __ns4__getBetMatchesLite soap_tmp___ns4__getBetMatchesLite;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getBetMatchesLite";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBetMatchesLite.ns4__getBetMatchesLite = ns4__getBetMatchesLite;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBetMatchesLite(soap, &soap_tmp___ns4__getBetMatchesLite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBetMatchesLite(soap, &soap_tmp___ns4__getBetMatchesLite, "-ns4:getBetMatchesLite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBetMatchesLite(soap, &soap_tmp___ns4__getBetMatchesLite, "-ns4:getBetMatchesLite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getBetMatchesLiteResponse)
		return soap_closesock(soap);
	ns4__getBetMatchesLiteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getBetMatchesLiteResponse->soap_get(soap, "ns4:getBetMatchesLiteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getSilks(_ns4__getSilks *ns4__getSilks, _ns4__getSilksResponse *ns4__getSilksResponse)
{	struct soap *soap = this;
	struct __ns4__getSilks soap_tmp___ns4__getSilks;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getSilks";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getSilks.ns4__getSilks = ns4__getSilks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getSilks(soap, &soap_tmp___ns4__getSilks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getSilks(soap, &soap_tmp___ns4__getSilks, "-ns4:getSilks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getSilks(soap, &soap_tmp___ns4__getSilks, "-ns4:getSilks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getSilksResponse)
		return soap_closesock(soap);
	ns4__getSilksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getSilksResponse->soap_get(soap, "ns4:getSilksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::getSilksV2(_ns4__getSilksV2 *ns4__getSilksV2, _ns4__getSilksV2Response *ns4__getSilksV2Response)
{	struct soap *soap = this;
	struct __ns4__getSilksV2 soap_tmp___ns4__getSilksV2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "getSilksV2";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getSilksV2.ns4__getSilksV2 = ns4__getSilksV2;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getSilksV2(soap, &soap_tmp___ns4__getSilksV2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getSilksV2(soap, &soap_tmp___ns4__getSilksV2, "-ns4:getSilksV2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getSilksV2(soap, &soap_tmp___ns4__getSilksV2, "-ns4:getSilksV2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__getSilksV2Response)
		return soap_closesock(soap);
	ns4__getSilksV2Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__getSilksV2Response->soap_get(soap, "ns4:getSilksV2Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFExchangeServiceProxy::heartbeat(_ns4__heartbeat *ns4__heartbeat, _ns4__heartbeatResponse *ns4__heartbeatResponse)
{	struct soap *soap = this;
	struct __ns4__heartbeat soap_tmp___ns4__heartbeat;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/exchange/v5/BFExchangeService";
	soap_action = "heartbeat";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__heartbeat.ns4__heartbeat = ns4__heartbeat;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__heartbeat(soap, &soap_tmp___ns4__heartbeat);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__heartbeat(soap, &soap_tmp___ns4__heartbeat, "-ns4:heartbeat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__heartbeat(soap, &soap_tmp___ns4__heartbeat, "-ns4:heartbeat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__heartbeatResponse)
		return soap_closesock(soap);
	ns4__heartbeatResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__heartbeatResponse->soap_get(soap, "ns4:heartbeatResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
