/* Betfair.h
   Generated by wsdl2h 2.8.1 from https://api.betfair.com/global/v3/BFGlobalService.wsdl https://api.betfair.com/exchange/v5/BFExchangeService.wsdl and typemap.dat
   2011-04-17 14:25:53 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on Betfair.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.betfair.com/publicapi/types/global/v3/"
ns2 = "http://www.betfair.com/publicapi/v3/BFGlobalService/"
ns3 = "http://www.betfair.com/publicapi/types/exchange/v5/"
ns4 = "http://www.betfair.com/publicapi/v5/BFExchangeService/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.betfair.com/publicapi/types/global/v3/"
//gsoap ns1   schema namespace:	http://www.betfair.com/publicapi/types/global/v3/
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://www.betfair.com/publicapi/v3/BFGlobalService/"
//gsoap ns2   schema namespace:	http://www.betfair.com/publicapi/v3/BFGlobalService/
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://www.betfair.com/publicapi/types/exchange/v5/"
//gsoap ns3   schema namespace:	http://www.betfair.com/publicapi/types/exchange/v5/
//gsoap ns3   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://www.betfair.com/publicapi/v5/BFExchangeService/"
//gsoap ns4   schema namespace:	http://www.betfair.com/publicapi/v5/BFExchangeService/
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__LoginResp.
class ns1__LoginResp;

//  Forward declaration of class ns1__APIResponse.
class ns1__APIResponse;

//  Forward declaration of class ns1__APIResponseHeader.
class ns1__APIResponseHeader;

//  Forward declaration of class ns1__LoginReq.
class ns1__LoginReq;

//  Forward declaration of class ns1__RetrieveLIMBMessageReq.
class ns1__RetrieveLIMBMessageReq;

//  Forward declaration of class ns1__RetrieveLIMBMessageResp.
class ns1__RetrieveLIMBMessageResp;

//  Forward declaration of class ns1__RetrievePersonalLIMBMessage.
class ns1__RetrievePersonalLIMBMessage;

//  Forward declaration of class ns1__RetrieveTCPrivacyPolicyChangeLIMBMessage.
class ns1__RetrieveTCPrivacyPolicyChangeLIMBMessage;

//  Forward declaration of class ns1__RetrievePasswordChangeLIMBMessage.
class ns1__RetrievePasswordChangeLIMBMessage;

//  Forward declaration of class ns1__RetrieveBirthDateCheckLIMBMessage.
class ns1__RetrieveBirthDateCheckLIMBMessage;

//  Forward declaration of class ns1__RetrieveAddressCheckLIMBMessage.
class ns1__RetrieveAddressCheckLIMBMessage;

//  Forward declaration of class ns1__RetrieveContactDetailsCheckLIMBMessage.
class ns1__RetrieveContactDetailsCheckLIMBMessage;

//  Forward declaration of class ns1__RetrieveChatNameChangeLIMBMessage.
class ns1__RetrieveChatNameChangeLIMBMessage;

//  Forward declaration of class ns1__ArrayOfRetrieveCardBillingAddressCheckLIMBMessage.
class ns1__ArrayOfRetrieveCardBillingAddressCheckLIMBMessage;

//  Forward declaration of class ns1__RetrieveCardBillingAddressCheckLIMBMessage.
class ns1__RetrieveCardBillingAddressCheckLIMBMessage;

//  Forward declaration of class ns1__SubmitLIMBMessageReq.
class ns1__SubmitLIMBMessageReq;

//  Forward declaration of class ns1__SubmitPersonalLIMBMessage.
class ns1__SubmitPersonalLIMBMessage;

//  Forward declaration of class ns1__SubmitTCPrivacyPolicyChangeLIMBMessage.
class ns1__SubmitTCPrivacyPolicyChangeLIMBMessage;

//  Forward declaration of class ns1__SubmitPasswordChangeLIMBMessage.
class ns1__SubmitPasswordChangeLIMBMessage;

//  Forward declaration of class ns1__SubmitBirthDateCheckLIMBMessage.
class ns1__SubmitBirthDateCheckLIMBMessage;

//  Forward declaration of class ns1__SubmitAddressCheckLIMBMessage.
class ns1__SubmitAddressCheckLIMBMessage;

//  Forward declaration of class ns1__SubmitContactDetailsCheckLIMBMessage.
class ns1__SubmitContactDetailsCheckLIMBMessage;

//  Forward declaration of class ns1__SubmitChatNameChangeLIMBMessage.
class ns1__SubmitChatNameChangeLIMBMessage;

//  Forward declaration of class ns1__ArrayOfSubmitCardBillingAddressCheckLIMBMessage.
class ns1__ArrayOfSubmitCardBillingAddressCheckLIMBMessage;

//  Forward declaration of class ns1__SubmitCardBillingAddressCheckLIMBMessage.
class ns1__SubmitCardBillingAddressCheckLIMBMessage;

//  Forward declaration of class ns1__SubmitLIMBMessageResp.
class ns1__SubmitLIMBMessageResp;

//  Forward declaration of class ns1__ArrayOfLIMBValidationErrorsEnum.
class ns1__ArrayOfLIMBValidationErrorsEnum;

//  Forward declaration of class ns1__LogoutResp.
class ns1__LogoutResp;

//  Forward declaration of class ns1__LogoutReq.
class ns1__LogoutReq;

//  Forward declaration of class ns1__KeepAliveResp.
class ns1__KeepAliveResp;

//  Forward declaration of class ns1__KeepAliveReq.
class ns1__KeepAliveReq;

//  Forward declaration of class ns1__APIRequest.
class ns1__APIRequest;

//  Forward declaration of class ns1__APIRequestHeader.
class ns1__APIRequestHeader;

//  Forward declaration of class ns1__GetEventsResp.
class ns1__GetEventsResp;

//  Forward declaration of class ns1__BFEvent.
class ns1__BFEvent;

//  Forward declaration of class ns1__ArrayOfBFEvent.
class ns1__ArrayOfBFEvent;

//  Forward declaration of class ns1__MarketSummary.
class ns1__MarketSummary;

//  Forward declaration of class ns1__ArrayOfMarketSummary.
class ns1__ArrayOfMarketSummary;

//  Forward declaration of class ns1__CouponLink.
class ns1__CouponLink;

//  Forward declaration of class ns1__ArrayOfCouponLinks.
class ns1__ArrayOfCouponLinks;

//  Forward declaration of class ns1__GetEventsReq.
class ns1__GetEventsReq;

//  Forward declaration of class ns1__GetEventTypesResp.
class ns1__GetEventTypesResp;

//  Forward declaration of class ns1__EventType.
class ns1__EventType;

//  Forward declaration of class ns1__ArrayOfEventType.
class ns1__ArrayOfEventType;

//  Forward declaration of class ns1__GetEventTypesReq.
class ns1__GetEventTypesReq;

//  Forward declaration of class ns1__Runner.
class ns1__Runner;

//  Forward declaration of class ns1__GetSubscriptionInfoResp.
class ns1__GetSubscriptionInfoResp;

//  Forward declaration of class ns1__Subscription.
class ns1__Subscription;

//  Forward declaration of class ns1__ServiceCall.
class ns1__ServiceCall;

//  Forward declaration of class ns1__ArrayOfServiceCall.
class ns1__ArrayOfServiceCall;

//  Forward declaration of class ns1__ArrayOfSubscription.
class ns1__ArrayOfSubscription;

//  Forward declaration of class ns1__GetSubscriptionInfoReq.
class ns1__GetSubscriptionInfoReq;

//  Forward declaration of class ns1__DepositFromPaymentCardResp.
class ns1__DepositFromPaymentCardResp;

//  Forward declaration of class ns1__DepositFromPaymentCardReq.
class ns1__DepositFromPaymentCardReq;

//  Forward declaration of class ns1__AddPaymentCardReq.
class ns1__AddPaymentCardReq;

//  Forward declaration of class ns1__DeletePaymentCardReq.
class ns1__DeletePaymentCardReq;

//  Forward declaration of class ns1__GetPaymentCardReq.
class ns1__GetPaymentCardReq;

//  Forward declaration of class ns1__UpdatePaymentCardReq.
class ns1__UpdatePaymentCardReq;

//  Forward declaration of class ns1__AddPaymentCardResp.
class ns1__AddPaymentCardResp;

//  Forward declaration of class ns1__DeletePaymentCardResp.
class ns1__DeletePaymentCardResp;

//  Forward declaration of class ns1__UpdatePaymentCardResp.
class ns1__UpdatePaymentCardResp;

//  Forward declaration of class ns1__GetPaymentCardResp.
class ns1__GetPaymentCardResp;

//  Forward declaration of class ns1__PaymentCard.
class ns1__PaymentCard;

//  Forward declaration of class ns1__ArrayOfPaymentCard.
class ns1__ArrayOfPaymentCard;

//  Forward declaration of class ns1__WithdrawToPaymentCardResp.
class ns1__WithdrawToPaymentCardResp;

//  Forward declaration of class ns1__WithdrawToPaymentCardReq.
class ns1__WithdrawToPaymentCardReq;

//  Forward declaration of class ns1__WithdrawByBankTransferReq.
class ns1__WithdrawByBankTransferReq;

//  Forward declaration of class ns1__WithdrawByBankTransferResp.
class ns1__WithdrawByBankTransferResp;

//  Forward declaration of class ns1__ArrayOfBankAccountDetailsField.
class ns1__ArrayOfBankAccountDetailsField;

//  Forward declaration of class ns1__BankAccountDetailsField.
class ns1__BankAccountDetailsField;

//  Forward declaration of class ns1__AbstractField.
class ns1__AbstractField;

//  Forward declaration of class ns1__BasicBankAccountDetails.
class ns1__BasicBankAccountDetails;

//  Forward declaration of class ns1__BankAccountDetails.
class ns1__BankAccountDetails;

//  Forward declaration of class ns1__TransferFundsReq.
class ns1__TransferFundsReq;

//  Forward declaration of class ns1__TransferFundsResp.
class ns1__TransferFundsResp;

//  Forward declaration of class ns1__SelfExcludeReq.
class ns1__SelfExcludeReq;

//  Forward declaration of class ns1__SelfExcludeResp.
class ns1__SelfExcludeResp;

//  Forward declaration of class ns1__ConvertCurrencyResp.
class ns1__ConvertCurrencyResp;

//  Forward declaration of class ns1__ConvertCurrencyReq.
class ns1__ConvertCurrencyReq;

//  Forward declaration of class ns1__GetCurrenciesResp.
class ns1__GetCurrenciesResp;

//  Forward declaration of class ns1__Currency.
class ns1__Currency;

//  Forward declaration of class ns1__ArrayOfCurrency.
class ns1__ArrayOfCurrency;

//  Forward declaration of class ns1__GetCurrenciesReq.
class ns1__GetCurrenciesReq;

//  Forward declaration of class ns1__GetCurrenciesV2Resp.
class ns1__GetCurrenciesV2Resp;

//  Forward declaration of class ns1__CurrencyV2.
class ns1__CurrencyV2;

//  Forward declaration of class ns1__ArrayOfCurrencyV2.
class ns1__ArrayOfCurrencyV2;

//  Forward declaration of class ns1__GetCurrenciesV2Req.
class ns1__GetCurrenciesV2Req;

//  Forward declaration of class ns1__ViewReferAndEarnReq.
class ns1__ViewReferAndEarnReq;

//  Forward declaration of class ns1__ViewReferAndEarnResp.
class ns1__ViewReferAndEarnResp;

//  Forward declaration of class ns1__ViewProfileReq.
class ns1__ViewProfileReq;

//  Forward declaration of class ns1__ViewProfileResp.
class ns1__ViewProfileResp;

//  Forward declaration of class ns1__ViewProfileV2Req.
class ns1__ViewProfileV2Req;

//  Forward declaration of class ns1__ViewProfileV2Resp.
class ns1__ViewProfileV2Resp;

//  Forward declaration of class ns1__ModifyProfileReq.
class ns1__ModifyProfileReq;

//  Forward declaration of class ns1__ModifyProfileResp.
class ns1__ModifyProfileResp;

//  Forward declaration of class ns1__CreateAccountResp.
class ns1__CreateAccountResp;

//  Forward declaration of class ns1__ArrayOfValidationErrorsEnum.
class ns1__ArrayOfValidationErrorsEnum;

//  Forward declaration of class ns1__CreateAccountReq.
class ns1__CreateAccountReq;

//  Forward declaration of class ns1__ForgotPasswordReq.
class ns1__ForgotPasswordReq;

//  Forward declaration of class ns1__ForgotPasswordResp.
class ns1__ForgotPasswordResp;

//  Forward declaration of class ns1__ModifyPasswordReq.
class ns1__ModifyPasswordReq;

//  Forward declaration of class ns1__ModifyPasswordResp.
class ns1__ModifyPasswordResp;

//  Forward declaration of class ns1__SetChatNameReq.
class ns1__SetChatNameReq;

//  Forward declaration of class ns1__SetChatNameResp.
class ns1__SetChatNameResp;

//  Forward declaration of class _ns2__login.
class _ns2__login;

//  Forward declaration of class _ns2__loginResponse.
class _ns2__loginResponse;

//  Forward declaration of class _ns2__retrieveLIMBMessage.
class _ns2__retrieveLIMBMessage;

//  Forward declaration of class _ns2__retrieveLIMBMessageResponse.
class _ns2__retrieveLIMBMessageResponse;

//  Forward declaration of class _ns2__submitLIMBMessage.
class _ns2__submitLIMBMessage;

//  Forward declaration of class _ns2__submitLIMBMessageResponse.
class _ns2__submitLIMBMessageResponse;

//  Forward declaration of class _ns2__logout.
class _ns2__logout;

//  Forward declaration of class _ns2__logoutResponse.
class _ns2__logoutResponse;

//  Forward declaration of class _ns2__keepAlive.
class _ns2__keepAlive;

//  Forward declaration of class _ns2__keepAliveResponse.
class _ns2__keepAliveResponse;

//  Forward declaration of class _ns2__getEvents.
class _ns2__getEvents;

//  Forward declaration of class _ns2__getEventsResponse.
class _ns2__getEventsResponse;

//  Forward declaration of class _ns2__getActiveEventTypes.
class _ns2__getActiveEventTypes;

//  Forward declaration of class _ns2__getActiveEventTypesResponse.
class _ns2__getActiveEventTypesResponse;

//  Forward declaration of class _ns2__getAllEventTypes.
class _ns2__getAllEventTypes;

//  Forward declaration of class _ns2__getAllEventTypesResponse.
class _ns2__getAllEventTypesResponse;

//  Forward declaration of class _ns2__getSubscriptionInfo.
class _ns2__getSubscriptionInfo;

//  Forward declaration of class _ns2__getSubscriptionInfoResponse.
class _ns2__getSubscriptionInfoResponse;

//  Forward declaration of class _ns2__depositFromPaymentCard.
class _ns2__depositFromPaymentCard;

//  Forward declaration of class _ns2__depositFromPaymentCardResponse.
class _ns2__depositFromPaymentCardResponse;

//  Forward declaration of class _ns2__addPaymentCard.
class _ns2__addPaymentCard;

//  Forward declaration of class _ns2__addPaymentCardResponse.
class _ns2__addPaymentCardResponse;

//  Forward declaration of class _ns2__deletePaymentCard.
class _ns2__deletePaymentCard;

//  Forward declaration of class _ns2__deletePaymentCardResponse.
class _ns2__deletePaymentCardResponse;

//  Forward declaration of class _ns2__updatePaymentCard.
class _ns2__updatePaymentCard;

//  Forward declaration of class _ns2__updatePaymentCardResponse.
class _ns2__updatePaymentCardResponse;

//  Forward declaration of class _ns2__getPaymentCard.
class _ns2__getPaymentCard;

//  Forward declaration of class _ns2__getPaymentCardResponse.
class _ns2__getPaymentCardResponse;

//  Forward declaration of class _ns2__withdrawToPaymentCard.
class _ns2__withdrawToPaymentCard;

//  Forward declaration of class _ns2__withdrawToPaymentCardResponse.
class _ns2__withdrawToPaymentCardResponse;

//  Forward declaration of class _ns2__selfExclude.
class _ns2__selfExclude;

//  Forward declaration of class _ns2__selfExcludeResponse.
class _ns2__selfExcludeResponse;

//  Forward declaration of class _ns2__convertCurrency.
class _ns2__convertCurrency;

//  Forward declaration of class _ns2__convertCurrencyResponse.
class _ns2__convertCurrencyResponse;

//  Forward declaration of class _ns2__getAllCurrencies.
class _ns2__getAllCurrencies;

//  Forward declaration of class _ns2__getAllCurrenciesResponse.
class _ns2__getAllCurrenciesResponse;

//  Forward declaration of class _ns2__getAllCurrenciesV2.
class _ns2__getAllCurrenciesV2;

//  Forward declaration of class _ns2__getAllCurrenciesV2Response.
class _ns2__getAllCurrenciesV2Response;

//  Forward declaration of class _ns2__viewReferAndEarn.
class _ns2__viewReferAndEarn;

//  Forward declaration of class _ns2__viewReferAndEarnResponse.
class _ns2__viewReferAndEarnResponse;

//  Forward declaration of class _ns2__viewProfile.
class _ns2__viewProfile;

//  Forward declaration of class _ns2__viewProfileResponse.
class _ns2__viewProfileResponse;

//  Forward declaration of class _ns2__withdrawByBankTransfer.
class _ns2__withdrawByBankTransfer;

//  Forward declaration of class _ns2__withdrawByBankTransferResponse.
class _ns2__withdrawByBankTransferResponse;

//  Forward declaration of class _ns2__viewProfileV2.
class _ns2__viewProfileV2;

//  Forward declaration of class _ns2__viewProfileV2Response.
class _ns2__viewProfileV2Response;

//  Forward declaration of class _ns2__modifyProfile.
class _ns2__modifyProfile;

//  Forward declaration of class _ns2__modifyProfileResponse.
class _ns2__modifyProfileResponse;

//  Forward declaration of class _ns2__createAccount.
class _ns2__createAccount;

//  Forward declaration of class _ns2__createAccountResponse.
class _ns2__createAccountResponse;

//  Forward declaration of class _ns2__forgotPassword.
class _ns2__forgotPassword;

//  Forward declaration of class _ns2__forgotPasswordResponse.
class _ns2__forgotPasswordResponse;

//  Forward declaration of class _ns2__modifyPassword.
class _ns2__modifyPassword;

//  Forward declaration of class _ns2__modifyPasswordResponse.
class _ns2__modifyPasswordResponse;

//  Forward declaration of class _ns2__setChatName.
class _ns2__setChatName;

//  Forward declaration of class _ns2__setChatNameResponse.
class _ns2__setChatNameResponse;

//  Forward declaration of class _ns2__transferFunds.
class _ns2__transferFunds;

//  Forward declaration of class _ns2__transferFundsResponse.
class _ns2__transferFundsResponse;

//  Forward declaration of class ns3__APIResponse.
class ns3__APIResponse;

//  Forward declaration of class ns3__APIResponseHeader.
class ns3__APIResponseHeader;

//  Forward declaration of class ns3__APIRequest.
class ns3__APIRequest;

//  Forward declaration of class ns3__APIRequestHeader.
class ns3__APIRequestHeader;

//  Forward declaration of class ns3__GetAccountFundsResp.
class ns3__GetAccountFundsResp;

//  Forward declaration of class ns3__GetAccountFundsReq.
class ns3__GetAccountFundsReq;

//  Forward declaration of class ns3__GetSilksResp.
class ns3__GetSilksResp;

//  Forward declaration of class ns3__MarketDisplayDetail.
class ns3__MarketDisplayDetail;

//  Forward declaration of class ns3__ArrayOfMarketDisplayDetail.
class ns3__ArrayOfMarketDisplayDetail;

//  Forward declaration of class ns3__RacingSilk.
class ns3__RacingSilk;

//  Forward declaration of class ns3__ArrayOfRacingSilk.
class ns3__ArrayOfRacingSilk;

//  Forward declaration of class ns3__GetSilksReq.
class ns3__GetSilksReq;

//  Forward declaration of class ns3__GetSilksV2Resp.
class ns3__GetSilksV2Resp;

//  Forward declaration of class ns3__MarketDisplayDetailV2.
class ns3__MarketDisplayDetailV2;

//  Forward declaration of class ns3__ArrayOfMarketDisplayDetailV2.
class ns3__ArrayOfMarketDisplayDetailV2;

//  Forward declaration of class ns3__Breeding.
class ns3__Breeding;

//  Forward declaration of class ns3__RacingSilkV2.
class ns3__RacingSilkV2;

//  Forward declaration of class ns3__ArrayOfRacingSilkV2.
class ns3__ArrayOfRacingSilkV2;

//  Forward declaration of class ns3__GetSilksV2Req.
class ns3__GetSilksV2Req;

//  Forward declaration of class ns3__CancelBetsResp.
class ns3__CancelBetsResp;

//  Forward declaration of class ns3__CancelBetsResult.
class ns3__CancelBetsResult;

//  Forward declaration of class ns3__ArrayOfCancelBetsResult.
class ns3__ArrayOfCancelBetsResult;

//  Forward declaration of class ns3__CancelBetsReq.
class ns3__CancelBetsReq;

//  Forward declaration of class ns3__CancelBets.
class ns3__CancelBets;

//  Forward declaration of class ns3__ArrayOfCancelBets.
class ns3__ArrayOfCancelBets;

//  Forward declaration of class ns3__CancelBetsByMarketReq.
class ns3__CancelBetsByMarketReq;

//  Forward declaration of class ns3__CancelBetsByMarketResp.
class ns3__CancelBetsByMarketResp;

//  Forward declaration of class ns3__ArrayOfCancelBetsByMarketResult.
class ns3__ArrayOfCancelBetsByMarketResult;

//  Forward declaration of class ns3__CancelBetsByMarketResult.
class ns3__CancelBetsByMarketResult;

//  Forward declaration of class ns3__UpdateBetsResp.
class ns3__UpdateBetsResp;

//  Forward declaration of class ns3__UpdateBetsResult.
class ns3__UpdateBetsResult;

//  Forward declaration of class ns3__ArrayOfUpdateBetsResult.
class ns3__ArrayOfUpdateBetsResult;

//  Forward declaration of class ns3__UpdateBetsReq.
class ns3__UpdateBetsReq;

//  Forward declaration of class ns3__UpdateBets.
class ns3__UpdateBets;

//  Forward declaration of class ns3__ArrayOfUpdateBets.
class ns3__ArrayOfUpdateBets;

//  Forward declaration of class ns3__PlaceBetsResp.
class ns3__PlaceBetsResp;

//  Forward declaration of class ns3__PlaceBetsResult.
class ns3__PlaceBetsResult;

//  Forward declaration of class ns3__ArrayOfPlaceBetsResult.
class ns3__ArrayOfPlaceBetsResult;

//  Forward declaration of class ns3__PlaceBetsReq.
class ns3__PlaceBetsReq;

//  Forward declaration of class ns3__PlaceBets.
class ns3__PlaceBets;

//  Forward declaration of class ns3__ArrayOfPlaceBets.
class ns3__ArrayOfPlaceBets;

//  Forward declaration of class ns3__GetCouponResp.
class ns3__GetCouponResp;

//  Forward declaration of class ns3__CouponMarket.
class ns3__CouponMarket;

//  Forward declaration of class ns3__CouponSelection.
class ns3__CouponSelection;

//  Forward declaration of class ns3__ArrayOfCouponSelection.
class ns3__ArrayOfCouponSelection;

//  Forward declaration of class ns3__ArrayOfCouponMarket.
class ns3__ArrayOfCouponMarket;

//  Forward declaration of class ns3__GetCouponReq.
class ns3__GetCouponReq;

//  Forward declaration of class ns3__CouponLink.
class ns3__CouponLink;

//  Forward declaration of class ns3__ArrayOfCouponLinks.
class ns3__ArrayOfCouponLinks;

//  Forward declaration of class ns3__HeartbeatReq.
class ns3__HeartbeatReq;

//  Forward declaration of class ns3__HeartbeatResp.
class ns3__HeartbeatResp;

//  Forward declaration of class ns3__GetMarketResp.
class ns3__GetMarketResp;

//  Forward declaration of class ns3__Market.
class ns3__Market;

//  Forward declaration of class ns3__ArrayOfEventId.
class ns3__ArrayOfEventId;

//  Forward declaration of class ns3__Runner.
class ns3__Runner;

//  Forward declaration of class ns3__ArrayOfRunner.
class ns3__ArrayOfRunner;

//  Forward declaration of class ns3__GetMarketReq.
class ns3__GetMarketReq;

//  Forward declaration of class ns3__GetMarketPricesResp.
class ns3__GetMarketPricesResp;

//  Forward declaration of class ns3__MarketPrices.
class ns3__MarketPrices;

//  Forward declaration of class ns3__RunnerPrices.
class ns3__RunnerPrices;

//  Forward declaration of class ns3__Price.
class ns3__Price;

//  Forward declaration of class ns3__ArrayOfPrice.
class ns3__ArrayOfPrice;

//  Forward declaration of class ns3__ArrayOfRunnerPrices.
class ns3__ArrayOfRunnerPrices;

//  Forward declaration of class ns3__GetMarketPricesReq.
class ns3__GetMarketPricesReq;

//  Forward declaration of class ns3__GetAllMarketsResp.
class ns3__GetAllMarketsResp;

//  Forward declaration of class ns3__GetAllMarketsReq.
class ns3__GetAllMarketsReq;

//  Forward declaration of class ns3__ArrayOfCountryCode.
class ns3__ArrayOfCountryCode;

//  Forward declaration of class ns3__GetInPlayMarketsResp.
class ns3__GetInPlayMarketsResp;

//  Forward declaration of class ns3__GetInPlayMarketsReq.
class ns3__GetInPlayMarketsReq;

//  Forward declaration of class ns3__GetPrivateMarketsResp.
class ns3__GetPrivateMarketsResp;

//  Forward declaration of class ns3__GetPrivateMarketsReq.
class ns3__GetPrivateMarketsReq;

//  Forward declaration of class ns3__PrivateMarket.
class ns3__PrivateMarket;

//  Forward declaration of class ns3__ArrayOfPrivateMarket.
class ns3__ArrayOfPrivateMarket;

//  Forward declaration of class ns3__GetCompleteMarketPricesCompressedResp.
class ns3__GetCompleteMarketPricesCompressedResp;

//  Forward declaration of class ns3__GetCompleteMarketPricesCompressedReq.
class ns3__GetCompleteMarketPricesCompressedReq;

//  Forward declaration of class ns3__GetMarketTradedVolumeCompressedResp.
class ns3__GetMarketTradedVolumeCompressedResp;

//  Forward declaration of class ns3__GetMarketTradedVolumeCompressedReq.
class ns3__GetMarketTradedVolumeCompressedReq;

//  Forward declaration of class ns3__GetMarketPricesCompressedResp.
class ns3__GetMarketPricesCompressedResp;

//  Forward declaration of class ns3__GetMarketPricesCompressedReq.
class ns3__GetMarketPricesCompressedReq;

//  Forward declaration of class ns3__GetCurrentBetsResp.
class ns3__GetCurrentBetsResp;

//  Forward declaration of class ns3__GetMUBetsResp.
class ns3__GetMUBetsResp;

//  Forward declaration of class ns3__MUBet.
class ns3__MUBet;

//  Forward declaration of class ns3__ArrayOfMUBet.
class ns3__ArrayOfMUBet;

//  Forward declaration of class ns3__GetMUBetsReq.
class ns3__GetMUBetsReq;

//  Forward declaration of class ns3__ArrayOfBetId.
class ns3__ArrayOfBetId;

//  Forward declaration of class ns3__Bet.
class ns3__Bet;

//  Forward declaration of class ns3__Match.
class ns3__Match;

//  Forward declaration of class ns3__ArrayOfMatch.
class ns3__ArrayOfMatch;

//  Forward declaration of class ns3__ArrayOfBet.
class ns3__ArrayOfBet;

//  Forward declaration of class ns3__GetCurrentBetsReq.
class ns3__GetCurrentBetsReq;

//  Forward declaration of class ns3__GetDetailedAvailableMktDepthResp.
class ns3__GetDetailedAvailableMktDepthResp;

//  Forward declaration of class ns3__AvailabilityInfo.
class ns3__AvailabilityInfo;

//  Forward declaration of class ns3__ArrayOfAvailabilityInfo.
class ns3__ArrayOfAvailabilityInfo;

//  Forward declaration of class ns3__GetDetailedAvailableMktDepthReq.
class ns3__GetDetailedAvailableMktDepthReq;

//  Forward declaration of class ns3__GetMarketTradedVolumeResp.
class ns3__GetMarketTradedVolumeResp;

//  Forward declaration of class ns3__VolumeInfo.
class ns3__VolumeInfo;

//  Forward declaration of class ns3__ArrayOfVolumeInfo.
class ns3__ArrayOfVolumeInfo;

//  Forward declaration of class ns3__GetMarketTradedVolumeReq.
class ns3__GetMarketTradedVolumeReq;

//  Forward declaration of class ns3__GetBetHistoryResp.
class ns3__GetBetHistoryResp;

//  Forward declaration of class ns3__GetBetHistoryReq.
class ns3__GetBetHistoryReq;

//  Forward declaration of class ns3__ArrayOfMarketTypeEnum.
class ns3__ArrayOfMarketTypeEnum;

//  Forward declaration of class ns3__ArrayOfInt.
class ns3__ArrayOfInt;

//  Forward declaration of class ns3__GetAccountStatementResp.
class ns3__GetAccountStatementResp;

//  Forward declaration of class ns3__AccountStatementItem.
class ns3__AccountStatementItem;

//  Forward declaration of class ns3__ArrayOfAccountStatementItem.
class ns3__ArrayOfAccountStatementItem;

//  Forward declaration of class ns3__GetAccountStatementReq.
class ns3__GetAccountStatementReq;

//  Forward declaration of class ns3__GetMarketProfitAndLossResp.
class ns3__GetMarketProfitAndLossResp;

//  Forward declaration of class ns3__ProfitAndLoss.
class ns3__ProfitAndLoss;

//  Forward declaration of class ns3__ArrayOfProfitAndLoss.
class ns3__ArrayOfProfitAndLoss;

//  Forward declaration of class ns3__GetMarketProfitAndLossReq.
class ns3__GetMarketProfitAndLossReq;

//  Forward declaration of class ns3__GetBetResp.
class ns3__GetBetResp;

//  Forward declaration of class ns3__GetBetReq.
class ns3__GetBetReq;

//  Forward declaration of class ns3__GetBetLiteResp.
class ns3__GetBetLiteResp;

//  Forward declaration of class ns3__BetLite.
class ns3__BetLite;

//  Forward declaration of class ns3__ArrayOfBetLite.
class ns3__ArrayOfBetLite;

//  Forward declaration of class ns3__GetBetLiteReq.
class ns3__GetBetLiteReq;

//  Forward declaration of class ns3__GetBetMatchesLiteReq.
class ns3__GetBetMatchesLiteReq;

//  Forward declaration of class ns3__GetBetMatchesLiteResp.
class ns3__GetBetMatchesLiteResp;

//  Forward declaration of class ns3__MatchLite.
class ns3__MatchLite;

//  Forward declaration of class ns3__ArrayOfMatchLite.
class ns3__ArrayOfMatchLite;

//  Forward declaration of class ns3__GetCurrentBetsLiteResp.
class ns3__GetCurrentBetsLiteResp;

//  Forward declaration of class ns3__GetCurrentBetsLiteReq.
class ns3__GetCurrentBetsLiteReq;

//  Forward declaration of class ns3__MUBetLite.
class ns3__MUBetLite;

//  Forward declaration of class ns3__ArrayOfMUBetLite.
class ns3__ArrayOfMUBetLite;

//  Forward declaration of class ns3__GetMUBetsLiteResp.
class ns3__GetMUBetsLiteResp;

//  Forward declaration of class ns3__GetMUBetsLiteReq.
class ns3__GetMUBetsLiteReq;

//  Forward declaration of class ns3__GetMarketInfoResp.
class ns3__GetMarketInfoResp;

//  Forward declaration of class ns3__MarketLite.
class ns3__MarketLite;

//  Forward declaration of class ns3__GetMarketInfoReq.
class ns3__GetMarketInfoReq;

//  Forward declaration of class ns3__HandicapLine.
class ns3__HandicapLine;

//  Forward declaration of class ns3__MultiWinnerOddsLine.
class ns3__MultiWinnerOddsLine;

//  Forward declaration of class _ns4__getAccountFunds.
class _ns4__getAccountFunds;

//  Forward declaration of class _ns4__getAccountFundsResponse.
class _ns4__getAccountFundsResponse;

//  Forward declaration of class _ns4__cancelBets.
class _ns4__cancelBets;

//  Forward declaration of class _ns4__cancelBetsResponse.
class _ns4__cancelBetsResponse;

//  Forward declaration of class _ns4__cancelBetsByMarket.
class _ns4__cancelBetsByMarket;

//  Forward declaration of class _ns4__cancelBetsByMarketResponse.
class _ns4__cancelBetsByMarketResponse;

//  Forward declaration of class _ns4__heartbeat.
class _ns4__heartbeat;

//  Forward declaration of class _ns4__heartbeatResponse.
class _ns4__heartbeatResponse;

//  Forward declaration of class _ns4__getSilks.
class _ns4__getSilks;

//  Forward declaration of class _ns4__getSilksResponse.
class _ns4__getSilksResponse;

//  Forward declaration of class _ns4__getSilksV2.
class _ns4__getSilksV2;

//  Forward declaration of class _ns4__getSilksV2Response.
class _ns4__getSilksV2Response;

//  Forward declaration of class _ns4__updateBets.
class _ns4__updateBets;

//  Forward declaration of class _ns4__updateBetsResponse.
class _ns4__updateBetsResponse;

//  Forward declaration of class _ns4__placeBets.
class _ns4__placeBets;

//  Forward declaration of class _ns4__placeBetsResponse.
class _ns4__placeBetsResponse;

//  Forward declaration of class _ns4__getCoupon.
class _ns4__getCoupon;

//  Forward declaration of class _ns4__getCouponResponse.
class _ns4__getCouponResponse;

//  Forward declaration of class _ns4__getMarket.
class _ns4__getMarket;

//  Forward declaration of class _ns4__getMarketInfo.
class _ns4__getMarketInfo;

//  Forward declaration of class _ns4__getMarketInfoResponse.
class _ns4__getMarketInfoResponse;

//  Forward declaration of class _ns4__getMarketResponse.
class _ns4__getMarketResponse;

//  Forward declaration of class _ns4__getMarketPrices.
class _ns4__getMarketPrices;

//  Forward declaration of class _ns4__getMarketPricesResponse.
class _ns4__getMarketPricesResponse;

//  Forward declaration of class _ns4__getCompleteMarketPricesCompressed.
class _ns4__getCompleteMarketPricesCompressed;

//  Forward declaration of class _ns4__getCompleteMarketPricesCompressedResponse.
class _ns4__getCompleteMarketPricesCompressedResponse;

//  Forward declaration of class _ns4__getMarketTradedVolumeCompressed.
class _ns4__getMarketTradedVolumeCompressed;

//  Forward declaration of class _ns4__getMarketTradedVolumeCompressedResponse.
class _ns4__getMarketTradedVolumeCompressedResponse;

//  Forward declaration of class _ns4__getMarketPricesCompressed.
class _ns4__getMarketPricesCompressed;

//  Forward declaration of class _ns4__getMarketPricesCompressedResponse.
class _ns4__getMarketPricesCompressedResponse;

//  Forward declaration of class _ns4__getAllMarkets.
class _ns4__getAllMarkets;

//  Forward declaration of class _ns4__getAllMarketsResponse.
class _ns4__getAllMarketsResponse;

//  Forward declaration of class _ns4__getInPlayMarkets.
class _ns4__getInPlayMarkets;

//  Forward declaration of class _ns4__getInPlayMarketsResponse.
class _ns4__getInPlayMarketsResponse;

//  Forward declaration of class _ns4__getPrivateMarkets.
class _ns4__getPrivateMarkets;

//  Forward declaration of class _ns4__getPrivateMarketsResponse.
class _ns4__getPrivateMarketsResponse;

//  Forward declaration of class _ns4__getCurrentBets.
class _ns4__getCurrentBets;

//  Forward declaration of class _ns4__getCurrentBetsResponse.
class _ns4__getCurrentBetsResponse;

//  Forward declaration of class _ns4__getCurrentBetsLite.
class _ns4__getCurrentBetsLite;

//  Forward declaration of class _ns4__getCurrentBetsLiteResponse.
class _ns4__getCurrentBetsLiteResponse;

//  Forward declaration of class _ns4__getMUBets.
class _ns4__getMUBets;

//  Forward declaration of class _ns4__getMUBetsResponse.
class _ns4__getMUBetsResponse;

//  Forward declaration of class _ns4__getMUBetsLite.
class _ns4__getMUBetsLite;

//  Forward declaration of class _ns4__getMUBetsLiteResponse.
class _ns4__getMUBetsLiteResponse;

//  Forward declaration of class _ns4__getDetailAvailableMktDepth.
class _ns4__getDetailAvailableMktDepth;

//  Forward declaration of class _ns4__getDetailAvailableMktDepthResponse.
class _ns4__getDetailAvailableMktDepthResponse;

//  Forward declaration of class _ns4__getMarketTradedVolume.
class _ns4__getMarketTradedVolume;

//  Forward declaration of class _ns4__getMarketTradedVolumeResponse.
class _ns4__getMarketTradedVolumeResponse;

//  Forward declaration of class _ns4__getBetHistory.
class _ns4__getBetHistory;

//  Forward declaration of class _ns4__getBetHistoryResponse.
class _ns4__getBetHistoryResponse;

//  Forward declaration of class _ns4__getAccountStatement.
class _ns4__getAccountStatement;

//  Forward declaration of class _ns4__getAccountStatementResponse.
class _ns4__getAccountStatementResponse;

//  Forward declaration of class _ns4__getMarketProfitAndLoss.
class _ns4__getMarketProfitAndLoss;

//  Forward declaration of class _ns4__getMarketProfitAndLossResponse.
class _ns4__getMarketProfitAndLossResponse;

//  Forward declaration of class _ns4__getBet.
class _ns4__getBet;

//  Forward declaration of class _ns4__getBetResponse.
class _ns4__getBetResponse;

//  Forward declaration of class _ns4__getBetLite.
class _ns4__getBetLite;

//  Forward declaration of class _ns4__getBetLiteResponse.
class _ns4__getBetLiteResponse;

//  Forward declaration of class _ns4__getBetMatchesLite.
class _ns4__getBetMatchesLite;

//  Forward declaration of class _ns4__getBetMatchesLiteResponse.
class _ns4__getBetMatchesLiteResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/types/global/v3/                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/v3/BFGlobalService/                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/types/exchange/v5/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/v5/BFExchangeService/                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.betfair.com/publicapi/types/global/v3/":APIErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__APIErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__APIErrorEnum
{
	ns1__APIErrorEnum__OK,	///< xs:string value="OK"
	ns1__APIErrorEnum__INTERNAL_USCOREERROR,	///< xs:string value="INTERNAL_ERROR"
	ns1__APIErrorEnum__EXCEEDED_USCORETHROTTLE,	///< xs:string value="EXCEEDED_THROTTLE"
	ns1__APIErrorEnum__USER_USCORENOT_USCORESUBSCRIBED_USCORETO_USCOREPRODUCT,	///< xs:string value="USER_NOT_SUBSCRIBED_TO_PRODUCT"
	ns1__APIErrorEnum__SUBSCRIPTION_USCOREINACTIVE_USCOREOR_USCORESUSPENDED,	///< xs:string value="SUBSCRIPTION_INACTIVE_OR_SUSPENDED"
	ns1__APIErrorEnum__VENDOR_USCORESOFTWARE_USCOREINACTIVE,	///< xs:string value="VENDOR_SOFTWARE_INACTIVE"
	ns1__APIErrorEnum__VENDOR_USCORESOFTWARE_USCOREINVALID,	///< xs:string value="VENDOR_SOFTWARE_INVALID"
	ns1__APIErrorEnum__SERVICE_USCORENOT_USCOREAVAILABLE_USCOREIN_USCOREPRODUCT,	///< xs:string value="SERVICE_NOT_AVAILABLE_IN_PRODUCT"
	ns1__APIErrorEnum__NO_USCORESESSION,	///< xs:string value="NO_SESSION"
	ns1__APIErrorEnum__TOO_USCOREMANY_USCOREREQUESTS,	///< xs:string value="TOO_MANY_REQUESTS"
	ns1__APIErrorEnum__PRODUCT_USCOREREQUIRES_USCOREFUNDED_USCOREACCOUNT,	///< xs:string value="PRODUCT_REQUIRES_FUNDED_ACCOUNT"
	ns1__APIErrorEnum__SERVICE_USCORENOT_USCOREAVAILABLE_USCOREFOR_USCORELOGIN_USCORESTATUS,	///< xs:string value="SERVICE_NOT_AVAILABLE_FOR_LOGIN_STATUS"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LoginErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__LoginErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__LoginErrorEnum
{
	ns1__LoginErrorEnum__OK,	///< xs:string value="OK"
	ns1__LoginErrorEnum__OK_USCOREMESSAGES,	///< xs:string value="OK_MESSAGES"
	ns1__LoginErrorEnum__FAILED_USCOREMESSAGE,	///< xs:string value="FAILED_MESSAGE"
	ns1__LoginErrorEnum__INVALID_USCOREUSERNAME_USCOREOR_USCOREPASSWORD,	///< xs:string value="INVALID_USERNAME_OR_PASSWORD"
	ns1__LoginErrorEnum__USER_USCORENOT_USCOREACCOUNT_USCOREOWNER,	///< xs:string value="USER_NOT_ACCOUNT_OWNER"
	ns1__LoginErrorEnum__INVALID_USCOREVENDOR_USCORESOFTWARE_USCOREID,	///< xs:string value="INVALID_VENDOR_SOFTWARE_ID"
	ns1__LoginErrorEnum__INVALID_USCOREPRODUCT,	///< xs:string value="INVALID_PRODUCT"
	ns1__LoginErrorEnum__INVALID_USCORELOCATION,	///< xs:string value="INVALID_LOCATION"
	ns1__LoginErrorEnum__LOGIN_USCOREFAILED_USCOREACCOUNT_USCORELOCKED,	///< xs:string value="LOGIN_FAILED_ACCOUNT_LOCKED"
	ns1__LoginErrorEnum__ACCOUNT_USCORESUSPENDED,	///< xs:string value="ACCOUNT_SUSPENDED"
	ns1__LoginErrorEnum__T_USCOREAND_USCOREC_USCOREACCEPTANCE_USCOREREQUIRED,	///< xs:string value="T_AND_C_ACCEPTANCE_REQUIRED"
	ns1__LoginErrorEnum__POKER_USCORET_USCOREAND_USCOREC_USCOREACCEPTANCE_USCOREREQUIRED,	///< xs:string value="POKER_T_AND_C_ACCEPTANCE_REQUIRED"
	ns1__LoginErrorEnum__LOGIN_USCOREREQUIRE_USCORETERMS_USCOREAND_USCORECONDITIONS_USCOREACCEPTANCE,	///< xs:string value="LOGIN_REQUIRE_TERMS_AND_CONDITIONS_ACCEPTANCE"
	ns1__LoginErrorEnum__LOGIN_USCOREUNAUTHORIZED,	///< xs:string value="LOGIN_UNAUTHORIZED"
	ns1__LoginErrorEnum__ACCOUNT_USCORECLOSED,	///< xs:string value="ACCOUNT_CLOSED"
	ns1__LoginErrorEnum__LOGIN_USCORERESTRICTED_USCORELOCATION,	///< xs:string value="LOGIN_RESTRICTED_LOCATION"
	ns1__LoginErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveLIMBMessageErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__RetrieveLIMBMessageErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__RetrieveLIMBMessageErrorEnum
{
	ns1__RetrieveLIMBMessageErrorEnum__OK,	///< xs:string value="OK"
	ns1__RetrieveLIMBMessageErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":PrivacyPolicyChangeResponseEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__PrivacyPolicyChangeResponseEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__PrivacyPolicyChangeResponseEnum
{
	ns1__PrivacyPolicyChangeResponseEnum__NO_USCOREREPLY,	///< xs:string value="NO_REPLY"
	ns1__PrivacyPolicyChangeResponseEnum__ACCEPT,	///< xs:string value="ACCEPT"
	ns1__PrivacyPolicyChangeResponseEnum__REJECT,	///< xs:string value="REJECT"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LIMBValidationErrorsEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__LIMBValidationErrorsEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__LIMBValidationErrorsEnum
{
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREDOB,	///< xs:string value="INVALID_DOB"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREADDRESS_USCORELINE1,	///< xs:string value="INVALID_ADDRESS_LINE1"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREADDRESS_USCORELINE2,	///< xs:string value="INVALID_ADDRESS_LINE2"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREADDRESS_USCORELINE3,	///< xs:string value="INVALID_ADDRESS_LINE3"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECITY,	///< xs:string value="INVALID_CITY"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECOUNTY_USCORESTATE,	///< xs:string value="INVALID_COUNTY_STATE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECOUNTRY_USCOREOF_USCORERESIDENCE,	///< xs:string value="INVALID_COUNTRY_OF_RESIDENCE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREPOSTCODE,	///< xs:string value="INVALID_POSTCODE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREHOME_USCOREPHONE,	///< xs:string value="INVALID_HOME_PHONE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREWORK_USCOREPHONE,	///< xs:string value="INVALID_WORK_PHONE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREMOBILE_USCOREPHONE,	///< xs:string value="INVALID_MOBILE_PHONE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREEMAIL,	///< xs:string value="INVALID_EMAIL"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__LIMBValidationErrorsEnum__RESERVED_USCOREPASSWORD,	///< xs:string value="RESERVED_PASSWORD"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORENEW_USCOREPASSWORD,	///< xs:string value="INVALID_NEW_PASSWORD"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORETC_USCOREVERSION,	///< xs:string value="INVALID_TC_VERSION"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREPRIVICY_USCOREVERSION,	///< xs:string value="INVALID_PRIVICY_VERSION"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECHATNAME,	///< xs:string value="INVALID_CHATNAME"
	ns1__LIMBValidationErrorsEnum__CHATNAME_USCOREALREADY_USCORETAKEN,	///< xs:string value="CHATNAME_ALREADY_TAKEN"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCOREADDRESS_USCORELINE_USCORE1,	///< xs:string value="INVALID_CARD_BILLING_ADDRESS_LINE_1"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCOREADDRESS_USCORELINE_USCORE2,	///< xs:string value="INVALID_CARD_BILLING_ADDRESS_LINE_2"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCOREADDRESS_USCORELINE_USCORE3,	///< xs:string value="INVALID_CARD_BILLING_ADDRESS_LINE_3"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCORECITY,	///< xs:string value="INVALID_CARD_BILLING_CITY"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCORECOUNTY_USCORESTATE,	///< xs:string value="INVALID_CARD_BILLING_COUNTY_STATE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCOREZIP_USCORECODE,	///< xs:string value="INVALID_CARD_BILLING_ZIP_CODE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCORECOUNTRY_USCOREOF_USCORERESIDENCE,	///< xs:string value="INVALID_CARD_BILLING_COUNTRY_OF_RESIDENCE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCOREPERSONAL_USCOREMESSAGE,	///< xs:string value="NO_SUCH_PERSONAL_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCORETC_USCOREPRIVACY_USCOREPOLICY_USCOREMESSAGE,	///< xs:string value="NO_SUCH_TC_PRIVACY_POLICY_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCOREPASSWORD_USCORECHANGE_USCOREMESSAGE,	///< xs:string value="NO_SUCH_PASSWORD_CHANGE_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCOREBIRTH_USCOREDATE_USCORECHECK_USCOREMESSAGE,	///< xs:string value="NO_SUCH_BIRTH_DATE_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCOREADDRESS_USCORECHECK_USCOREMESSAGE,	///< xs:string value="NO_SUCH_ADDRESS_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCORECONTACT_USCOREDETAILS_USCORECHECK_USCOREMESSAGE,	///< xs:string value="NO_SUCH_CONTACT_DETAILS_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCORECHATNAME_USCORECHENGE_USCOREMESSAGE,	///< xs:string value="NO_SUCH_CHATNAME_CHENGE_MESSAGE"
	ns1__LIMBValidationErrorsEnum__NO_USCORESUCH_USCORECARD_USCOREBILLING_USCOREADDRESS_USCORECHECK_USCOREMESSAGE,	///< xs:string value="NO_SUCH_CARD_BILLING_ADDRESS_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREPERSONAL_USCOREMESSAGE_USCOREACKNOWLEDGMENT,	///< xs:string value="INVALID_PERSONAL_MESSAGE_ACKNOWLEDGMENT"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORETC_USCOREPRIVACY_USCOREPOLICY_USCOREMESSAGE_USCOREACKNOWLEDGMENT,	///< xs:string value="INVALID_TC_PRIVACY_POLICY_MESSAGE_ACKNOWLEDGMENT"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREBIRTH_USCOREDATE_USCORECHECK_USCOREMESSAGE,	///< xs:string value="INVALID_BIRTH_DATE_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCOREADDRESS_USCORECHECK_USCOREMESSAGE,	///< xs:string value="INVALID_ADDRESS_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECONTACT_USCOREDETAILS_USCORECHECK_USCOREMESSAGE,	///< xs:string value="INVALID_CONTACT_DETAILS_CHECK_MESSAGE"
	ns1__LIMBValidationErrorsEnum__INVALID_USCORECARD_USCOREBILLING_USCOREADDRESS_USCORECHECK_USCOREMESSAGE,	///< xs:string value="INVALID_CARD_BILLING_ADDRESS_CHECK_MESSAGE"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitLIMBMessageErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__SubmitLIMBMessageErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__SubmitLIMBMessageErrorEnum
{
	ns1__SubmitLIMBMessageErrorEnum__OK,	///< xs:string value="OK"
	ns1__SubmitLIMBMessageErrorEnum__VALIDATION_USCOREERRORS,	///< xs:string value="VALIDATION_ERRORS"
	ns1__SubmitLIMBMessageErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__SubmitLIMBMessageErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LogoutErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__LogoutErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__LogoutErrorEnum
{
	ns1__LogoutErrorEnum__OK,	///< xs:string value="OK"
	ns1__LogoutErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetEventsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__GetEventsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__GetEventsErrorEnum
{
	ns1__GetEventsErrorEnum__OK,	///< xs:string value="OK"
	ns1__GetEventsErrorEnum__INVALID_USCOREEVENT_USCOREID,	///< xs:string value="INVALID_EVENT_ID"
	ns1__GetEventsErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns1__GetEventsErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
	ns1__GetEventsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":MarketTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__MarketTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__MarketTypeEnum
{
	ns1__MarketTypeEnum__O,	///< xs:string value="O"
	ns1__MarketTypeEnum__L,	///< xs:string value="L"
	ns1__MarketTypeEnum__R,	///< xs:string value="R"
	ns1__MarketTypeEnum__A,	///< xs:string value="A"
	ns1__MarketTypeEnum__NOT_USCOREAPPLICABLE,	///< xs:string value="NOT_APPLICABLE"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":MarketTypeVariantEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__MarketTypeVariantEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__MarketTypeVariantEnum
{
	ns1__MarketTypeVariantEnum__D,	///< xs:string value="D"
	ns1__MarketTypeVariantEnum__ASL,	///< xs:string value="ASL"
	ns1__MarketTypeVariantEnum__ADL,	///< xs:string value="ADL"
	ns1__MarketTypeVariantEnum__COUP,	///< xs:string value="COUP"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":MarketStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__MarketStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__MarketStatusEnum
{
	ns1__MarketStatusEnum__ACTIVE,	///< xs:string value="ACTIVE"
	ns1__MarketStatusEnum__INACTIVE,	///< xs:string value="INACTIVE"
	ns1__MarketStatusEnum__CLOSED,	///< xs:string value="CLOSED"
	ns1__MarketStatusEnum__SUSPENDED,	///< xs:string value="SUSPENDED"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BillingPeriodEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__BillingPeriodEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__BillingPeriodEnum
{
	ns1__BillingPeriodEnum__WEEKLY,	///< xs:string value="WEEKLY"
	ns1__BillingPeriodEnum__MONTHLY,	///< xs:string value="MONTHLY"
	ns1__BillingPeriodEnum__QUARTERLY,	///< xs:string value="QUARTERLY"
	ns1__BillingPeriodEnum__ANNUALLY,	///< xs:string value="ANNUALLY"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ServiceEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ServiceEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ServiceEnum
{
	ns1__ServiceEnum__ADD_USCOREPAYMENT_USCORECARD,	///< xs:string value="ADD_PAYMENT_CARD"
	ns1__ServiceEnum__DELETE_USCOREPAYMENT_USCORECARD,	///< xs:string value="DELETE_PAYMENT_CARD"
	ns1__ServiceEnum__GET_USCOREPAYMENT_USCORECARD,	///< xs:string value="GET_PAYMENT_CARD"
	ns1__ServiceEnum__UPDATE_USCOREPAYMENT_USCORECARD,	///< xs:string value="UPDATE_PAYMENT_CARD"
	ns1__ServiceEnum__LOGIN,	///< xs:string value="LOGIN"
	ns1__ServiceEnum__GET_USCOREBET,	///< xs:string value="GET_BET"
	ns1__ServiceEnum__PLACE_USCOREBETS,	///< xs:string value="PLACE_BETS"
	ns1__ServiceEnum__WITHDRAW_USCORETO_USCOREPAYMENT_USCORECARD,	///< xs:string value="WITHDRAW_TO_PAYMENT_CARD"
	ns1__ServiceEnum__EDIT_USCOREBETS,	///< xs:string value="EDIT_BETS"
	ns1__ServiceEnum__DEPOSIT_USCOREFROM_USCOREPAYMENT_USCORECARD,	///< xs:string value="DEPOSIT_FROM_PAYMENT_CARD"
	ns1__ServiceEnum__CANCEL_USCOREBETS,	///< xs:string value="CANCEL_BETS"
	ns1__ServiceEnum__DO_USCOREKEEP_USCOREALIVE,	///< xs:string value="DO_KEEP_ALIVE"
	ns1__ServiceEnum__GET_USCOREACCOUNT_USCORESTATEMENT,	///< xs:string value="GET_ACCOUNT_STATEMENT"
	ns1__ServiceEnum__LOAD_USCOREMARKET_USCOREPROFIT_USCORELOSS,	///< xs:string value="LOAD_MARKET_PROFIT_LOSS"
	ns1__ServiceEnum__GET_USCORECURRENT_USCOREBETS,	///< xs:string value="GET_CURRENT_BETS"
	ns1__ServiceEnum__LOAD_USCOREACCOUNT_USCOREFUNDS,	///< xs:string value="LOAD_ACCOUNT_FUNDS"
	ns1__ServiceEnum__LOAD_USCOREBET_USCOREHISTORY,	///< xs:string value="LOAD_BET_HISTORY"
	ns1__ServiceEnum__LOAD_USCOREDETAILED_USCOREAVAIL_USCOREMKT_USCOREDEPTH,	///< xs:string value="LOAD_DETAILED_AVAIL_MKT_DEPTH"
	ns1__ServiceEnum__GET_USCOREMARKET_USCORETRADED_USCOREVOLUME,	///< xs:string value="GET_MARKET_TRADED_VOLUME"
	ns1__ServiceEnum__LOAD_USCOREEVENTS,	///< xs:string value="LOAD_EVENTS"
	ns1__ServiceEnum__LOAD_USCOREEVENT_USCORETYPES,	///< xs:string value="LOAD_EVENT_TYPES"
	ns1__ServiceEnum__LOAD_USCOREMARKET,	///< xs:string value="LOAD_MARKET"
	ns1__ServiceEnum__LOAD_USCOREMARKET_USCOREPRICES,	///< xs:string value="LOAD_MARKET_PRICES"
	ns1__ServiceEnum__LOAD_USCOREMARKET_USCOREPRICES_USCORECOMPRESSED,	///< xs:string value="LOAD_MARKET_PRICES_COMPRESSED"
	ns1__ServiceEnum__LOAD_USCORESERVICE_USCOREANNOUNCEMENTS,	///< xs:string value="LOAD_SERVICE_ANNOUNCEMENTS"
	ns1__ServiceEnum__LOAD_USCORESUBSCRIPTION_USCOREINFO,	///< xs:string value="LOAD_SUBSCRIPTION_INFO"
	ns1__ServiceEnum__CREATE_USCOREACCOUNT,	///< xs:string value="CREATE_ACCOUNT"
	ns1__ServiceEnum__CONVERT_USCORECURRENCY,	///< xs:string value="CONVERT_CURRENCY"
	ns1__ServiceEnum__GET_USCORECURRENCIES,	///< xs:string value="GET_CURRENCIES"
	ns1__ServiceEnum__FORGOT_USCOREPASSWORD,	///< xs:string value="FORGOT_PASSWORD"
	ns1__ServiceEnum__MODIFY_USCOREPASSWORD,	///< xs:string value="MODIFY_PASSWORD"
	ns1__ServiceEnum__VIEW_USCOREPROFILE,	///< xs:string value="VIEW_PROFILE"
	ns1__ServiceEnum__MODIFY_USCOREPROFILE,	///< xs:string value="MODIFY_PROFILE"
	ns1__ServiceEnum__LOGOUT,	///< xs:string value="LOGOUT"
	ns1__ServiceEnum__RETRIEVE_USCORELIMB_USCOREMESSAGE,	///< xs:string value="RETRIEVE_LIMB_MESSAGE"
	ns1__ServiceEnum__SUBMIT_USCORELIMB_USCOREMESSAGE,	///< xs:string value="SUBMIT_LIMB_MESSAGE"
	ns1__ServiceEnum__GET_USCOREMARGIN_USCOREMARKET_USCOREPRICES,	///< xs:string value="GET_MARGIN_MARKET_PRICES"
	ns1__ServiceEnum__GET_USCOREMARGIN_USCOREMARKET_USCOREPRICES_USCORECOMPRESSED,	///< xs:string value="GET_MARGIN_MARKET_PRICES_COMPRESSED"
	ns1__ServiceEnum__GENERATE_USCOREREGISTERED_USCOREMARGIN_USCOREPRICES,	///< xs:string value="GENERATE_REGISTERED_MARGIN_PRICES"
	ns1__ServiceEnum__MARGINLOGIN,	///< xs:string value="MARGINLOGIN"
	ns1__ServiceEnum__TRANSFER_USCOREFUNDS,	///< xs:string value="TRANSFER_FUNDS"
	ns1__ServiceEnum__ADD_USCOREVENDORSUBSCRIPTION,	///< xs:string value="ADD_VENDORSUBSCRIPTION"
	ns1__ServiceEnum__UPDATE_USCOREVENDORSUBSCRIPTION,	///< xs:string value="UPDATE_VENDORSUBSCRIPTION"
	ns1__ServiceEnum__CANCEL_USCOREVENDORSUBSCRIPTION,	///< xs:string value="CANCEL_VENDORSUBSCRIPTION"
	ns1__ServiceEnum__GET_USCOREVENDOR_USCOREUSERS,	///< xs:string value="GET_VENDOR_USERS"
	ns1__ServiceEnum__GET_USCOREVENDORSUBSCRIPTION_USCOREINFO,	///< xs:string value="GET_VENDORSUBSCRIPTION_INFO"
	ns1__ServiceEnum__GET_USCOREVENDOR_USCOREINFO,	///< xs:string value="GET_VENDOR_INFO"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubscriptionStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__SubscriptionStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__SubscriptionStatusEnum
{
	ns1__SubscriptionStatusEnum__ACTIVE,	///< xs:string value="ACTIVE"
	ns1__SubscriptionStatusEnum__INACTIVE,	///< xs:string value="INACTIVE"
	ns1__SubscriptionStatusEnum__SUSPENDED,	///< xs:string value="SUSPENDED"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":PaymentsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__PaymentsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__PaymentsErrorEnum
{
	ns1__PaymentsErrorEnum__OK,	///< xs:string value="OK"
	ns1__PaymentsErrorEnum__ACCOUNT_USCORESUSPENDED,	///< xs:string value="ACCOUNT_SUSPENDED"
	ns1__PaymentsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
	ns1__PaymentsErrorEnum__CARD_USCOREAMOUNT_USCOREOUTSIDE_USCORELIMIT,	///< xs:string value="CARD_AMOUNT_OUTSIDE_LIMIT"
	ns1__PaymentsErrorEnum__CARD_USCOREEXPIRED,	///< xs:string value="CARD_EXPIRED"
	ns1__PaymentsErrorEnum__CARD_USCORELOCKED,	///< xs:string value="CARD_LOCKED"
	ns1__PaymentsErrorEnum__CARD_USCORENOT_USCOREFOUND,	///< xs:string value="CARD_NOT_FOUND"
	ns1__PaymentsErrorEnum__DEPOSIT_USCOREDECLINED,	///< xs:string value="DEPOSIT_DECLINED"
	ns1__PaymentsErrorEnum__DEPOSIT_USCORELIMIT_USCOREEXCEEDED,	///< xs:string value="DEPOSIT_LIMIT_EXCEEDED"
	ns1__PaymentsErrorEnum__EXCEEDS_USCOREBALANCE,	///< xs:string value="EXCEEDS_BALANCE"
	ns1__PaymentsErrorEnum__CARD_USCORENOT_USCOREVALIDATED,	///< xs:string value="CARD_NOT_VALIDATED"
	ns1__PaymentsErrorEnum__INVALID_USCOREAMOUNT,	///< xs:string value="INVALID_AMOUNT"
	ns1__PaymentsErrorEnum__INVALID_USCORECARD_USCORECV2,	///< xs:string value="INVALID_CARD_CV2"
	ns1__PaymentsErrorEnum__INVALID_USCORECARD_USCOREDETAILS,	///< xs:string value="INVALID_CARD_DETAILS"
	ns1__PaymentsErrorEnum__INVALID_USCOREEXPIRY_USCOREDATE,	///< xs:string value="INVALID_EXPIRY_DATE"
	ns1__PaymentsErrorEnum__INVALID_USCOREMASTERCARD,	///< xs:string value="INVALID_MASTERCARD"
	ns1__PaymentsErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__PaymentsErrorEnum__CFT_USCOREMAX_USCOREWITHDRAWAL_USCORELIMIT,	///< xs:string value="CFT_MAX_WITHDRAWAL_LIMIT"
	ns1__PaymentsErrorEnum__NEGATIVE_USCORENET_USCOREDEPOSITS,	///< xs:string value="NEGATIVE_NET_DEPOSITS"
	ns1__PaymentsErrorEnum__NON_USCORESTERLING_USCORETO_USCOREUK_USCOREMASTERCARD,	///< xs:string value="NON_STERLING_TO_UK_MASTERCARD"
	ns1__PaymentsErrorEnum__NON_USCOREZERO_USCORENON_USCORENEG_USCORENET_USCOREDEPOSITS,	///< xs:string value="NON_ZERO_NON_NEG_NET_DEPOSITS"
	ns1__PaymentsErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__PaymentsErrorEnum__VISA_USCOREWITHDRAWAL_USCORENOT_USCOREPOSSIBLE,	///< xs:string value="VISA_WITHDRAWAL_NOT_POSSIBLE"
	ns1__PaymentsErrorEnum__DUPLICATE_USCOREWITHDRAWAL,	///< xs:string value="DUPLICATE_WITHDRAWAL"
	ns1__PaymentsErrorEnum__DEPOSITS_USCORENOT_USCORECLEARED,	///< xs:string value="DEPOSITS_NOT_CLEARED"
	ns1__PaymentsErrorEnum__INVALID_USCOREBANK_USCOREACCOUNT_USCOREDETAILS_USCOREFIELD,	///< xs:string value="INVALID_BANK_ACCOUNT_DETAILS_FIELD"
	ns1__PaymentsErrorEnum__EXPRESS_USCORETRANSFER_USCORENOT_USCOREAVAILABLE,	///< xs:string value="EXPRESS_TRANSFER_NOT_AVAILABLE"
	ns1__PaymentsErrorEnum__UNSUPPORTED_USCORECOUNTRY_USCOREFOR_USCOREBANK_USCORETRANSFER,	///< xs:string value="UNSUPPORTED_COUNTRY_FOR_BANK_TRANSFER"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":CardTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__CardTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__CardTypeEnum
{
	ns1__CardTypeEnum__VISA,	///< xs:string value="VISA"
	ns1__CardTypeEnum__MASTERCARD,	///< xs:string value="MASTERCARD"
	ns1__CardTypeEnum__VISADELTA,	///< xs:string value="VISADELTA"
	ns1__CardTypeEnum__SWITCH,	///< xs:string value="SWITCH"
	ns1__CardTypeEnum__SOLO,	///< xs:string value="SOLO"
	ns1__CardTypeEnum__ELECTRON,	///< xs:string value="ELECTRON"
	ns1__CardTypeEnum__LASER,	///< xs:string value="LASER"
	ns1__CardTypeEnum__MAESTRO,	///< xs:string value="MAESTRO"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":AddPaymentCardErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__AddPaymentCardErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__AddPaymentCardErrorEnum
{
	ns1__AddPaymentCardErrorEnum__OK,	///< xs:string value="OK"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORECARD_USCOREDETAILS,	///< xs:string value="INVALID_CARD_DETAILS"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORECARD_USCORECV2,	///< xs:string value="INVALID_CARD_CV2"
	ns1__AddPaymentCardErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__AddPaymentCardErrorEnum__ACCOUNT_USCOREINACTIVE,	///< xs:string value="ACCOUNT_INACTIVE"
	ns1__AddPaymentCardErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__AddPaymentCardErrorEnum__INVALID_USCOREEXPIRY_USCOREDATE,	///< xs:string value="INVALID_EXPIRY_DATE"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORESTART_USCOREDATE,	///< xs:string value="INVALID_START_DATE"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORECARD_USCORENUMBER,	///< xs:string value="INVALID_CARD_NUMBER"
	ns1__AddPaymentCardErrorEnum__INVALID_USCOREZIP_USCORECODE,	///< xs:string value="INVALID_ZIP_CODE"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORECOUNTRY_USCORECODE,	///< xs:string value="INVALID_COUNTRY_CODE"
	ns1__AddPaymentCardErrorEnum__INVALID_USCOREBILLING_USCORENAME,	///< xs:string value="INVALID_BILLING_NAME"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORECARD_USCOREADDRESS,	///< xs:string value="INVALID_CARD_ADDRESS"
	ns1__AddPaymentCardErrorEnum__CARD_USCOREALREADY_USCOREEXISTS,	///< xs:string value="CARD_ALREADY_EXISTS"
	ns1__AddPaymentCardErrorEnum__AGE_USCOREVERIFICATION_USCOREREQUIRED,	///< xs:string value="AGE_VERIFICATION_REQUIRED"
	ns1__AddPaymentCardErrorEnum__NOT_USCOREFUNDED_USCOREWITH_USCOREFIRST_USCORECARD,	///< xs:string value="NOT_FUNDED_WITH_FIRST_CARD"
	ns1__AddPaymentCardErrorEnum__CARD_USCORENOT_USCOREVALID_USCOREFOR_USCOREACCOUNT_USCORECURRENCY,	///< xs:string value="CARD_NOT_VALID_FOR_ACCOUNT_CURRENCY"
	ns1__AddPaymentCardErrorEnum__INVALID_USCORECARD_USCORETYPE,	///< xs:string value="INVALID_CARD_TYPE"
	ns1__AddPaymentCardErrorEnum__MAXIMUM_USCORENUMBER_USCOREOF_USCORECARDS_USCOREREACHED,	///< xs:string value="MAXIMUM_NUMBER_OF_CARDS_REACHED"
	ns1__AddPaymentCardErrorEnum__INVALID_USCOREISSUE_USCORENUMBER,	///< xs:string value="INVALID_ISSUE_NUMBER"
	ns1__AddPaymentCardErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":DeletePaymentCardErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__DeletePaymentCardErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__DeletePaymentCardErrorEnum
{
	ns1__DeletePaymentCardErrorEnum__OK,	///< xs:string value="OK"
	ns1__DeletePaymentCardErrorEnum__INVALID_USCORECARD_USCOREDETAILS,	///< xs:string value="INVALID_CARD_DETAILS"
	ns1__DeletePaymentCardErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__DeletePaymentCardErrorEnum__ACCOUNT_USCOREINACTIVE,	///< xs:string value="ACCOUNT_INACTIVE"
	ns1__DeletePaymentCardErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__DeletePaymentCardErrorEnum__CARD_USCORENOT_USCOREDELETED,	///< xs:string value="CARD_NOT_DELETED"
	ns1__DeletePaymentCardErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":UpdatePaymentCardErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__UpdatePaymentCardErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__UpdatePaymentCardErrorEnum
{
	ns1__UpdatePaymentCardErrorEnum__OK,	///< xs:string value="OK"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCORECARD_USCOREDETAILS,	///< xs:string value="INVALID_CARD_DETAILS"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__UpdatePaymentCardErrorEnum__ACCOUNT_USCOREINACTIVE,	///< xs:string value="ACCOUNT_INACTIVE"
	ns1__UpdatePaymentCardErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCORECOUNTRY_USCORECODE,	///< xs:string value="INVALID_COUNTRY_CODE"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCORECARD_USCOREADDRESS,	///< xs:string value="INVALID_CARD_ADDRESS"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCOREEXPIRY_USCOREDATE,	///< xs:string value="INVALID_EXPIRY_DATE"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCORESTART_USCOREDATE,	///< xs:string value="INVALID_START_DATE"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCOREZIP_USCORECODE,	///< xs:string value="INVALID_ZIP_CODE"
	ns1__UpdatePaymentCardErrorEnum__INVALID_USCOREISSUE_USCORENUMBER,	///< xs:string value="INVALID_ISSUE_NUMBER"
	ns1__UpdatePaymentCardErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
	ns1__UpdatePaymentCardErrorEnum__CARD_USCORENOT_USCOREFOUND,	///< xs:string value="CARD_NOT_FOUND"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetPaymentCardErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__GetPaymentCardErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__GetPaymentCardErrorEnum
{
	ns1__GetPaymentCardErrorEnum__OK,	///< xs:string value="OK"
	ns1__GetPaymentCardErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__GetPaymentCardErrorEnum__ACCOUNT_USCOREINACTIVE,	///< xs:string value="ACCOUNT_INACTIVE"
	ns1__GetPaymentCardErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__GetPaymentCardErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":PaymentCardStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__PaymentCardStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__PaymentCardStatusEnum
{
	ns1__PaymentCardStatusEnum__LOCKED,	///< xs:string value="LOCKED"
	ns1__PaymentCardStatusEnum__UNLOCKED,	///< xs:string value="UNLOCKED"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":WithdrawByBankTransferModeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__WithdrawByBankTransferModeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__WithdrawByBankTransferModeEnum
{
	ns1__WithdrawByBankTransferModeEnum__VALIDATE,	///< xs:string value="VALIDATE"
	ns1__WithdrawByBankTransferModeEnum__EXECUTE,	///< xs:string value="EXECUTE"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BankAccountDetailsFieldEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__BankAccountDetailsFieldEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__BankAccountDetailsFieldEnum
{
	ns1__BankAccountDetailsFieldEnum__PAYEE,	///< xs:string value="PAYEE"
	ns1__BankAccountDetailsFieldEnum__BANK_USCORELOCATION_USCOREISO3,	///< xs:string value="BANK_LOCATION_ISO3"
	ns1__BankAccountDetailsFieldEnum__BANK_USCORENAME,	///< xs:string value="BANK_NAME"
	ns1__BankAccountDetailsFieldEnum__ACCOUNT_USCOREHOLDING_USCOREBRANCH,	///< xs:string value="ACCOUNT_HOLDING_BRANCH"
	ns1__BankAccountDetailsFieldEnum__ACCOUNT_USCORENUMBER,	///< xs:string value="ACCOUNT_NUMBER"
	ns1__BankAccountDetailsFieldEnum__ACCOUNT_USCORETYPE,	///< xs:string value="ACCOUNT_TYPE"
	ns1__BankAccountDetailsFieldEnum__BANK_USCORECODE,	///< xs:string value="BANK_CODE"
	ns1__BankAccountDetailsFieldEnum__SORT_USCORECODE,	///< xs:string value="SORT_CODE"
	ns1__BankAccountDetailsFieldEnum__BANK_USCOREKEY,	///< xs:string value="BANK_KEY"
	ns1__BankAccountDetailsFieldEnum__BRANCH_USCORECODE,	///< xs:string value="BRANCH_CODE"
	ns1__BankAccountDetailsFieldEnum__ROUTING,	///< xs:string value="ROUTING"
	ns1__BankAccountDetailsFieldEnum__BANK_USCOREBSB,	///< xs:string value="BANK_BSB"
	ns1__BankAccountDetailsFieldEnum__BLZ_USCORECODE,	///< xs:string value="BLZ_CODE"
	ns1__BankAccountDetailsFieldEnum__ABI_USCORECAB,	///< xs:string value="ABI_CAB"
	ns1__BankAccountDetailsFieldEnum__BANK_USCOREGIRO_USCORECREDIT_USCORENUMBER,	///< xs:string value="BANK_GIRO_CREDIT_NUMBER"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BankAccountTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__BankAccountTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__BankAccountTypeEnum
{
	ns1__BankAccountTypeEnum__NotSpecified,	///< xs:string value="NotSpecified"
	ns1__BankAccountTypeEnum__CH,	///< xs:string value="CH"
	ns1__BankAccountTypeEnum__SA,	///< xs:string value="SA"
	ns1__BankAccountTypeEnum__TR,	///< xs:string value="TR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":TransferFundsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__TransferFundsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__TransferFundsErrorEnum
{
	ns1__TransferFundsErrorEnum__OK,	///< xs:string value="OK"
	ns1__TransferFundsErrorEnum__INVALID_USCOREAMOUNT,	///< xs:string value="INVALID_AMOUNT"
	ns1__TransferFundsErrorEnum__TRANSFER_USCOREFAILED,	///< xs:string value="TRANSFER_FAILED"
	ns1__TransferFundsErrorEnum__OVER_USCOREBALANCE,	///< xs:string value="OVER_BALANCE"
	ns1__TransferFundsErrorEnum__WALLETS_USCOREMUST_USCOREBE_USCOREDIFFERENT,	///< xs:string value="WALLETS_MUST_BE_DIFFERENT"
	ns1__TransferFundsErrorEnum__SOURCE_USCOREWALLET_USCOREUNKNOWN,	///< xs:string value="SOURCE_WALLET_UNKNOWN"
	ns1__TransferFundsErrorEnum__SOURCE_USCOREWALLET_USCORESUSPENDED,	///< xs:string value="SOURCE_WALLET_SUSPENDED"
	ns1__TransferFundsErrorEnum__SOURCE_USCOREWALLET_USCORESUSPENDED_USCOREKYC,	///< xs:string value="SOURCE_WALLET_SUSPENDED_KYC"
	ns1__TransferFundsErrorEnum__SOURCE_USCOREWALLET_USCOREKYC_USCOREWITHDRAWAL,	///< xs:string value="SOURCE_WALLET_KYC_WITHDRAWAL"
	ns1__TransferFundsErrorEnum__SOURCE_USCOREWALLET_USCOREKYC_USCOREDEPOSIT_USCORETOTAL,	///< xs:string value="SOURCE_WALLET_KYC_DEPOSIT_TOTAL"
	ns1__TransferFundsErrorEnum__SOURCE_USCOREWALLET_USCOREKYC_USCOREDEPOSIT_USCOREMONTH,	///< xs:string value="SOURCE_WALLET_KYC_DEPOSIT_MONTH"
	ns1__TransferFundsErrorEnum__TARGET_USCOREWALLET_USCOREUNKNOWN,	///< xs:string value="TARGET_WALLET_UNKNOWN"
	ns1__TransferFundsErrorEnum__TARGET_USCOREWALLET_USCORESUSPENDED,	///< xs:string value="TARGET_WALLET_SUSPENDED"
	ns1__TransferFundsErrorEnum__TARGET_USCOREWALLET_USCORESUSPENDED_USCOREKYC,	///< xs:string value="TARGET_WALLET_SUSPENDED_KYC"
	ns1__TransferFundsErrorEnum__TARGET_USCOREWALLET_USCOREKYC_USCOREWITHDRAWAL,	///< xs:string value="TARGET_WALLET_KYC_WITHDRAWAL"
	ns1__TransferFundsErrorEnum__TARGET_USCOREWALLET_USCOREKYC_USCOREDEPOSIT_USCORETOTAL,	///< xs:string value="TARGET_WALLET_KYC_DEPOSIT_TOTAL"
	ns1__TransferFundsErrorEnum__TARGET_USCOREWALLET_USCOREKYC_USCOREDEPOSIT_USCOREMONTH,	///< xs:string value="TARGET_WALLET_KYC_DEPOSIT_MONTH"
	ns1__TransferFundsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SelfExcludeErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__SelfExcludeErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__SelfExcludeErrorEnum
{
	ns1__SelfExcludeErrorEnum__OK,	///< xs:string value="OK"
	ns1__SelfExcludeErrorEnum__ACCOUNT_USCORECLOSED,	///< xs:string value="ACCOUNT_CLOSED"
	ns1__SelfExcludeErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__SelfExcludeErrorEnum__INVALID_USCORESELF_USCOREEXCLUDE_USCOREVALUE,	///< xs:string value="INVALID_SELF_EXCLUDE_VALUE"
	ns1__SelfExcludeErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ConvertCurrencyErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ConvertCurrencyErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ConvertCurrencyErrorEnum
{
	ns1__ConvertCurrencyErrorEnum__OK,	///< xs:string value="OK"
	ns1__ConvertCurrencyErrorEnum__INVALID_USCOREAMOUNT,	///< xs:string value="INVALID_AMOUNT"
	ns1__ConvertCurrencyErrorEnum__INVALID_USCOREFROM_USCORECURRENCY,	///< xs:string value="INVALID_FROM_CURRENCY"
	ns1__ConvertCurrencyErrorEnum__INVALID_USCORETO_USCORECURRENCY,	///< xs:string value="INVALID_TO_CURRENCY"
	ns1__ConvertCurrencyErrorEnum__CANNOT_USCORECONVERT,	///< xs:string value="CANNOT_CONVERT"
	ns1__ConvertCurrencyErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewReferAndEarnErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ViewReferAndEarnErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ViewReferAndEarnErrorEnum
{
	ns1__ViewReferAndEarnErrorEnum__OK,	///< xs:string value="OK"
	ns1__ViewReferAndEarnErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns1__ViewReferAndEarnErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileV2ReqVersionEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ViewProfileV2ReqVersionEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ViewProfileV2ReqVersionEnum
{
	ns1__ViewProfileV2ReqVersionEnum__V1,	///< xs:string value="V1"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ViewProfileErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ViewProfileErrorEnum
{
	ns1__ViewProfileErrorEnum__OK,	///< xs:string value="OK"
	ns1__ViewProfileErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__ViewProfileErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ModifyProfileErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ModifyProfileErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ModifyProfileErrorEnum
{
	ns1__ModifyProfileErrorEnum__OK,	///< xs:string value="OK"
	ns1__ModifyProfileErrorEnum__VALIDATION_USCOREERRORS,	///< xs:string value="VALIDATION_ERRORS"
	ns1__ModifyProfileErrorEnum__PROFILE_USCOREMODIFICATION_USCOREERROR,	///< xs:string value="PROFILE_MODIFICATION_ERROR"
	ns1__ModifyProfileErrorEnum__UNAUTHORIZED,	///< xs:string value="UNAUTHORIZED"
	ns1__ModifyProfileErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__ModifyProfileErrorEnum__ACCOUNT_USCOREINACTIVE,	///< xs:string value="ACCOUNT_INACTIVE"
	ns1__ModifyProfileErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":AccountStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__AccountStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__AccountStatusEnum
{
	ns1__AccountStatusEnum__A,	///< xs:string value="A"
	ns1__AccountStatusEnum__C,	///< xs:string value="C"
	ns1__AccountStatusEnum__D,	///< xs:string value="D"
	ns1__AccountStatusEnum__L,	///< xs:string value="L"
	ns1__AccountStatusEnum__P,	///< xs:string value="P"
	ns1__AccountStatusEnum__S,	///< xs:string value="S"
	ns1__AccountStatusEnum__T,	///< xs:string value="T"
	ns1__AccountStatusEnum__X,	///< xs:string value="X"
	ns1__AccountStatusEnum__Z,	///< xs:string value="Z"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":CreateAccountErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__CreateAccountErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__CreateAccountErrorEnum
{
	ns1__CreateAccountErrorEnum__OK,	///< xs:string value="OK"
	ns1__CreateAccountErrorEnum__VALIDATION_USCOREERRORS,	///< xs:string value="VALIDATION_ERRORS"
	ns1__CreateAccountErrorEnum__ACCOUNT_USCORECREATION_USCOREERROR,	///< xs:string value="ACCOUNT_CREATION_ERROR"
	ns1__CreateAccountErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ValidationErrorsEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ValidationErrorsEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ValidationErrorsEnum
{
	ns1__ValidationErrorsEnum__DUPLICATE_USCOREUSERNAME,	///< xs:string value="DUPLICATE_USERNAME"
	ns1__ValidationErrorsEnum__FUNDS_USCORETRANSFER_USCORECANCEL,	///< xs:string value="FUNDS_TRANSFER_CANCEL"
	ns1__ValidationErrorsEnum__FUNDS_USCORETRANSFER_USCORECURRENCY_USCOREMISMATCH,	///< xs:string value="FUNDS_TRANSFER_CURRENCY_MISMATCH"
	ns1__ValidationErrorsEnum__INCOMPLETE_USCOREDETAILS,	///< xs:string value="INCOMPLETE_DETAILS"
	ns1__ValidationErrorsEnum__INSUFFICIENT_USCOREFUNDS,	///< xs:string value="INSUFFICIENT_FUNDS"
	ns1__ValidationErrorsEnum__INVALID_USCOREACCOUNT_USCORETYPE,	///< xs:string value="INVALID_ACCOUNT_TYPE"
	ns1__ValidationErrorsEnum__INVALID_USCOREADDRESS_USCORELINE1,	///< xs:string value="INVALID_ADDRESS_LINE1"
	ns1__ValidationErrorsEnum__INVALID_USCOREADDRESS_USCORELINE2,	///< xs:string value="INVALID_ADDRESS_LINE2"
	ns1__ValidationErrorsEnum__INVALID_USCOREADDRESS_USCORELINE3,	///< xs:string value="INVALID_ADDRESS_LINE3"
	ns1__ValidationErrorsEnum__INVALID_USCOREANSWER1,	///< xs:string value="INVALID_ANSWER1"
	ns1__ValidationErrorsEnum__INVALID_USCOREANSWER2,	///< xs:string value="INVALID_ANSWER2"
	ns1__ValidationErrorsEnum__INVALID_USCOREBROWSER,	///< xs:string value="INVALID_BROWSER"
	ns1__ValidationErrorsEnum__INVALID_USCORECITY,	///< xs:string value="INVALID_CITY"
	ns1__ValidationErrorsEnum__INVALID_USCORECOUNTRY_USCOREOF_USCORERESIDENCE,	///< xs:string value="INVALID_COUNTRY_OF_RESIDENCE"
	ns1__ValidationErrorsEnum__INVALID_USCORECOUNTY_USCORESTATE,	///< xs:string value="INVALID_COUNTY_STATE"
	ns1__ValidationErrorsEnum__INVALID_USCORECURRENCY,	///< xs:string value="INVALID_CURRENCY"
	ns1__ValidationErrorsEnum__INVALID_USCOREDEPOSIT_USCORELIMIT,	///< xs:string value="INVALID_DEPOSIT_LIMIT"
	ns1__ValidationErrorsEnum__INVALID_USCOREDEPOSIT_USCORELIMIT_USCOREFREQUENCY,	///< xs:string value="INVALID_DEPOSIT_LIMIT_FREQUENCY"
	ns1__ValidationErrorsEnum__INVALID_USCOREDETAILS,	///< xs:string value="INVALID_DETAILS"
	ns1__ValidationErrorsEnum__INVALID_USCOREDOB,	///< xs:string value="INVALID_DOB"
	ns1__ValidationErrorsEnum__INVALID_USCOREEMAIL,	///< xs:string value="INVALID_EMAIL"
	ns1__ValidationErrorsEnum__INVALID_USCOREFIRSTNAME,	///< xs:string value="INVALID_FIRSTNAME"
	ns1__ValidationErrorsEnum__INVALID_USCOREGENDER,	///< xs:string value="INVALID_GENDER"
	ns1__ValidationErrorsEnum__INVALID_USCOREHOME_USCOREPHONE,	///< xs:string value="INVALID_HOME_PHONE"
	ns1__ValidationErrorsEnum__INVALID_USCOREIP_USCOREADDRESS,	///< xs:string value="INVALID_IP_ADDRESS"
	ns1__ValidationErrorsEnum__INVALID_USCORELANGUAGE,	///< xs:string value="INVALID_LANGUAGE"
	ns1__ValidationErrorsEnum__INVALID_USCORELOCALE,	///< xs:string value="INVALID_LOCALE"
	ns1__ValidationErrorsEnum__INVALID_USCORELOSS_USCORELIMIT,	///< xs:string value="INVALID_LOSS_LIMIT"
	ns1__ValidationErrorsEnum__INVALID_USCORELOSS_USCORELIMIT_USCOREFREQUENCY,	///< xs:string value="INVALID_LOSS_LIMIT_FREQUENCY"
	ns1__ValidationErrorsEnum__INVALID_USCOREMASTER_USCOREID,	///< xs:string value="INVALID_MASTER_ID"
	ns1__ValidationErrorsEnum__INVALID_USCOREMOBILE_USCOREPHONE,	///< xs:string value="INVALID_MOBILE_PHONE"
	ns1__ValidationErrorsEnum__INVALID_USCOREPARTNERID,	///< xs:string value="INVALID_PARTNERID"
	ns1__ValidationErrorsEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__ValidationErrorsEnum__INVALID_USCOREPOSTCODE,	///< xs:string value="INVALID_POSTCODE"
	ns1__ValidationErrorsEnum__INVALID_USCOREPRIVICY_USCOREVERSION,	///< xs:string value="INVALID_PRIVICY_VERSION"
	ns1__ValidationErrorsEnum__INVALID_USCOREPRODUCT_USCOREID,	///< xs:string value="INVALID_PRODUCT_ID"
	ns1__ValidationErrorsEnum__INVALID_USCOREREFERRER_USCORECODE,	///< xs:string value="INVALID_REFERRER_CODE"
	ns1__ValidationErrorsEnum__INVALID_USCOREREGION,	///< xs:string value="INVALID_REGION"
	ns1__ValidationErrorsEnum__INVALID_USCORESECURITY_USCOREQUESTION1,	///< xs:string value="INVALID_SECURITY_QUESTION1"
	ns1__ValidationErrorsEnum__INVALID_USCORESECURITY_USCOREQUESTION2,	///< xs:string value="INVALID_SECURITY_QUESTION2"
	ns1__ValidationErrorsEnum__INVALID_USCORESUBPARTNERID,	///< xs:string value="INVALID_SUBPARTNERID"
	ns1__ValidationErrorsEnum__INVALID_USCORESUPERPARTNERID,	///< xs:string value="INVALID_SUPERPARTNERID"
	ns1__ValidationErrorsEnum__INVALID_USCORESURNAME,	///< xs:string value="INVALID_SURNAME"
	ns1__ValidationErrorsEnum__INVALID_USCORETC_USCOREVERSION,	///< xs:string value="INVALID_TC_VERSION"
	ns1__ValidationErrorsEnum__INVALID_USCORETIMEZONE,	///< xs:string value="INVALID_TIMEZONE"
	ns1__ValidationErrorsEnum__INVALID_USCORETITLE,	///< xs:string value="INVALID_TITLE"
	ns1__ValidationErrorsEnum__INVALID_USCOREUSERNAME,	///< xs:string value="INVALID_USERNAME"
	ns1__ValidationErrorsEnum__INVALID_USCOREWORK_USCOREPHONE,	///< xs:string value="INVALID_WORK_PHONE"
	ns1__ValidationErrorsEnum__RESERVED_USCOREPASSWORD,	///< xs:string value="RESERVED_PASSWORD"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":AccountTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__AccountTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__AccountTypeEnum
{
	ns1__AccountTypeEnum__STANDARD,	///< xs:string value="STANDARD"
	ns1__AccountTypeEnum__MARGIN,	///< xs:string value="MARGIN"
	ns1__AccountTypeEnum__TRADING,	///< xs:string value="TRADING"
	ns1__AccountTypeEnum__AGENT_USCORECLIENT,	///< xs:string value="AGENT_CLIENT"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__GamcareLimitFreqEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__GamcareLimitFreqEnum
{
	ns1__GamcareLimitFreqEnum__DAILY,	///< xs:string value="DAILY"
	ns1__GamcareLimitFreqEnum__WEEKLY,	///< xs:string value="WEEKLY"
	ns1__GamcareLimitFreqEnum__MONTHLY,	///< xs:string value="MONTHLY"
	ns1__GamcareLimitFreqEnum__YEARLY,	///< xs:string value="YEARLY"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GenderEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__GenderEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__GenderEnum
{
	ns1__GenderEnum__M,	///< xs:string value="M"
	ns1__GenderEnum__F,	///< xs:string value="F"
	ns1__GenderEnum__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SecurityQuestion1Enum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__SecurityQuestion1Enum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__SecurityQuestion1Enum
{
	ns1__SecurityQuestion1Enum__SQ1A,	///< xs:string value="SQ1A"
	ns1__SecurityQuestion1Enum__SQ1B,	///< xs:string value="SQ1B"
	ns1__SecurityQuestion1Enum__SQ1C,	///< xs:string value="SQ1C"
	ns1__SecurityQuestion1Enum__SQ1D,	///< xs:string value="SQ1D"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SecurityQuestion2Enum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__SecurityQuestion2Enum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__SecurityQuestion2Enum
{
	ns1__SecurityQuestion2Enum__SQ2A,	///< xs:string value="SQ2A"
	ns1__SecurityQuestion2Enum__SQ2B,	///< xs:string value="SQ2B"
	ns1__SecurityQuestion2Enum__SQ2C,	///< xs:string value="SQ2C"
	ns1__SecurityQuestion2Enum__SQ2D,	///< xs:string value="SQ2D"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RegionEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__RegionEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__RegionEnum
{
	ns1__RegionEnum__ZAF,	///< xs:string value="ZAF"
	ns1__RegionEnum__NA,	///< xs:string value="NA"
	ns1__RegionEnum__NORD,	///< xs:string value="NORD"
	ns1__RegionEnum__GBR,	///< xs:string value="GBR"
	ns1__RegionEnum__IRL,	///< xs:string value="IRL"
	ns1__RegionEnum__AUS_USCORENZL,	///< xs:string value="AUS_NZL"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":TitleEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__TitleEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__TitleEnum
{
	ns1__TitleEnum__Dr,	///< xs:string value="Dr"
	ns1__TitleEnum__Mr,	///< xs:string value="Mr"
	ns1__TitleEnum__Miss,	///< xs:string value="Miss"
	ns1__TitleEnum__Mrs,	///< xs:string value="Mrs"
	ns1__TitleEnum__Ms,	///< xs:string value="Ms"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":KYCStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__KYCStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__KYCStatusEnum
{
	ns1__KYCStatusEnum__DEFAULT,	///< xs:string value="DEFAULT"
	ns1__KYCStatusEnum__AGE_USCOREVERIFIED,	///< xs:string value="AGE_VERIFIED"
	ns1__KYCStatusEnum__KYC,	///< xs:string value="KYC"
	ns1__KYCStatusEnum__KYC_USCORENON_USCOREAUS,	///< xs:string value="KYC_NON_AUS"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ForgotPasswordErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ForgotPasswordErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ForgotPasswordErrorEnum
{
	ns1__ForgotPasswordErrorEnum__OK,	///< xs:string value="OK"
	ns1__ForgotPasswordErrorEnum__INVALID_USCOREUSERNAME,	///< xs:string value="INVALID_USERNAME"
	ns1__ForgotPasswordErrorEnum__INVALID_USCORECOUNTRY_USCOREOF_USCORERESIDENCE,	///< xs:string value="INVALID_COUNTRY_OF_RESIDENCE"
	ns1__ForgotPasswordErrorEnum__INVALID_USCOREEMAIL,	///< xs:string value="INVALID_EMAIL"
	ns1__ForgotPasswordErrorEnum__INVALID_USCOREANSWER,	///< xs:string value="INVALID_ANSWER"
	ns1__ForgotPasswordErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__ForgotPasswordErrorEnum__TOO_USCOREMANY_USCOREATTEMPTS_USCOREACCOUNT_USCORESUSPENDED,	///< xs:string value="TOO_MANY_ATTEMPTS_ACCOUNT_SUSPENDED"
	ns1__ForgotPasswordErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ModifyPasswordErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__ModifyPasswordErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ModifyPasswordErrorEnum
{
	ns1__ModifyPasswordErrorEnum__OK,	///< xs:string value="OK"
	ns1__ModifyPasswordErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__ModifyPasswordErrorEnum__INVALID_USCORENEW_USCOREPASSWORD,	///< xs:string value="INVALID_NEW_PASSWORD"
	ns1__ModifyPasswordErrorEnum__PASSWORDS_USCOREDONT_USCOREMATCH,	///< xs:string value="PASSWORDS_DONT_MATCH"
	ns1__ModifyPasswordErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SetChatNameErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__SetChatNameErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__SetChatNameErrorEnum
{
	ns1__SetChatNameErrorEnum__OK,	///< xs:string value="OK"
	ns1__SetChatNameErrorEnum__INVALID_USCOREPASSWORD,	///< xs:string value="INVALID_PASSWORD"
	ns1__SetChatNameErrorEnum__ACCOUNT_USCORESUSPENDED,	///< xs:string value="ACCOUNT_SUSPENDED"
	ns1__SetChatNameErrorEnum__ACCOUNT_USCORENOT_USCOREFUNDED,	///< xs:string value="ACCOUNT_NOT_FUNDED"
	ns1__SetChatNameErrorEnum__CHAT_USCORENAME_USCOREUNAVAILABLE,	///< xs:string value="CHAT_NAME_UNAVAILABLE"
	ns1__SetChatNameErrorEnum__CANNOT_USCORECHANGE_USCORECHAT_USCORENAME,	///< xs:string value="CANNOT_CHANGE_CHAT_NAME"
	ns1__SetChatNameErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/v3/BFGlobalService/                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/types/exchange/v5/                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.betfair.com/publicapi/types/exchange/v5/":APIErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__APIErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__APIErrorEnum
{
	ns3__APIErrorEnum__OK,	///< xs:string value="OK"
	ns3__APIErrorEnum__INTERNAL_USCOREERROR,	///< xs:string value="INTERNAL_ERROR"
	ns3__APIErrorEnum__EXCEEDED_USCORETHROTTLE,	///< xs:string value="EXCEEDED_THROTTLE"
	ns3__APIErrorEnum__USER_USCORENOT_USCORESUBSCRIBED_USCORETO_USCOREPRODUCT,	///< xs:string value="USER_NOT_SUBSCRIBED_TO_PRODUCT"
	ns3__APIErrorEnum__SUBSCRIPTION_USCOREINACTIVE_USCOREOR_USCORESUSPENDED,	///< xs:string value="SUBSCRIPTION_INACTIVE_OR_SUSPENDED"
	ns3__APIErrorEnum__VENDOR_USCORESOFTWARE_USCOREINACTIVE,	///< xs:string value="VENDOR_SOFTWARE_INACTIVE"
	ns3__APIErrorEnum__VENDOR_USCORESOFTWARE_USCOREINVALID,	///< xs:string value="VENDOR_SOFTWARE_INVALID"
	ns3__APIErrorEnum__SERVICE_USCORENOT_USCOREAVAILABLE_USCOREIN_USCOREPRODUCT,	///< xs:string value="SERVICE_NOT_AVAILABLE_IN_PRODUCT"
	ns3__APIErrorEnum__NO_USCORESESSION,	///< xs:string value="NO_SESSION"
	ns3__APIErrorEnum__TOO_USCOREMANY_USCOREREQUESTS,	///< xs:string value="TOO_MANY_REQUESTS"
	ns3__APIErrorEnum__PRODUCT_USCOREREQUIRES_USCOREFUNDED_USCOREACCOUNT,	///< xs:string value="PRODUCT_REQUIRES_FUNDED_ACCOUNT"
	ns3__APIErrorEnum__SERVICE_USCORENOT_USCOREAVAILABLE_USCOREFOR_USCORELOGIN_USCORESTATUS,	///< xs:string value="SERVICE_NOT_AVAILABLE_FOR_LOGIN_STATUS"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountFundsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetAccountFundsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetAccountFundsErrorEnum
{
	ns3__GetAccountFundsErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetAccountFundsErrorEnum__EXPOSURE_USCORECALC_USCOREIN_USCOREPROGRESS,	///< xs:string value="EXPOSURE_CALC_IN_PROGRESS"
	ns3__GetAccountFundsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetSilksErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetSilksErrorEnum
{
	ns3__GetSilksErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetSilksErrorEnum__INVALID_USCORELOCALE,	///< xs:string value="INVALID_LOCALE"
	ns3__GetSilksErrorEnum__INVALID_USCORENUMBER_USCOREOF_USCOREMARKETS,	///< xs:string value="INVALID_NUMBER_OF_MARKETS"
	ns3__GetSilksErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketDisplayErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__MarketDisplayErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__MarketDisplayErrorEnum
{
	ns3__MarketDisplayErrorEnum__OK,	///< xs:string value="OK"
	ns3__MarketDisplayErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__MarketDisplayErrorEnum__NO_USCORESILKS_USCOREAVAILABLE,	///< xs:string value="NO_SILKS_AVAILABLE"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsResultEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__CancelBetsResultEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__CancelBetsResultEnum
{
	ns3__CancelBetsResultEnum__OK,	///< xs:string value="OK"
	ns3__CancelBetsResultEnum__BET_USCOREIN_USCOREPROGRESS,	///< xs:string value="BET_IN_PROGRESS"
	ns3__CancelBetsResultEnum__BBM_USCOREDAEMON_USCORENOT_USCOREAVAILABLE,	///< xs:string value="BBM_DAEMON_NOT_AVAILABLE"
	ns3__CancelBetsResultEnum__INVALID_USCOREBET_USCOREID,	///< xs:string value="INVALID_BET_ID"
	ns3__CancelBetsResultEnum__UNKNOWN_USCOREERROR,	///< xs:string value="UNKNOWN_ERROR"
	ns3__CancelBetsResultEnum__TAKEN_USCOREOR_USCORELAPSED,	///< xs:string value="TAKEN_OR_LAPSED"
	ns3__CancelBetsResultEnum__REMAINING_USCORECANCELLED,	///< xs:string value="REMAINING_CANCELLED"
	ns3__CancelBetsResultEnum__INPLAY_USCOREFORBIDDEN,	///< xs:string value="INPLAY_FORBIDDEN"
	ns3__CancelBetsResultEnum__FROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="FROM_COUNTRY_FORBIDDEN"
	ns3__CancelBetsResultEnum__INPLAY_USCOREFROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="INPLAY_FROM_COUNTRY_FORBIDDEN"
	ns3__CancelBetsResultEnum__SITE_USCOREUPGRADE,	///< xs:string value="SITE_UPGRADE"
	ns3__CancelBetsResultEnum__BET_USCORENOT_USCORECANCELLED,	///< xs:string value="BET_NOT_CANCELLED"
	ns3__CancelBetsResultEnum__BSP_USCOREBETS_USCORECANNOT_USCOREBE_USCORECANCELLED,	///< xs:string value="BSP_BETS_CANNOT_BE_CANCELLED"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__CancelBetsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__CancelBetsErrorEnum
{
	ns3__CancelBetsErrorEnum__OK,	///< xs:string value="OK"
	ns3__CancelBetsErrorEnum__BET_USCOREIN_USCOREPROGRESS,	///< xs:string value="BET_IN_PROGRESS"
	ns3__CancelBetsErrorEnum__BBM_USCOREDAEMON_USCORENOT_USCOREAVAILABLE,	///< xs:string value="BBM_DAEMON_NOT_AVAILABLE"
	ns3__CancelBetsErrorEnum__INVALID_USCORENUMER_USCOREOF_USCORECANCELLATIONS,	///< xs:string value="INVALID_NUMER_OF_CANCELLATIONS"
	ns3__CancelBetsErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__CancelBetsErrorEnum__MARKET_USCORESTATUS_USCOREINVALID,	///< xs:string value="MARKET_STATUS_INVALID"
	ns3__CancelBetsErrorEnum__MARKET_USCOREIDS_USCOREDONT_USCOREMATCH,	///< xs:string value="MARKET_IDS_DONT_MATCH"
	ns3__CancelBetsErrorEnum__INVALID_USCOREMARKET_USCOREID,	///< xs:string value="INVALID_MARKET_ID"
	ns3__CancelBetsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__CancelBetsByMarketErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__CancelBetsByMarketErrorEnum
{
	ns3__CancelBetsByMarketErrorEnum__OK,	///< xs:string value="OK"
	ns3__CancelBetsByMarketErrorEnum__INVALID_USCORENUMBER_USCOREOF_USCOREMARKETS,	///< xs:string value="INVALID_NUMBER_OF_MARKETS"
	ns3__CancelBetsByMarketErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketResultEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__CancelBetsByMarketResultEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__CancelBetsByMarketResultEnum
{
	ns3__CancelBetsByMarketResultEnum__OK,	///< xs:string value="OK"
	ns3__CancelBetsByMarketResultEnum__MARKET_USCORESTATUS_USCOREINVALID,	///< xs:string value="MARKET_STATUS_INVALID"
	ns3__CancelBetsByMarketResultEnum__UNKNOWN_USCOREERROR,	///< xs:string value="UNKNOWN_ERROR"
	ns3__CancelBetsByMarketResultEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__CancelBetsByMarketResultEnum__NO_USCOREUNMATCHED_USCOREBETS,	///< xs:string value="NO_UNMATCHED_BETS"
	ns3__CancelBetsByMarketResultEnum__INPLAY_USCOREFORBIDDEN,	///< xs:string value="INPLAY_FORBIDDEN"
	ns3__CancelBetsByMarketResultEnum__FROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="FROM_COUNTRY_FORBIDDEN"
	ns3__CancelBetsByMarketResultEnum__INPLAY_USCOREFROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="INPLAY_FROM_COUNTRY_FORBIDDEN"
	ns3__CancelBetsByMarketResultEnum__SITE_USCOREUPGRADE,	///< xs:string value="SITE_UPGRADE"
	ns3__CancelBetsByMarketResultEnum__BET_USCORENOT_USCORECANCELLED,	///< xs:string value="BET_NOT_CANCELLED"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsResultEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__UpdateBetsResultEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__UpdateBetsResultEnum
{
	ns3__UpdateBetsResultEnum__OK,	///< xs:string value="OK"
	ns3__UpdateBetsResultEnum__BET_USCOREIN_USCOREPROGRESS,	///< xs:string value="BET_IN_PROGRESS"
	ns3__UpdateBetsResultEnum__BBM_USCOREDAEMON_USCORENOT_USCOREAVAILABLE,	///< xs:string value="BBM_DAEMON_NOT_AVAILABLE"
	ns3__UpdateBetsResultEnum__BET_USCORECANCELLED_USCOREREMAINING_USCOREUNMATCHED,	///< xs:string value="BET_CANCELLED_REMAINING_UNMATCHED"
	ns3__UpdateBetsResultEnum__BET_USCORECANNOT_USCOREBE_USCOREACCEPTED,	///< xs:string value="BET_CANNOT_BE_ACCEPTED"
	ns3__UpdateBetsResultEnum__BET_USCORENOT_USCORECANCELLED,	///< xs:string value="BET_NOT_CANCELLED"
	ns3__UpdateBetsResultEnum__BET_USCORETAKEN_USCOREOR_USCORELAPSED,	///< xs:string value="BET_TAKEN_OR_LAPSED"
	ns3__UpdateBetsResultEnum__CANCELLED_USCORENOT_USCOREPLACED,	///< xs:string value="CANCELLED_NOT_PLACED"
	ns3__UpdateBetsResultEnum__ERROR_USCORELINE_USCOREEXPO_USCOREBET_USCORECANCELLED_USCORENOT_USCOREPLACED,	///< xs:string value="ERROR_LINE_EXPO_BET_CANCELLED_NOT_PLACED"
	ns3__UpdateBetsResultEnum__EVENT_USCORECLOSED_USCORECANNOT_USCOREMODIFY_USCOREBET,	///< xs:string value="EVENT_CLOSED_CANNOT_MODIFY_BET"
	ns3__UpdateBetsResultEnum__EXCEEDED_USCOREEXPOSURE_USCOREOR_USCOREAVAILABLE_USCORETO_USCOREBET_USCOREBALANCE,	///< xs:string value="EXCEEDED_EXPOSURE_OR_AVAILABLE_TO_BET_BALANCE"
	ns3__UpdateBetsResultEnum__EXPOSURE_USCORECALCULATION_USCOREERROR,	///< xs:string value="EXPOSURE_CALCULATION_ERROR"
	ns3__UpdateBetsResultEnum__EXPOSURE_USCORECALCULATION_USCOREIN_USCOREPROGRESS,	///< xs:string value="EXPOSURE_CALCULATION_IN_PROGRESS"
	ns3__UpdateBetsResultEnum__FROM_USCORECOUNTRY_USCOREON_USCOREEVENT_USCOREFORBIDDEN,	///< xs:string value="FROM_COUNTRY_ON_EVENT_FORBIDDEN"
	ns3__UpdateBetsResultEnum__INPLAY_USCOREFROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="INPLAY_FROM_COUNTRY_FORBIDDEN"
	ns3__UpdateBetsResultEnum__INSUFFICIENT_USCOREBALANCE,	///< xs:string value="INSUFFICIENT_BALANCE"
	ns3__UpdateBetsResultEnum__INVALID_USCOREBET_USCOREID,	///< xs:string value="INVALID_BET_ID"
	ns3__UpdateBetsResultEnum__INVALID_USCOREOLD_USCOREPRICE,	///< xs:string value="INVALID_OLD_PRICE"
	ns3__UpdateBetsResultEnum__INVALID_USCOREOLD_USCORESIZE,	///< xs:string value="INVALID_OLD_SIZE"
	ns3__UpdateBetsResultEnum__INVALID_USCOREPRICE,	///< xs:string value="INVALID_PRICE"
	ns3__UpdateBetsResultEnum__INVALID_USCOREPRICE_USCOREAND_USCORESIZE,	///< xs:string value="INVALID_PRICE_AND_SIZE"
	ns3__UpdateBetsResultEnum__INVALID_USCORESIZE,	///< xs:string value="INVALID_SIZE"
	ns3__UpdateBetsResultEnum__LOSS_USCORELIMIT_USCOREEXCEEDED,	///< xs:string value="LOSS_LIMIT_EXCEEDED"
	ns3__UpdateBetsResultEnum__NEW_USCOREBET_USCORESUBMITTED_USCORESUCCESSFULLY,	///< xs:string value="NEW_BET_SUBMITTED_SUCCESSFULLY"
	ns3__UpdateBetsResultEnum__NOT_USCOREPLACED_USCOREEXPOSURE_USCOREEXCEEDED,	///< xs:string value="NOT_PLACED_EXPOSURE_EXCEEDED"
	ns3__UpdateBetsResultEnum__NOT_USCOREPLACED_USCOREREMAINING_USCORECANCELLED,	///< xs:string value="NOT_PLACED_REMAINING_CANCELLED"
	ns3__UpdateBetsResultEnum__OK_USCOREREMAINING_USCORECANCELLED,	///< xs:string value="OK_REMAINING_CANCELLED"
	ns3__UpdateBetsResultEnum__PARTIAL_USCORECANCELLATION,	///< xs:string value="PARTIAL_CANCELLATION"
	ns3__UpdateBetsResultEnum__REMAINING_USCORESIZE_USCORECANCELLED,	///< xs:string value="REMAINING_SIZE_CANCELLED"
	ns3__UpdateBetsResultEnum__RUNNER_USCOREREMOVED,	///< xs:string value="RUNNER_REMOVED"
	ns3__UpdateBetsResultEnum__SITE_USCOREUPGRADE,	///< xs:string value="SITE_UPGRADE"
	ns3__UpdateBetsResultEnum__UNKNOWN_USCOREERROR,	///< xs:string value="UNKNOWN_ERROR"
	ns3__UpdateBetsResultEnum__VACANT_USCORETRAP,	///< xs:string value="VACANT_TRAP"
	ns3__UpdateBetsResultEnum__WRONG_USCOREMININUM_USCOREPERMITTED_USCOREBET_USCORESIZE,	///< xs:string value="WRONG_MININUM_PERMITTED_BET_SIZE"
	ns3__UpdateBetsResultEnum__BSP_USCOREBETS_USCORECANNOT_USCOREBE_USCORECANCELLED,	///< xs:string value="BSP_BETS_CANNOT_BE_CANCELLED"
	ns3__UpdateBetsResultEnum__BSP_USCOREBETTING_USCORENOT_USCOREALLOWED,	///< xs:string value="BSP_BETTING_NOT_ALLOWED"
	ns3__UpdateBetsResultEnum__BSP_USCOREBETTING_USCORENOT_USCORESUPPORTED,	///< xs:string value="BSP_BETTING_NOT_SUPPORTED"
	ns3__UpdateBetsResultEnum__BSP_USCOREINVALID_USCOREPRICE_USCORELIMIT,	///< xs:string value="BSP_INVALID_PRICE_LIMIT"
	ns3__UpdateBetsResultEnum__BSP_USCOREMOC_USCOREBETS_USCOREEDITING_USCORENOT_USCOREPERMITTED,	///< xs:string value="BSP_MOC_BETS_EDITING_NOT_PERMITTED"
	ns3__UpdateBetsResultEnum__INVALID_USCOREBSP_USCOREBET_USCOREUPDATE,	///< xs:string value="INVALID_BSP_BET_UPDATE"
	ns3__UpdateBetsResultEnum__INVALID_USCOREINPUTS,	///< xs:string value="INVALID_INPUTS"
	ns3__UpdateBetsResultEnum__PERSISTENCE_USCOREMODIFICATION_USCORESUCCESS,	///< xs:string value="PERSISTENCE_MODIFICATION_SUCCESS"
	ns3__UpdateBetsResultEnum__INVALID_USCORENEW_USCOREPRICE_USCORELIMIT,	///< xs:string value="INVALID_NEW_PRICE_LIMIT"
	ns3__UpdateBetsResultEnum__BSP_USCOREINVALID_USCOREPERSISTENCE,	///< xs:string value="BSP_INVALID_PERSISTENCE"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__UpdateBetsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__UpdateBetsErrorEnum
{
	ns3__UpdateBetsErrorEnum__OK,	///< xs:string value="OK"
	ns3__UpdateBetsErrorEnum__BET_USCOREIN_USCOREPROGRESS,	///< xs:string value="BET_IN_PROGRESS"
	ns3__UpdateBetsErrorEnum__BBM_USCOREDAEMON_USCORENOT_USCOREAVAILABLE,	///< xs:string value="BBM_DAEMON_NOT_AVAILABLE"
	ns3__UpdateBetsErrorEnum__ACCOUNT_USCOREPENDING,	///< xs:string value="ACCOUNT_PENDING"
	ns3__UpdateBetsErrorEnum__ACCOUNT_USCORESUSPENDED,	///< xs:string value="ACCOUNT_SUSPENDED"
	ns3__UpdateBetsErrorEnum__ACCOUNT_USCORECLOSED,	///< xs:string value="ACCOUNT_CLOSED"
	ns3__UpdateBetsErrorEnum__INVALID_USCORENUMBER_USCOREOF_USCOREBETS,	///< xs:string value="INVALID_NUMBER_OF_BETS"
	ns3__UpdateBetsErrorEnum__INVALID_USCOREMARKET_USCOREID,	///< xs:string value="INVALID_MARKET_ID"
	ns3__UpdateBetsErrorEnum__MARKET_USCORESTATUS_USCOREINVALID,	///< xs:string value="MARKET_STATUS_INVALID"
	ns3__UpdateBetsErrorEnum__FROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="FROM_COUNTRY_FORBIDDEN"
	ns3__UpdateBetsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
	ns3__UpdateBetsErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__PlaceBetsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__PlaceBetsErrorEnum
{
	ns3__PlaceBetsErrorEnum__OK,	///< xs:string value="OK"
	ns3__PlaceBetsErrorEnum__BETWEEN_USCORE1_USCOREAND_USCORE60_USCOREBETS_USCOREREQUIRED,	///< xs:string value="BETWEEN_1_AND_60_BETS_REQUIRED"
	ns3__PlaceBetsErrorEnum__EVENT_USCOREINACTIVE,	///< xs:string value="EVENT_INACTIVE"
	ns3__PlaceBetsErrorEnum__EVENT_USCORECLOSED,	///< xs:string value="EVENT_CLOSED"
	ns3__PlaceBetsErrorEnum__EVENT_USCORESUSPENDED,	///< xs:string value="EVENT_SUSPENDED"
	ns3__PlaceBetsErrorEnum__ACCOUNT_USCORECLOSED,	///< xs:string value="ACCOUNT_CLOSED"
	ns3__PlaceBetsErrorEnum__ACCOUNT_USCORESUSPENDED,	///< xs:string value="ACCOUNT_SUSPENDED"
	ns3__PlaceBetsErrorEnum__AUTHORISATION_USCOREPENDING,	///< xs:string value="AUTHORISATION_PENDING"
	ns3__PlaceBetsErrorEnum__INTERNAL_USCOREERROR,	///< xs:string value="INTERNAL_ERROR"
	ns3__PlaceBetsErrorEnum__SITE_USCOREUPGRADE,	///< xs:string value="SITE_UPGRADE"
	ns3__PlaceBetsErrorEnum__BACK_USCORELAY_USCORECOMBINATION,	///< xs:string value="BACK_LAY_COMBINATION"
	ns3__PlaceBetsErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__PlaceBetsErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__PlaceBetsErrorEnum__DIFFERING_USCOREMARKETS,	///< xs:string value="DIFFERING_MARKETS"
	ns3__PlaceBetsErrorEnum__FROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="FROM_COUNTRY_FORBIDDEN"
	ns3__PlaceBetsErrorEnum__ACCOUNT_USCOREIS_USCOREEXCLUDED,	///< xs:string value="ACCOUNT_IS_EXCLUDED"
	ns3__PlaceBetsErrorEnum__BET_USCOREIN_USCOREPROGRESS,	///< xs:string value="BET_IN_PROGRESS"
	ns3__PlaceBetsErrorEnum__BBM_USCOREDAEMON_USCORENOT_USCOREAVAILABLE,	///< xs:string value="BBM_DAEMON_NOT_AVAILABLE"
	ns3__PlaceBetsErrorEnum__BSP_USCOREBETTING_USCORENOT_USCORESUPPORTED,	///< xs:string value="BSP_BETTING_NOT_SUPPORTED"
	ns3__PlaceBetsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsResultEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__PlaceBetsResultEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__PlaceBetsResultEnum
{
	ns3__PlaceBetsResultEnum__OK,	///< xs:string value="OK"
	ns3__PlaceBetsResultEnum__BET_USCOREIN_USCOREPROGRESS,	///< xs:string value="BET_IN_PROGRESS"
	ns3__PlaceBetsResultEnum__BBM_USCOREDAEMON_USCORENOT_USCOREAVAILABLE,	///< xs:string value="BBM_DAEMON_NOT_AVAILABLE"
	ns3__PlaceBetsResultEnum__ACCOUNT_USCORECLOSED,	///< xs:string value="ACCOUNT_CLOSED"
	ns3__PlaceBetsResultEnum__ACCOUNT_USCOREIS_USCOREEXCLUDED,	///< xs:string value="ACCOUNT_IS_EXCLUDED"
	ns3__PlaceBetsResultEnum__ACCOUNT_USCORESUSPENDED,	///< xs:string value="ACCOUNT_SUSPENDED"
	ns3__PlaceBetsResultEnum__CANNOT_USCOREACCEPT_USCOREBET,	///< xs:string value="CANNOT_ACCEPT_BET"
	ns3__PlaceBetsResultEnum__EXPOSURE_USCORECALCULATION_USCOREIN_USCOREPROGRESS,	///< xs:string value="EXPOSURE_CALCULATION_IN_PROGRESS"
	ns3__PlaceBetsResultEnum__EXPOSURE_USCOREOR_USCOREAVAILABLE_USCOREBALANCE_USCOREEXCEEDED,	///< xs:string value="EXPOSURE_OR_AVAILABLE_BALANCE_EXCEEDED"
	ns3__PlaceBetsResultEnum__FROM_USCORECOUNTRY_USCOREON_USCOREEVENT_USCOREFORBIDDEN,	///< xs:string value="FROM_COUNTRY_ON_EVENT_FORBIDDEN"
	ns3__PlaceBetsResultEnum__INPLAY_USCOREFROM_USCORECOUNTRY_USCOREFORBIDDEN,	///< xs:string value="INPLAY_FROM_COUNTRY_FORBIDDEN"
	ns3__PlaceBetsResultEnum__INSUFFICIENT_USCOREBALANCE,	///< xs:string value="INSUFFICIENT_BALANCE"
	ns3__PlaceBetsResultEnum__INVALID_USCOREASIAN_USCORELINE_USCOREID,	///< xs:string value="INVALID_ASIAN_LINE_ID"
	ns3__PlaceBetsResultEnum__INVALID_USCOREBET_USCORETYPE,	///< xs:string value="INVALID_BET_TYPE"
	ns3__PlaceBetsResultEnum__INVALID_USCOREINCREMENT,	///< xs:string value="INVALID_INCREMENT"
	ns3__PlaceBetsResultEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__PlaceBetsResultEnum__INVALID_USCOREPRICE,	///< xs:string value="INVALID_PRICE"
	ns3__PlaceBetsResultEnum__INVALID_USCORESELECTION,	///< xs:string value="INVALID_SELECTION"
	ns3__PlaceBetsResultEnum__INVALID_USCORESIZE,	///< xs:string value="INVALID_SIZE"
	ns3__PlaceBetsResultEnum__LINES_USCOREOUT_USCOREOF_USCORERANGE,	///< xs:string value="LINES_OUT_OF_RANGE"
	ns3__PlaceBetsResultEnum__LOSS_USCORELIMIT_USCOREEXCEEDED,	///< xs:string value="LOSS_LIMIT_EXCEEDED"
	ns3__PlaceBetsResultEnum__SELECTION_USCOREREMOVED,	///< xs:string value="SELECTION_REMOVED"
	ns3__PlaceBetsResultEnum__UNKNOWN_USCOREERROR,	///< xs:string value="UNKNOWN_ERROR"
	ns3__PlaceBetsResultEnum__VACANT_USCORETRAP,	///< xs:string value="VACANT_TRAP"
	ns3__PlaceBetsResultEnum__EVENT_USCORECLOSED,	///< xs:string value="EVENT_CLOSED"
	ns3__PlaceBetsResultEnum__AUTHORISATION_USCOREPENDING,	///< xs:string value="AUTHORISATION_PENDING"
	ns3__PlaceBetsResultEnum__BSP_USCOREBETTING_USCORENOT_USCOREALLOWED,	///< xs:string value="BSP_BETTING_NOT_ALLOWED"
	ns3__PlaceBetsResultEnum__BSP_USCOREBETTING_USCORENOT_USCORESUPPORTED,	///< xs:string value="BSP_BETTING_NOT_SUPPORTED"
	ns3__PlaceBetsResultEnum__BSP_USCOREMULTIPLE_USCOREBETS_USCORENOT_USCOREALLOWED,	///< xs:string value="BSP_MULTIPLE_BETS_NOT_ALLOWED"
	ns3__PlaceBetsResultEnum__EVENT_USCORERECONCILED,	///< xs:string value="EVENT_RECONCILED"
	ns3__PlaceBetsResultEnum__INVALID_USCOREPERSISTENCE,	///< xs:string value="INVALID_PERSISTENCE"
	ns3__PlaceBetsResultEnum__ACCOUNT_USCORELOCKED,	///< xs:string value="ACCOUNT_LOCKED"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":BetTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__BetTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__BetTypeEnum
{
	ns3__BetTypeEnum__B,	///< xs:string value="B"
	ns3__BetTypeEnum__L,	///< xs:string value="L"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__MarketTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__MarketTypeEnum
{
	ns3__MarketTypeEnum__O,	///< xs:string value="O"
	ns3__MarketTypeEnum__L,	///< xs:string value="L"
	ns3__MarketTypeEnum__R,	///< xs:string value="R"
	ns3__MarketTypeEnum__A,	///< xs:string value="A"
	ns3__MarketTypeEnum__NOT_USCOREAPPLICABLE,	///< xs:string value="NOT_APPLICABLE"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeVariantEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__MarketTypeVariantEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__MarketTypeVariantEnum
{
	ns3__MarketTypeVariantEnum__D,	///< xs:string value="D"
	ns3__MarketTypeVariantEnum__ASL,	///< xs:string value="ASL"
	ns3__MarketTypeVariantEnum__ADL,	///< xs:string value="ADL"
	ns3__MarketTypeVariantEnum__COUP,	///< xs:string value="COUP"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCouponErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetCouponErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetCouponErrorEnum
{
	ns3__GetCouponErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetCouponErrorEnum__INVALID_USCORECOUPON_USCOREID,	///< xs:string value="INVALID_COUPON_ID"
	ns3__GetCouponErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
	ns3__GetCouponErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":HeartbeatErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__HeartbeatErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__HeartbeatErrorEnum
{
	ns3__HeartbeatErrorEnum__OK,	///< xs:string value="OK"
	ns3__HeartbeatErrorEnum__NO_USCOREBETS_USCORECANCELLED,	///< xs:string value="NO_BETS_CANCELLED"
	ns3__HeartbeatErrorEnum__BETS_USCORECANCELLED,	///< xs:string value="BETS_CANCELLED"
	ns3__HeartbeatErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetMarketErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetMarketErrorEnum
{
	ns3__GetMarketErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetMarketErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetMarketErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetMarketErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
	ns3__GetMarketErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__MarketStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__MarketStatusEnum
{
	ns3__MarketStatusEnum__ACTIVE,	///< xs:string value="ACTIVE"
	ns3__MarketStatusEnum__INACTIVE,	///< xs:string value="INACTIVE"
	ns3__MarketStatusEnum__CLOSED,	///< xs:string value="CLOSED"
	ns3__MarketStatusEnum__SUSPENDED,	///< xs:string value="SUSPENDED"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetMarketPricesErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetMarketPricesErrorEnum
{
	ns3__GetMarketPricesErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetMarketPricesErrorEnum__INVALID_USCORECURRENCY,	///< xs:string value="INVALID_CURRENCY"
	ns3__GetMarketPricesErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetMarketPricesErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetMarketPricesErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAllMarketsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetAllMarketsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetAllMarketsErrorEnum
{
	ns3__GetAllMarketsErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetAllMarketsErrorEnum__INVALID_USCORECOUNTRY_USCORECODE,	///< xs:string value="INVALID_COUNTRY_CODE"
	ns3__GetAllMarketsErrorEnum__INVALID_USCORELOCALE,	///< xs:string value="INVALID_LOCALE"
	ns3__GetAllMarketsErrorEnum__INVALID_USCOREEVENT_USCORETYPE_USCOREID,	///< xs:string value="INVALID_EVENT_TYPE_ID"
	ns3__GetAllMarketsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetInPlayMarketsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetInPlayMarketsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetInPlayMarketsErrorEnum
{
	ns3__GetInPlayMarketsErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetInPlayMarketsErrorEnum__INVALID_USCORELOCALE,	///< xs:string value="INVALID_LOCALE"
	ns3__GetInPlayMarketsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetPrivateMarketsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetPrivateMarketsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetPrivateMarketsErrorEnum
{
	ns3__GetPrivateMarketsErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetPrivateMarketsErrorEnum__INVALID_USCORELOCALE,	///< xs:string value="INVALID_LOCALE"
	ns3__GetPrivateMarketsErrorEnum__INVALID_USCOREEVENT_USCORETYPE_USCOREID,	///< xs:string value="INVALID_EVENT_TYPE_ID"
	ns3__GetPrivateMarketsErrorEnum__INVALID_USCOREMARKET_USCORETYPE,	///< xs:string value="INVALID_MARKET_TYPE"
	ns3__GetPrivateMarketsErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetPrivateMarketsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCompleteMarketPricesErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetCompleteMarketPricesErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetCompleteMarketPricesErrorEnum
{
	ns3__GetCompleteMarketPricesErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetCompleteMarketPricesErrorEnum__INVALID_USCORECURRENCY,	///< xs:string value="INVALID_CURRENCY"
	ns3__GetCompleteMarketPricesErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetCompleteMarketPricesErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetCompleteMarketPricesErrorEnum__EVENT_USCORECLOSED,	///< xs:string value="EVENT_CLOSED"
	ns3__GetCompleteMarketPricesErrorEnum__EVENT_USCORESUSPENDED,	///< xs:string value="EVENT_SUSPENDED"
	ns3__GetCompleteMarketPricesErrorEnum__EVENT_USCOREINACTIVE,	///< xs:string value="EVENT_INACTIVE"
	ns3__GetCompleteMarketPricesErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeCompressedErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetMarketTradedVolumeCompressedErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetMarketTradedVolumeCompressedErrorEnum
{
	ns3__GetMarketTradedVolumeCompressedErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__INVALID_USCORECURRENCY,	///< xs:string value="INVALID_CURRENCY"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__EVENT_USCORECLOSED,	///< xs:string value="EVENT_CLOSED"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__EVENT_USCORESUSPENDED,	///< xs:string value="EVENT_SUSPENDED"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__EVENT_USCOREINACTIVE,	///< xs:string value="EVENT_INACTIVE"
	ns3__GetMarketTradedVolumeCompressedErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetMUBetsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetMUBetsErrorEnum
{
	ns3__GetMUBetsErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetMUBetsErrorEnum__INVALID_USCORESTART_USCORERECORD,	///< xs:string value="INVALID_START_RECORD"
	ns3__GetMUBetsErrorEnum__INVALID_USCOREMARKET_USCOREID,	///< xs:string value="INVALID_MARKET_ID"
	ns3__GetMUBetsErrorEnum__INVALID_USCORERECORD_USCORECOUNT,	///< xs:string value="INVALID_RECORD_COUNT"
	ns3__GetMUBetsErrorEnum__INVALID_USCOREBET_USCORESTATUS,	///< xs:string value="INVALID_BET_STATUS"
	ns3__GetMUBetsErrorEnum__INVALID_USCOREORDER_USCOREBY_USCOREFOR_USCORESTATUS,	///< xs:string value="INVALID_ORDER_BY_FOR_STATUS"
	ns3__GetMUBetsErrorEnum__TOO_USCOREMANY_USCOREBETS_USCOREREQUESTED,	///< xs:string value="TOO_MANY_BETS_REQUESTED"
	ns3__GetMUBetsErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetMUBetsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":SortOrderEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__SortOrderEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__SortOrderEnum
{
	ns3__SortOrderEnum__DESC,	///< xs:string value="DESC"
	ns3__SortOrderEnum__ASC,	///< xs:string value="ASC"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__BetStatusEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__BetStatusEnum
{
	ns3__BetStatusEnum__U,	///< xs:string value="U"
	ns3__BetStatusEnum__M,	///< xs:string value="M"
	ns3__BetStatusEnum__S,	///< xs:string value="S"
	ns3__BetStatusEnum__C,	///< xs:string value="C"
	ns3__BetStatusEnum__V,	///< xs:string value="V"
	ns3__BetStatusEnum__L,	///< xs:string value="L"
	ns3__BetStatusEnum__MU,	///< xs:string value="MU"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__BetCategoryTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__BetCategoryTypeEnum
{
	ns3__BetCategoryTypeEnum__E,	///< xs:string value="E"
	ns3__BetCategoryTypeEnum__M,	///< xs:string value="M"
	ns3__BetCategoryTypeEnum__L,	///< xs:string value="L"
	ns3__BetCategoryTypeEnum__NONE,	///< xs:string value="NONE"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__BetPersistenceTypeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__BetPersistenceTypeEnum
{
	ns3__BetPersistenceTypeEnum__NONE,	///< xs:string value="NONE"
	ns3__BetPersistenceTypeEnum__IP,	///< xs:string value="IP"
	ns3__BetPersistenceTypeEnum__SP,	///< xs:string value="SP"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetCurrentBetsErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetCurrentBetsErrorEnum
{
	ns3__GetCurrentBetsErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetCurrentBetsErrorEnum__INVALID_USCORESTART_USCORERECORD,	///< xs:string value="INVALID_START_RECORD"
	ns3__GetCurrentBetsErrorEnum__INVALID_USCOREMARKET_USCOREID,	///< xs:string value="INVALID_MARKET_ID"
	ns3__GetCurrentBetsErrorEnum__INVALID_USCORERECORD_USCORECOUNT,	///< xs:string value="INVALID_RECORD_COUNT"
	ns3__GetCurrentBetsErrorEnum__INVALID_USCOREBET_USCORESTATUS,	///< xs:string value="INVALID_BET_STATUS"
	ns3__GetCurrentBetsErrorEnum__INVALID_USCOREORDER_USCOREBY_USCOREFOR_USCORESTATUS,	///< xs:string value="INVALID_ORDER_BY_FOR_STATUS"
	ns3__GetCurrentBetsErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
	ns3__GetCurrentBetsErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetCurrentBetsErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":BetsOrderByEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__BetsOrderByEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__BetsOrderByEnum
{
	ns3__BetsOrderByEnum__NONE,	///< xs:string value="NONE"
	ns3__BetsOrderByEnum__BET_USCOREID,	///< xs:string value="BET_ID"
	ns3__BetsOrderByEnum__MARKET_USCORENAME,	///< xs:string value="MARKET_NAME"
	ns3__BetsOrderByEnum__PLACED_USCOREDATE,	///< xs:string value="PLACED_DATE"
	ns3__BetsOrderByEnum__MATCHED_USCOREDATE,	///< xs:string value="MATCHED_DATE"
	ns3__BetsOrderByEnum__CANCELLED_USCOREDATE,	///< xs:string value="CANCELLED_DATE"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetDetailedAvailMktDepthErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetDetailedAvailMktDepthErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetDetailedAvailMktDepthErrorEnum
{
	ns3__GetDetailedAvailMktDepthErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetDetailedAvailMktDepthErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetDetailedAvailMktDepthErrorEnum__SUSPENDED_USCOREMARKET,	///< xs:string value="SUSPENDED_MARKET"
	ns3__GetDetailedAvailMktDepthErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetDetailedAvailMktDepthErrorEnum__INVALID_USCORERUNNER,	///< xs:string value="INVALID_RUNNER"
	ns3__GetDetailedAvailMktDepthErrorEnum__INVALID_USCOREASIAN_USCORELINE,	///< xs:string value="INVALID_ASIAN_LINE"
	ns3__GetDetailedAvailMktDepthErrorEnum__INVALID_USCORECURRENCY,	///< xs:string value="INVALID_CURRENCY"
	ns3__GetDetailedAvailMktDepthErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetDetailedAvailMktDepthErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetMarketTradedVolumeErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetMarketTradedVolumeErrorEnum
{
	ns3__GetMarketTradedVolumeErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetMarketTradedVolumeErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetMarketTradedVolumeErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetMarketTradedVolumeErrorEnum__INVALID_USCORERUNNER,	///< xs:string value="INVALID_RUNNER"
	ns3__GetMarketTradedVolumeErrorEnum__INVALID_USCOREASIAN_USCORELINE,	///< xs:string value="INVALID_ASIAN_LINE"
	ns3__GetMarketTradedVolumeErrorEnum__MARKET_USCORECLOSED,	///< xs:string value="MARKET_CLOSED"
	ns3__GetMarketTradedVolumeErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetMarketTradedVolumeErrorEnum__INVALID_USCORECURRENCY,	///< xs:string value="INVALID_CURRENCY"
	ns3__GetMarketTradedVolumeErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetHistoryErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetBetHistoryErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetBetHistoryErrorEnum
{
	ns3__GetBetHistoryErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetBetHistoryErrorEnum__INVALID_USCOREEVENT_USCORETYPE_USCOREID,	///< xs:string value="INVALID_EVENT_TYPE_ID"
	ns3__GetBetHistoryErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetBetHistoryErrorEnum__INVALID_USCORERECORD_USCORECOUNT,	///< xs:string value="INVALID_RECORD_COUNT"
	ns3__GetBetHistoryErrorEnum__INVALID_USCOREBET_USCORESTATUS,	///< xs:string value="INVALID_BET_STATUS"
	ns3__GetBetHistoryErrorEnum__INVALID_USCOREMARKET_USCORETYPE,	///< xs:string value="INVALID_MARKET_TYPE"
	ns3__GetBetHistoryErrorEnum__INVALID_USCOREORDER_USCOREBY,	///< xs:string value="INVALID_ORDER_BY"
	ns3__GetBetHistoryErrorEnum__INVALID_USCORESTART_USCORERECORD,	///< xs:string value="INVALID_START_RECORD"
	ns3__GetBetHistoryErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
	ns3__GetBetHistoryErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountStatementErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetAccountStatementErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetAccountStatementErrorEnum
{
	ns3__GetAccountStatementErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetAccountStatementErrorEnum__INVALID_USCORESTART_USCORERECORD,	///< xs:string value="INVALID_START_RECORD"
	ns3__GetAccountStatementErrorEnum__INVALID_USCORERECORD_USCORECOUNT,	///< xs:string value="INVALID_RECORD_COUNT"
	ns3__GetAccountStatementErrorEnum__INVALID_USCOREEND_USCOREDATE,	///< xs:string value="INVALID_END_DATE"
	ns3__GetAccountStatementErrorEnum__INVALID_USCORESTART_USCOREDATE,	///< xs:string value="INVALID_START_DATE"
	ns3__GetAccountStatementErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetAccountStatementErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
	ns3__GetAccountStatementErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":AccountStatementEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__AccountStatementEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__AccountStatementEnum
{
	ns3__AccountStatementEnum__OK,	///< xs:string value="OK"
	ns3__AccountStatementEnum__RESULT_USCOREWON,	///< xs:string value="RESULT_WON"
	ns3__AccountStatementEnum__RESULT_USCORELOST,	///< xs:string value="RESULT_LOST"
	ns3__AccountStatementEnum__RESULT_USCOREERR,	///< xs:string value="RESULT_ERR"
	ns3__AccountStatementEnum__RESULT_USCOREFIX,	///< xs:string value="RESULT_FIX"
	ns3__AccountStatementEnum__RESULT_USCORENOT_USCOREAPPLICABLE,	///< xs:string value="RESULT_NOT_APPLICABLE"
	ns3__AccountStatementEnum__ACCOUNT_USCORECREDIT,	///< xs:string value="ACCOUNT_CREDIT"
	ns3__AccountStatementEnum__ACCOUNT_USCOREDEBIT,	///< xs:string value="ACCOUNT_DEBIT"
	ns3__AccountStatementEnum__COMMISSION_USCOREREVERSAL,	///< xs:string value="COMMISSION_REVERSAL"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":AccountStatementIncludeEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__AccountStatementIncludeEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__AccountStatementIncludeEnum
{
	ns3__AccountStatementIncludeEnum__ALL,	///< xs:string value="ALL"
	ns3__AccountStatementIncludeEnum__EXCHANGE,	///< xs:string value="EXCHANGE"
	ns3__AccountStatementIncludeEnum__POKER_USCOREROOM,	///< xs:string value="POKER_ROOM"
	ns3__AccountStatementIncludeEnum__DEPOSITS_USCOREWITHDRAWALS,	///< xs:string value="DEPOSITS_WITHDRAWALS"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketProfitAndLossErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetMarketProfitAndLossErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetMarketProfitAndLossErrorEnum
{
	ns3__GetMarketProfitAndLossErrorEnum__INVALID_USCOREMARKET,	///< xs:string value="INVALID_MARKET"
	ns3__GetMarketProfitAndLossErrorEnum__UNSUPPORTED_USCOREMARKET_USCORETYPE,	///< xs:string value="UNSUPPORTED_MARKET_TYPE"
	ns3__GetMarketProfitAndLossErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetMarketProfitAndLossErrorEnum__MARKET_USCORECLOSED,	///< xs:string value="MARKET_CLOSED"
	ns3__GetMarketProfitAndLossErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
	ns3__GetMarketProfitAndLossErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetErrorEnum is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__GetBetErrorEnum' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__GetBetErrorEnum
{
	ns3__GetBetErrorEnum__OK,	///< xs:string value="OK"
	ns3__GetBetErrorEnum__MARKET_USCORETYPE_USCORENOT_USCORESUPPORTED,	///< xs:string value="MARKET_TYPE_NOT_SUPPORTED"
	ns3__GetBetErrorEnum__BET_USCOREID_USCOREINVALID,	///< xs:string value="BET_ID_INVALID"
	ns3__GetBetErrorEnum__NO_USCORERESULTS,	///< xs:string value="NO_RESULTS"
	ns3__GetBetErrorEnum__API_USCOREERROR,	///< xs:string value="API_ERROR"
	ns3__GetBetErrorEnum__INVALID_USCORELOCALE_USCOREDEFAULTING_USCORETO_USCOREENGLISH,	///< xs:string value="INVALID_LOCALE_DEFAULTING_TO_ENGLISH"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/v5/BFExchangeService/                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/v3/BFGlobalService/                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/types/exchange/v5/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.betfair.com/publicapi/v5/BFExchangeService/                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.betfair.com/publicapi/types/global/v3/                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.betfair.com/publicapi/types/global/v3/":APIResponse is an abstract complexType.
class ns1__APIResponse
{ public:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader is a complexType.
class ns1__APIResponseHeader
{ public:
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":APIErrorEnum.
    enum ns1__APIErrorEnum               errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element sessionToken of type xs:string.
    std::string*                         sessionToken                  ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t                               timestamp                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LoginReq is a complexType.
class ns1__LoginReq
{ public:
/// Element ipAddress of type xs:string.
    std::string                          ipAddress                      1;	///< Required element.
/// Element locationId of type xs:int.
    int                                  locationId                     1;	///< Required element.
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element productId of type xs:int.
    int                                  productId                      1;	///< Required element.
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// Element vendorSoftwareId of type xs:int.
    int                                  vendorSoftwareId               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrievePersonalLIMBMessage is a complexType.
class ns1__RetrievePersonalLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element message of type xs:string.
    std::string                          message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveTCPrivacyPolicyChangeLIMBMessage is a complexType.
class ns1__RetrieveTCPrivacyPolicyChangeLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element reasonForChange of type xs:string.
    std::string                          reasonForChange                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrievePasswordChangeLIMBMessage is a complexType.
class ns1__RetrievePasswordChangeLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveBirthDateCheckLIMBMessage is a complexType.
class ns1__RetrieveBirthDateCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element birthDate of type xs:dateTime.
    time_t*                              birthDate                     ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveAddressCheckLIMBMessage is a complexType.
class ns1__RetrieveAddressCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element address1 of type xs:string.
    std::string                          address1                       1;	///< Required element.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element town of type xs:string.
    std::string*                         town                          ;	///< Nullable pointer.
/// Element county of type xs:string.
    std::string*                         county                        ;	///< Nullable pointer.
/// Element zipCode of type xs:string.
    std::string*                         zipCode                       ;	///< Nullable pointer.
/// Element country of type xs:string.
    std::string*                         country                       ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveContactDetailsCheckLIMBMessage is a complexType.
class ns1__RetrieveContactDetailsCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element homeTelephone of type xs:string.
    std::string*                         homeTelephone                 ;	///< Nullable pointer.
/// Element workTelephone of type xs:string.
    std::string*                         workTelephone                 ;	///< Nullable pointer.
/// Element mobileTelephone of type xs:string.
    std::string*                         mobileTelephone               ;	///< Nullable pointer.
/// Element emailAddress of type xs:string.
    std::string*                         emailAddress                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveChatNameChangeLIMBMessage is a complexType.
class ns1__RetrieveChatNameChangeLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element chatName of type xs:string.
    std::string                          chatName                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfRetrieveCardBillingAddressCheckLIMBMessage is a complexType.
class ns1__ArrayOfRetrieveCardBillingAddressCheckLIMBMessage
{ public:
/// Vector of ns1__RetrieveCardBillingAddressCheckLIMBMessage* with length 0..3
    std::vector<ns1__RetrieveCardBillingAddressCheckLIMBMessage*> ns1__retrieveCardBillingAddressCheckLIMBMessage 0:3;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveCardBillingAddressCheckLIMBMessage is a complexType.
class ns1__RetrieveCardBillingAddressCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element enforceDate of type xs:dateTime.
    time_t*                              enforceDate                   ;	///< Nullable pointer.
/// Element indicator of type xs:boolean.
    bool                                 indicator                      1;	///< Required element.
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element cardShortNumber of type xs:string.
    std::string                          cardShortNumber                1;	///< Required element.
/// Element address1 of type xs:string.
    std::string                          address1                       1;	///< Required element.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element town of type xs:string.
    std::string*                         town                          ;	///< Nullable pointer.
/// Element county of type xs:string.
    std::string*                         county                        ;	///< Nullable pointer.
/// Element zipCode of type xs:string.
    std::string*                         zipCode                       ;	///< Nullable pointer.
/// Element country of type xs:string.
    std::string*                         country                       ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitPersonalLIMBMessage is a complexType.
class ns1__SubmitPersonalLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element acknowledgment of type xs:string.
    std::string*                         acknowledgment                ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitTCPrivacyPolicyChangeLIMBMessage is a complexType.
class ns1__SubmitTCPrivacyPolicyChangeLIMBMessage
{ public:
/// Element tCPrivacyPolicyChangeAcceptance of type "http://www.betfair.com/publicapi/types/global/v3/":PrivacyPolicyChangeResponseEnum.
    enum ns1__PrivacyPolicyChangeResponseEnum  tCPrivacyPolicyChangeAcceptance 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitPasswordChangeLIMBMessage is a complexType.
class ns1__SubmitPasswordChangeLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element newPassword of type xs:string.
    std::string*                         newPassword                   ;	///< Nullable pointer.
/// Element newPasswordRepeat of type xs:string.
    std::string*                         newPasswordRepeat             ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitBirthDateCheckLIMBMessage is a complexType.
class ns1__SubmitBirthDateCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element detailsCorrect of type xs:string.
    std::string*                         detailsCorrect                ;	///< Nullable pointer.
/// Element correctBirthDate of type xs:dateTime.
    time_t*                              correctBirthDate              ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitAddressCheckLIMBMessage is a complexType.
class ns1__SubmitAddressCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element detailsCorrect of type xs:string.
    std::string*                         detailsCorrect                ;	///< Nullable pointer.
/// Element newAddress1 of type xs:string.
    std::string*                         newAddress1                   ;	///< Nullable pointer.
/// Element newAddress2 of type xs:string.
    std::string*                         newAddress2                   ;	///< Nullable pointer.
/// Element newAddress3 of type xs:string.
    std::string*                         newAddress3                   ;	///< Nullable pointer.
/// Element newTown of type xs:string.
    std::string*                         newTown                       ;	///< Nullable pointer.
/// Element newCounty of type xs:string.
    std::string*                         newCounty                     ;	///< Nullable pointer.
/// Element newZipCode of type xs:string.
    std::string*                         newZipCode                    ;	///< Nullable pointer.
/// Element newCountry of type xs:string.
    std::string*                         newCountry                    ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitContactDetailsCheckLIMBMessage is a complexType.
class ns1__SubmitContactDetailsCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element detailsCorrect of type xs:string.
    std::string*                         detailsCorrect                ;	///< Nullable pointer.
/// Element newHomeTelephone of type xs:string.
    std::string*                         newHomeTelephone              ;	///< Nullable pointer.
/// Element newWorkTelephone of type xs:string.
    std::string*                         newWorkTelephone              ;	///< Nullable pointer.
/// Element newMobileTelephone of type xs:string.
    std::string*                         newMobileTelephone            ;	///< Nullable pointer.
/// Element newEmailAddress of type xs:string.
    std::string*                         newEmailAddress               ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitChatNameChangeLIMBMessage is a complexType.
class ns1__SubmitChatNameChangeLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element newChatName of type xs:string.
    std::string*                         newChatName                   ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfSubmitCardBillingAddressCheckLIMBMessage is a complexType.
class ns1__ArrayOfSubmitCardBillingAddressCheckLIMBMessage
{ public:
/// Vector of ns1__SubmitCardBillingAddressCheckLIMBMessage* with length 0..3
    std::vector<ns1__SubmitCardBillingAddressCheckLIMBMessage*> ns1__submitCardBillingAddressCheckLIMBMessage 0:3;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitCardBillingAddressCheckLIMBMessage is a complexType.
class ns1__SubmitCardBillingAddressCheckLIMBMessage
{ public:
/// Element messageId of type xs:int.
    int*                                 messageId                     ;	///< Nullable pointer.
/// Element detailsCorrect of type xs:string.
    std::string*                         detailsCorrect                ;	///< Nullable pointer.
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element newAddress1 of type xs:string.
    std::string*                         newAddress1                   ;	///< Nullable pointer.
/// Element newAddress2 of type xs:string.
    std::string*                         newAddress2                   ;	///< Nullable pointer.
/// Element newAddress3 of type xs:string.
    std::string*                         newAddress3                   ;	///< Nullable pointer.
/// Element newTown of type xs:string.
    std::string*                         newTown                       ;	///< Nullable pointer.
/// Element newCounty of type xs:string.
    std::string*                         newCounty                     ;	///< Nullable pointer.
/// Element newZipCode of type xs:string.
    std::string*                         newZipCode                    ;	///< Nullable pointer.
/// Element newCountry of type xs:string.
    std::string*                         newCountry                    ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfLIMBValidationErrorsEnum is a complexType.
class ns1__ArrayOfLIMBValidationErrorsEnum
{ public:
/// Vector of enum ns1__LIMBValidationErrorsEnum with length 0..unbounded
    std::vector<enum ns1__LIMBValidationErrorsEnum> ns1__LIMBValidationErrorsEnum  0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":APIRequest is an abstract complexType.
class ns1__APIRequest
{ public:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader is a complexType.
class ns1__APIRequestHeader
{ public:
/// Element clientStamp of type xs:long.
    LONG64                               clientStamp                    1;	///< Required element.
/// Element sessionToken of type xs:string.
    std::string*                         sessionToken                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BFEvent is a complexType.
class ns1__BFEvent
{ public:
/// Element eventId of type xs:int.
    int                                  eventId                        1;	///< Required element.
/// Element eventName of type xs:string.
    std::string*                         eventName                     ;	///< Nullable pointer.
/// Element eventTypeId of type xs:int.
    int                                  eventTypeId                    1;	///< Required element.
/// Element menuLevel of type xs:int.
    int                                  menuLevel                      1;	///< Required element.
/// Element orderIndex of type xs:int.
    int                                  orderIndex                     1;	///< Required element.
/// Element startTime of type xs:dateTime.
    time_t                               startTime                      1;	///< Required element.
/// Element timezone of type xs:string.
    std::string*                         timezone                      ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfBFEvent is a complexType.
class ns1__ArrayOfBFEvent
{ public:
/// Vector of ns1__BFEvent* with length 0..unbounded
    std::vector<ns1__BFEvent*          > ns1__BFEvent_                  0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":MarketSummary is a complexType.
class ns1__MarketSummary
{ public:
/// Element eventTypeId of type xs:int.
    int                                  eventTypeId                    1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element marketName of type xs:string.
    std::string*                         marketName                    ;	///< Nullable pointer.
/// Element marketType of type "http://www.betfair.com/publicapi/types/global/v3/":MarketTypeEnum.
    enum ns1__MarketTypeEnum             marketType                     1;	///< Required element.
/// Element marketTypeVariant of type "http://www.betfair.com/publicapi/types/global/v3/":MarketTypeVariantEnum.
    enum ns1__MarketTypeVariantEnum      marketTypeVariant              1;	///< Required element.
/// Element menuLevel of type xs:int.
    int                                  menuLevel                      1;	///< Required element.
/// Element orderIndex of type xs:int.
    int                                  orderIndex                     1;	///< Required element.
/// Element startTime of type xs:dateTime.
    time_t                               startTime                      1;	///< Required element.
/// Element timezone of type xs:string.
    std::string*                         timezone                      ;	///< Nullable pointer.
/// Element venue of type xs:string.
    std::string*                         venue                         ;	///< Nullable pointer.
/// Element betDelay of type xs:int.
    int                                  betDelay                       1;	///< Required element.
/// Element numberOfWinners of type xs:int.
    int                                  numberOfWinners                1;	///< Required element.
/// Element eventParentId of type xs:int.
    int                                  eventParentId                  1;	///< Required element.
/// Element exchangeId of type xs:int.
    int                                  exchangeId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfMarketSummary is a complexType.
class ns1__ArrayOfMarketSummary
{ public:
/// Vector of ns1__MarketSummary* with length 0..unbounded
    std::vector<ns1__MarketSummary*    > ns1__MarketSummary_            0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":CouponLink is a complexType.
class ns1__CouponLink
{ public:
/// Element couponId of type xs:int.
    int                                  couponId                       1;	///< Required element.
/// Element couponName of type xs:string.
    std::string*                         couponName                    ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfCouponLinks is a complexType.
class ns1__ArrayOfCouponLinks
{ public:
/// Vector of ns1__CouponLink* with length 0..unbounded
    std::vector<ns1__CouponLink*       > ns1__CouponLink_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":EventType is a complexType.
class ns1__EventType
{ public:
/// Element id of type xs:int.
    int                                  id                             1;	///< Required element.
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element nextMarketId of type xs:int.
    int                                  nextMarketId                   1;	///< Required element.
/// Element exchangeId of type xs:int.
    int                                  exchangeId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfEventType is a complexType.
class ns1__ArrayOfEventType
{ public:
/// Vector of ns1__EventType* with length 0..unbounded
    std::vector<ns1__EventType*        > ns1__EventType_                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":Runner is a complexType.
class ns1__Runner
{ public:
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element handicap of type xs:double.
    double                               handicap                       1;	///< Required element.
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":Subscription is a complexType.
class ns1__Subscription
{ public:
/// Element billingAmount of type xs:double.
    double                               billingAmount                  1;	///< Required element.
/// Element billingDate of type xs:dateTime.
    time_t                               billingDate                    1;	///< Required element.
/// Element billingPeriod of type "http://www.betfair.com/publicapi/types/global/v3/":BillingPeriodEnum.
    enum ns1__BillingPeriodEnum          billingPeriod                  1;	///< Required element.
/// Element productId of type xs:int.
    int                                  productId                      1;	///< Required element.
/// Element productName of type xs:string.
    std::string*                         productName                   ;	///< Nullable pointer.
/// Element services of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfServiceCall.
    ns1__ArrayOfServiceCall*             services                      ;	///< Nullable pointer.
/// Element setupCharge of type xs:double.
    double                               setupCharge                    1;	///< Required element.
/// Element setupChargeActive of type xs:boolean.
    bool                                 setupChargeActive              1;	///< Required element.
/// Element status of type "http://www.betfair.com/publicapi/types/global/v3/":SubscriptionStatusEnum.
    enum ns1__SubscriptionStatusEnum     status                         1;	///< Required element.
/// Element subscribedDate of type xs:dateTime.
    time_t                               subscribedDate                 1;	///< Required element.
/// Element vatEnabled of type xs:boolean.
    bool                                 vatEnabled                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ServiceCall is a complexType.
class ns1__ServiceCall
{ public:
/// Element maxUsages of type xs:int.
    int                                  maxUsages                      1;	///< Required element.
/// Element period of type xs:long.
    LONG64                               period                         1;	///< Required element.
/// Element periodExpiry of type xs:dateTime.
    time_t                               periodExpiry                   1;	///< Required element.
/// Element serviceType of type "http://www.betfair.com/publicapi/types/global/v3/":ServiceEnum.
    enum ns1__ServiceEnum                serviceType                    1;	///< Required element.
/// Element usageCount of type xs:int.
    int                                  usageCount                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfServiceCall is a complexType.
class ns1__ArrayOfServiceCall
{ public:
/// Vector of ns1__ServiceCall* with length 0..unbounded
    std::vector<ns1__ServiceCall*      > ns1__ServiceCall_              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfSubscription is a complexType.
class ns1__ArrayOfSubscription
{ public:
/// Vector of ns1__Subscription* with length 0..unbounded
    std::vector<ns1__Subscription*     > ns1__Subscription_             0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":PaymentCard is a complexType.
class ns1__PaymentCard
{ public:
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element cardShortNumber of type xs:string.
    std::string                          cardShortNumber                1;	///< Required element.
/// Element expiryDate of type xs:string.
    std::string                          expiryDate                     1;	///< Required element.
/// Element startDate of type xs:string.
    std::string*                         startDate                     ;	///< Nullable pointer.
/// Element issueNumber of type xs:string.
    std::string*                         issueNumber                   ;	///< Nullable pointer.
/// Element cardType of type "http://www.betfair.com/publicapi/types/global/v3/":CardTypeEnum.
    enum ns1__CardTypeEnum               cardType                       1;	///< Required element.
/// Element issuingCountryIso3 of type xs:string.
    std::string*                         issuingCountryIso3            ;	///< Nullable pointer.
/// Element totalDeposits of type xs:double.
    double*                              totalDeposits                 ;	///< Nullable pointer.
/// Element totalWithdrawals of type xs:double.
    double*                              totalWithdrawals              ;	///< Nullable pointer.
/// Element netDeposits of type xs:double.
    double*                              netDeposits                   ;	///< Nullable pointer.
/// Element validationStatus of type xs:string.
    std::string*                         validationStatus              ;	///< Nullable pointer.
/// Element billingName of type xs:string.
    std::string                          billingName                    1;	///< Required element.
/// Element billingAddress1 of type xs:string.
    std::string*                         billingAddress1               ;	///< Nullable pointer.
/// Element billingAddress2 of type xs:string.
    std::string*                         billingAddress2               ;	///< Nullable pointer.
/// Element billingAddress3 of type xs:string.
    std::string*                         billingAddress3               ;	///< Nullable pointer.
/// Element billingAddress4 of type xs:string.
    std::string*                         billingAddress4               ;	///< Nullable pointer.
/// Element town of type xs:string.
    std::string*                         town                          ;	///< Nullable pointer.
/// Element county of type xs:string.
    std::string*                         county                        ;	///< Nullable pointer.
/// Element postcode of type xs:string.
    std::string*                         postcode                      ;	///< Nullable pointer.
/// Element billingCountryIso3 of type xs:string.
    std::string*                         billingCountryIso3            ;	///< Nullable pointer.
/// Element cardStatus of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentCardStatusEnum.
    enum ns1__PaymentCardStatusEnum      cardStatus                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfPaymentCard is a complexType.
class ns1__ArrayOfPaymentCard
{ public:
/// Vector of ns1__PaymentCard* with length 0..unbounded
    std::vector<ns1__PaymentCard*      > ns1__PaymentCard_              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfBankAccountDetailsField is a complexType.
class ns1__ArrayOfBankAccountDetailsField
{ public:
/// Vector of ns1__BankAccountDetailsField* with length 1..unbounded
    std::vector<ns1__BankAccountDetailsField*> ns1__BankAccountDetailsField_ ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":AbstractField is a complexType.
class ns1__AbstractField
{ public:
/// Element required of type xs:boolean.
    bool                                 required                       1;	///< Required element.
/// Element readOnly of type xs:boolean.
    bool                                 readOnly                       1;	///< Required element.
/// Element size of type xs:int.
    int                                  size                           1;	///< Required element.
/// Element minLength of type xs:int.
    int                                  minLength                      1;	///< Required element.
/// Element maxLength of type xs:int.
    int                                  maxLength                      1;	///< Required element.
/// Element regExp of type xs:string.
    std::string                          regExp                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BasicBankAccountDetails is a complexType.
class ns1__BasicBankAccountDetails
{ public:
/// Element bankName of type xs:string.
    std::string*                         bankName                      ;	///< Nullable pointer.
/// Element accountHoldingBranch of type xs:string.
    std::string*                         accountHoldingBranch          ;	///< Nullable pointer.
/// Element bankGiroCreditNumber of type xs:string.
    std::string*                         bankGiroCreditNumber          ;	///< Nullable pointer.
/// Element accountNumber of type xs:string.
    std::string*                         accountNumber                 ;	///< Nullable pointer.
/// Element sortCode of type xs:string.
    std::string*                         sortCode                      ;	///< Nullable pointer.
/// Element bankCode of type xs:string.
    std::string*                         bankCode                      ;	///< Nullable pointer.
/// Element blzCode of type xs:string.
    std::string*                         blzCode                       ;	///< Nullable pointer.
/// Element bankBsb of type xs:string.
    std::string*                         bankBsb                       ;	///< Nullable pointer.
/// Element branchCode of type xs:string.
    std::string*                         branchCode                    ;	///< Nullable pointer.
/// Element bankLocationIso3 of type xs:string.
    std::string*                         bankLocationIso3              ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":Currency is a complexType.
class ns1__Currency
{ public:
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element rateGBP of type xs:double.
    double                               rateGBP                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfCurrency is a complexType.
class ns1__ArrayOfCurrency
{ public:
/// Vector of ns1__Currency* with length 0..unbounded
    std::vector<ns1__Currency*         > ns1__Currency_                 0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfCurrencyV2 is a complexType.
class ns1__ArrayOfCurrencyV2
{ public:
/// Vector of ns1__CurrencyV2* with length 0..unbounded
    std::vector<ns1__CurrencyV2*       > ns1__CurrencyV2_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfValidationErrorsEnum is a complexType.
class ns1__ArrayOfValidationErrorsEnum
{ public:
/// Vector of enum ns1__ValidationErrorsEnum with length 0..unbounded
    std::vector<enum ns1__ValidationErrorsEnum> ns1__ValidationErrorsEnum      0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.betfair.com/publicapi/v3/BFGlobalService/                     *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":login

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":login is a complexType.
class _ns2__login
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":LoginReq.
    ns1__LoginReq*                       request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":loginResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":loginResponse is a complexType.
class _ns2__loginResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":LoginResp.
    ns1__LoginResp*                      Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":retrieveLIMBMessage

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":retrieveLIMBMessage is a complexType.
class _ns2__retrieveLIMBMessage
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveLIMBMessageReq.
    ns1__RetrieveLIMBMessageReq*         request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":retrieveLIMBMessageResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":retrieveLIMBMessageResponse is a complexType.
class _ns2__retrieveLIMBMessageResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveLIMBMessageResp.
    ns1__RetrieveLIMBMessageResp*        Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":submitLIMBMessage

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":submitLIMBMessage is a complexType.
class _ns2__submitLIMBMessage
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitLIMBMessageReq.
    ns1__SubmitLIMBMessageReq*           request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":submitLIMBMessageResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":submitLIMBMessageResponse is a complexType.
class _ns2__submitLIMBMessageResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitLIMBMessageResp.
    ns1__SubmitLIMBMessageResp*          Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":logout

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":logout is a complexType.
class _ns2__logout
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":LogoutReq.
    ns1__LogoutReq*                      request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":logoutResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":logoutResponse is a complexType.
class _ns2__logoutResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":LogoutResp.
    ns1__LogoutResp*                     Result                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":keepAlive

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":keepAlive is a complexType.
class _ns2__keepAlive
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":KeepAliveReq.
    ns1__KeepAliveReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":keepAliveResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":keepAliveResponse is a complexType.
class _ns2__keepAliveResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":KeepAliveResp.
    ns1__KeepAliveResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getEvents

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getEvents is a complexType.
class _ns2__getEvents
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventsReq.
    ns1__GetEventsReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getEventsResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getEventsResponse is a complexType.
class _ns2__getEventsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventsResp.
    ns1__GetEventsResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getActiveEventTypes

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getActiveEventTypes is a complexType.
class _ns2__getActiveEventTypes
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventTypesReq.
    ns1__GetEventTypesReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getActiveEventTypesResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getActiveEventTypesResponse is a complexType.
class _ns2__getActiveEventTypesResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventTypesResp.
    ns1__GetEventTypesResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllEventTypes

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllEventTypes is a complexType.
class _ns2__getAllEventTypes
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventTypesReq.
    ns1__GetEventTypesReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllEventTypesResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllEventTypesResponse is a complexType.
class _ns2__getAllEventTypesResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventTypesResp.
    ns1__GetEventTypesResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getSubscriptionInfo

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getSubscriptionInfo is a complexType.
class _ns2__getSubscriptionInfo
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetSubscriptionInfoReq.
    ns1__GetSubscriptionInfoReq*         request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getSubscriptionInfoResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getSubscriptionInfoResponse is a complexType.
class _ns2__getSubscriptionInfoResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetSubscriptionInfoResp.
    ns1__GetSubscriptionInfoResp*        Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":depositFromPaymentCard

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":depositFromPaymentCard is a complexType.
class _ns2__depositFromPaymentCard
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":DepositFromPaymentCardReq.
    ns1__DepositFromPaymentCardReq*      request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":depositFromPaymentCardResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":depositFromPaymentCardResponse is a complexType.
class _ns2__depositFromPaymentCardResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":DepositFromPaymentCardResp.
    ns1__DepositFromPaymentCardResp*     Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":addPaymentCard

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":addPaymentCard is a complexType.
class _ns2__addPaymentCard
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":AddPaymentCardReq.
    ns1__AddPaymentCardReq*              request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":addPaymentCardResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":addPaymentCardResponse is a complexType.
class _ns2__addPaymentCardResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":AddPaymentCardResp.
    ns1__AddPaymentCardResp*             Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":deletePaymentCard

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":deletePaymentCard is a complexType.
class _ns2__deletePaymentCard
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":DeletePaymentCardReq.
    ns1__DeletePaymentCardReq*           request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":deletePaymentCardResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":deletePaymentCardResponse is a complexType.
class _ns2__deletePaymentCardResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":DeletePaymentCardResp.
    ns1__DeletePaymentCardResp*          Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":updatePaymentCard

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":updatePaymentCard is a complexType.
class _ns2__updatePaymentCard
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":UpdatePaymentCardReq.
    ns1__UpdatePaymentCardReq*           request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":updatePaymentCardResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":updatePaymentCardResponse is a complexType.
class _ns2__updatePaymentCardResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":UpdatePaymentCardResp.
    ns1__UpdatePaymentCardResp*          Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getPaymentCard

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getPaymentCard is a complexType.
class _ns2__getPaymentCard
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetPaymentCardReq.
    ns1__GetPaymentCardReq*              request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getPaymentCardResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getPaymentCardResponse is a complexType.
class _ns2__getPaymentCardResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetPaymentCardResp.
    ns1__GetPaymentCardResp*             Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawToPaymentCard

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawToPaymentCard is a complexType.
class _ns2__withdrawToPaymentCard
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":WithdrawToPaymentCardReq.
    ns1__WithdrawToPaymentCardReq*       request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawToPaymentCardResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawToPaymentCardResponse is a complexType.
class _ns2__withdrawToPaymentCardResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":WithdrawToPaymentCardResp.
    ns1__WithdrawToPaymentCardResp*      Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":selfExclude

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":selfExclude is a complexType.
class _ns2__selfExclude
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":SelfExcludeReq.
    ns1__SelfExcludeReq*                 request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":selfExcludeResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":selfExcludeResponse is a complexType.
class _ns2__selfExcludeResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":SelfExcludeResp.
    ns1__SelfExcludeResp*                Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":convertCurrency

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":convertCurrency is a complexType.
class _ns2__convertCurrency
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ConvertCurrencyReq.
    ns1__ConvertCurrencyReq*             request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":convertCurrencyResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":convertCurrencyResponse is a complexType.
class _ns2__convertCurrencyResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ConvertCurrencyResp.
    ns1__ConvertCurrencyResp*            Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrencies

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrencies is a complexType.
class _ns2__getAllCurrencies
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesReq.
    ns1__GetCurrenciesReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrenciesResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrenciesResponse is a complexType.
class _ns2__getAllCurrenciesResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesResp.
    ns1__GetCurrenciesResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrenciesV2

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrenciesV2 is a complexType.
class _ns2__getAllCurrenciesV2
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesV2Req.
    ns1__GetCurrenciesV2Req*             request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrenciesV2Response

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":getAllCurrenciesV2Response is a complexType.
class _ns2__getAllCurrenciesV2Response
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesV2Resp.
    ns1__GetCurrenciesV2Resp*            Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewReferAndEarn

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewReferAndEarn is a complexType.
class _ns2__viewReferAndEarn
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ViewReferAndEarnReq.
    ns1__ViewReferAndEarnReq*            request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewReferAndEarnResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewReferAndEarnResponse is a complexType.
class _ns2__viewReferAndEarnResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ViewReferAndEarnResp.
    ns1__ViewReferAndEarnResp*           Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfile

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfile is a complexType.
class _ns2__viewProfile
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileReq.
    ns1__ViewProfileReq*                 request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfileResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfileResponse is a complexType.
class _ns2__viewProfileResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileResp.
    ns1__ViewProfileResp*                Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawByBankTransfer

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawByBankTransfer is a complexType.
class _ns2__withdrawByBankTransfer
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":WithdrawByBankTransferReq.
    ns1__WithdrawByBankTransferReq*      request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawByBankTransferResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":withdrawByBankTransferResponse is a complexType.
class _ns2__withdrawByBankTransferResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":WithdrawByBankTransferResp.
    ns1__WithdrawByBankTransferResp*     Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfileV2

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfileV2 is a complexType.
class _ns2__viewProfileV2
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileV2Req.
    ns1__ViewProfileV2Req*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfileV2Response

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":viewProfileV2Response is a complexType.
class _ns2__viewProfileV2Response
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileV2Resp.
    ns1__ViewProfileV2Resp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyProfile

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyProfile is a complexType.
class _ns2__modifyProfile
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ModifyProfileReq.
    ns1__ModifyProfileReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyProfileResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyProfileResponse is a complexType.
class _ns2__modifyProfileResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ModifyProfileResp.
    ns1__ModifyProfileResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":createAccount

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":createAccount is a complexType.
class _ns2__createAccount
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":CreateAccountReq.
    ns1__CreateAccountReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":createAccountResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":createAccountResponse is a complexType.
class _ns2__createAccountResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":CreateAccountResp.
    ns1__CreateAccountResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":forgotPassword

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":forgotPassword is a complexType.
class _ns2__forgotPassword
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ForgotPasswordReq.
    ns1__ForgotPasswordReq*              request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":forgotPasswordResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":forgotPasswordResponse is a complexType.
class _ns2__forgotPasswordResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ForgotPasswordResp.
    ns1__ForgotPasswordResp*             Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyPassword

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyPassword is a complexType.
class _ns2__modifyPassword
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":ModifyPasswordReq.
    ns1__ModifyPasswordReq*              request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyPasswordResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":modifyPasswordResponse is a complexType.
class _ns2__modifyPasswordResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":ModifyPasswordResp.
    ns1__ModifyPasswordResp*             Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":setChatName

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":setChatName is a complexType.
class _ns2__setChatName
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":SetChatNameReq.
    ns1__SetChatNameReq*                 request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":setChatNameResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":setChatNameResponse is a complexType.
class _ns2__setChatNameResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":SetChatNameResp.
    ns1__SetChatNameResp*                Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":transferFunds

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":transferFunds is a complexType.
class _ns2__transferFunds
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/global/v3/":TransferFundsReq.
    ns1__TransferFundsReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v3/BFGlobalService/":transferFundsResponse

/// "http://www.betfair.com/publicapi/v3/BFGlobalService/":transferFundsResponse is a complexType.
class _ns2__transferFundsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/global/v3/":TransferFundsResp.
    ns1__TransferFundsResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.betfair.com/publicapi/types/exchange/v5/                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse is an abstract complexType.
class ns3__APIResponse
{ public:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader is a complexType.
class ns3__APIResponseHeader
{ public:
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIErrorEnum.
    enum ns3__APIErrorEnum               errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element sessionToken of type xs:string.
    std::string*                         sessionToken                  ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t                               timestamp                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest is an abstract complexType.
class ns3__APIRequest
{ public:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader is a complexType.
class ns3__APIRequestHeader
{ public:
/// Element clientStamp of type xs:long.
    LONG64                               clientStamp                    1;	///< Required element.
/// Element sessionToken of type xs:string.
    std::string*                         sessionToken                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketDisplayDetail is a complexType.
class ns3__MarketDisplayDetail
{ public:
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element racingSilks of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRacingSilk.
    ns3__ArrayOfRacingSilk*              racingSilks                   ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketDisplayErrorEnum.
    enum ns3__MarketDisplayErrorEnum     errorCode                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMarketDisplayDetail is a complexType.
class ns3__ArrayOfMarketDisplayDetail
{ public:
/// Vector of ns3__MarketDisplayDetail* with length 0..unbounded
    std::vector<ns3__MarketDisplayDetail*> ns3__MarketDisplayDetail_      0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":RacingSilk is a complexType.
class ns3__RacingSilk
{ public:
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element silksURL of type xs:string.
    std::string*                         silksURL                      ;	///< Nullable pointer.
/// Element silksText of type xs:string.
    std::string*                         silksText                     ;	///< Nullable pointer.
/// Element trainerName of type xs:string.
    std::string*                         trainerName                   ;	///< Nullable pointer.
/// Element ageWeight of type xs:string.
    std::string*                         ageWeight                     ;	///< Nullable pointer.
/// Element form of type xs:string.
    std::string*                         form                          ;	///< Nullable pointer.
/// Element daysSince of type xs:int.
    int                                  daysSince                      1;	///< Required element.
/// Element jockeyClaim of type xs:int.
    int                                  jockeyClaim                    1;	///< Required element.
/// Element wearing of type xs:string.
    std::string*                         wearing                       ;	///< Nullable pointer.
/// Element saddleCloth of type xs:int.
    int                                  saddleCloth                    1;	///< Required element.
/// Element stallDraw of type xs:int.
    int                                  stallDraw                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRacingSilk is a complexType.
class ns3__ArrayOfRacingSilk
{ public:
/// Vector of ns3__RacingSilk* with length 0..unbounded
    std::vector<ns3__RacingSilk*       > ns3__RacingSilk_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketDisplayDetailV2 is a complexType.
class ns3__MarketDisplayDetailV2
{ public:
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element racingSilks of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRacingSilkV2.
    ns3__ArrayOfRacingSilkV2*            racingSilks                   ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketDisplayErrorEnum.
    enum ns3__MarketDisplayErrorEnum     errorCode                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMarketDisplayDetailV2 is a complexType.
class ns3__ArrayOfMarketDisplayDetailV2
{ public:
/// Vector of ns3__MarketDisplayDetailV2* with length 0..unbounded
    std::vector<ns3__MarketDisplayDetailV2*> ns3__MarketDisplayDetail_      0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":Breeding is a complexType.
class ns3__Breeding
{ public:
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element bred of type xs:string.
    std::string*                         bred                          ;	///< Nullable pointer.
/// Element yearBorn of type xs:string.
    std::string*                         yearBorn                      ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRacingSilkV2 is a complexType.
class ns3__ArrayOfRacingSilkV2
{ public:
/// Vector of ns3__RacingSilkV2* with length 0..unbounded
    std::vector<ns3__RacingSilkV2*     > ns3__RacingSilk_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsResult is a complexType.
class ns3__CancelBetsResult
{ public:
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element resultCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsResultEnum.
    enum ns3__CancelBetsResultEnum       resultCode                     1;	///< Required element.
/// Element sizeCancelled of type xs:double.
    double                               sizeCancelled                  1;	///< Required element.
/// Element sizeMatched of type xs:double.
    double                               sizeMatched                    1;	///< Required element.
/// Element success of type xs:boolean.
    bool                                 success                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCancelBetsResult is a complexType.
class ns3__ArrayOfCancelBetsResult
{ public:
/// Vector of ns3__CancelBetsResult* with length 0..unbounded
    std::vector<ns3__CancelBetsResult* > ns3__CancelBetsResult_         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBets is a complexType.
class ns3__CancelBets
{ public:
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCancelBets is a complexType.
class ns3__ArrayOfCancelBets
{ public:
/// Vector of ns3__CancelBets* with length 0..unbounded
    std::vector<ns3__CancelBets*       > ns3__CancelBets_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCancelBetsByMarketResult is a complexType.
class ns3__ArrayOfCancelBetsByMarketResult
{ public:
/// Vector of ns3__CancelBetsByMarketResult* with length 0..unbounded
    std::vector<ns3__CancelBetsByMarketResult*> ns3__CancelBetsByMarketResult_ 0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketResult is a complexType.
class ns3__CancelBetsByMarketResult
{ public:
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element resultCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketResultEnum.
    enum ns3__CancelBetsByMarketResultEnum  resultCode                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsResult is a complexType.
class ns3__UpdateBetsResult
{ public:
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element newBetId of type xs:long.
    LONG64*                              newBetId                      ;	///< Nullable pointer.
/// Element sizeCancelled of type xs:double.
    double*                              sizeCancelled                 ;	///< Nullable pointer.
/// Element newSize of type xs:double.
    double*                              newSize                       ;	///< Nullable pointer.
/// Element newPrice of type xs:double.
    double*                              newPrice                      ;	///< Nullable pointer.
/// Element resultCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsResultEnum.
    enum ns3__UpdateBetsResultEnum       resultCode                     1;	///< Required element.
/// Element success of type xs:boolean.
    bool                                 success                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfUpdateBetsResult is a complexType.
class ns3__ArrayOfUpdateBetsResult
{ public:
/// Vector of ns3__UpdateBetsResult* with length 0..unbounded
    std::vector<ns3__UpdateBetsResult* > ns3__UpdateBetsResult_         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBets is a complexType.
class ns3__UpdateBets
{ public:
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element newPrice of type xs:double.
    double*                              newPrice                      ;	///< Nullable pointer.
/// Element newSize of type xs:double.
    double                               newSize                        1;	///< Required element.
/// Element oldPrice of type xs:double.
    double*                              oldPrice                      ;	///< Nullable pointer.
/// Element oldSize of type xs:double.
    double                               oldSize                        1;	///< Required element.
/// Element oldBetPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     oldBetPersistenceType          1;	///< Required element.
/// Element newBetPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     newBetPersistenceType          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfUpdateBets is a complexType.
class ns3__ArrayOfUpdateBets
{ public:
/// Vector of ns3__UpdateBets* with length 0..unbounded
    std::vector<ns3__UpdateBets*       > ns3__UpdateBets_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsResult is a complexType.
class ns3__PlaceBetsResult
{ public:
/// Element averagePriceMatched of type xs:double.
    double                               averagePriceMatched            1;	///< Required element.
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element resultCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsResultEnum.
    enum ns3__PlaceBetsResultEnum        resultCode                     1;	///< Required element.
/// Element sizeMatched of type xs:double.
    double                               sizeMatched                    1;	///< Required element.
/// Element success of type xs:boolean.
    bool                                 success                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPlaceBetsResult is a complexType.
class ns3__ArrayOfPlaceBetsResult
{ public:
/// Vector of ns3__PlaceBetsResult* with length 0..unbounded
    std::vector<ns3__PlaceBetsResult*  > ns3__PlaceBetsResult_          0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBets is a complexType.
class ns3__PlaceBets
{ public:
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element betType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetTypeEnum.
    enum ns3__BetTypeEnum                betType                        1;	///< Required element.
/// Element betCategoryType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum.
    enum ns3__BetCategoryTypeEnum        betCategoryType                1;	///< Required element.
/// Element betPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     betPersistenceType             1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element price of type xs:double.
    double                               price                          1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element size of type xs:double.
    double*                              size                          ;	///< Nullable pointer.
/// Element bspLiability of type xs:double.
    double*                              bspLiability                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPlaceBets is a complexType.
class ns3__ArrayOfPlaceBets
{ public:
/// Vector of ns3__PlaceBets* with length 0..unbounded
    std::vector<ns3__PlaceBets*        > ns3__PlaceBets_                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CouponMarket is a complexType.
class ns3__CouponMarket
{ public:
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element marketName of type xs:string.
    std::string*                         marketName                    ;	///< Nullable pointer.
/// Element exchangeId of type xs:int.
    int                                  exchangeId                     1;	///< Required element.
/// Element parentEventName of type xs:string.
    std::string*                         parentEventName               ;	///< Nullable pointer.
/// Element marketStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketStatusEnum.
    enum ns3__MarketStatusEnum           marketStatus                   1;	///< Required element.
/// Element marketType of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeEnum.
    enum ns3__MarketTypeEnum             marketType                     1;	///< Required element.
/// Element marketTypeVariant of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeVariantEnum.
    enum ns3__MarketTypeVariantEnum      marketTypeVariant              1;	///< Required element.
/// Element marketInfo of type xs:string.
    std::string*                         marketInfo                    ;	///< Nullable pointer.
/// Element startTime of type xs:dateTime.
    time_t                               startTime                      1;	///< Required element.
/// Element betDelay of type xs:int.
    int                                  betDelay                       1;	///< Required element.
/// Element couponSelectionItems of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCouponSelection.
    ns3__ArrayOfCouponSelection*         couponSelectionItems          ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CouponSelection is a complexType.
class ns3__CouponSelection
{ public:
/// Element runner of type "http://www.betfair.com/publicapi/types/exchange/v5/":Runner.
    ns3__Runner*                         runner                         1;	///< Required element.
/// Element backOdds of type xs:double.
    double*                              backOdds                      ;	///< Nullable pointer.
/// Element layOdds of type xs:double.
    double*                              layOdds                       ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCouponSelection is a complexType.
class ns3__ArrayOfCouponSelection
{ public:
/// Vector of ns3__CouponSelection* with length 0..unbounded
    std::vector<ns3__CouponSelection*  > ns3__CouponSelection_          0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCouponMarket is a complexType.
class ns3__ArrayOfCouponMarket
{ public:
/// Vector of ns3__CouponMarket* with length 0..unbounded
    std::vector<ns3__CouponMarket*     > ns3__CouponMarket_             0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CouponLink is a complexType.
class ns3__CouponLink
{ public:
/// Element couponId of type xs:int.
    int                                  couponId                       1;	///< Required element.
/// Element couponName of type xs:string.
    std::string*                         couponName                    ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCouponLinks is a complexType.
class ns3__ArrayOfCouponLinks
{ public:
/// Vector of ns3__CouponLink* with length 0..unbounded
    std::vector<ns3__CouponLink*       > ns3__CouponLink_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":Market is a complexType.
class ns3__Market
{ public:
/// Element countryISO3 of type xs:string.
    std::string*                         countryISO3                   ;	///< Nullable pointer.
/// Element discountAllowed of type xs:boolean.
    bool                                 discountAllowed                1;	///< Required element.
/// Element eventTypeId of type xs:int.
    int                                  eventTypeId                    1;	///< Required element.
/// Element lastRefresh of type xs:long.
    LONG64                               lastRefresh                    1;	///< Required element.
/// Element marketBaseRate of type xs:float.
    float                                marketBaseRate                 1;	///< Required element.
/// Element marketDescription of type xs:string.
    std::string*                         marketDescription             ;	///< Nullable pointer.
/// Element marketDescriptionHasDate of type xs:boolean.
    bool                                 marketDescriptionHasDate       1;	///< Required element.
/// Element marketDisplayTime of type xs:dateTime.
    time_t                               marketDisplayTime              1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element marketStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketStatusEnum.
    enum ns3__MarketStatusEnum           marketStatus                   1;	///< Required element.
/// Element marketSuspendTime of type xs:dateTime.
    time_t                               marketSuspendTime              1;	///< Required element.
/// Element marketTime of type xs:dateTime.
    time_t                               marketTime                     1;	///< Required element.
/// Element marketType of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeEnum.
    enum ns3__MarketTypeEnum             marketType                     1;	///< Required element.
/// Element marketTypeVariant of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeVariantEnum.
    enum ns3__MarketTypeVariantEnum      marketTypeVariant              1;	///< Required element.
/// Element menuPath of type xs:string.
    std::string*                         menuPath                      ;	///< Nullable pointer.
/// Element eventHierarchy of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfEventId.
    ns3__ArrayOfEventId*                 eventHierarchy                ;	///< Nullable pointer.
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element numberOfWinners of type xs:int.
    int                                  numberOfWinners                1;	///< Required element.
/// Element parentEventId of type xs:int.
    int                                  parentEventId                  1;	///< Required element.
/// Element runners of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRunner.
    ns3__ArrayOfRunner*                  runners                       ;	///< Nullable pointer.
/// Element unit of type xs:string.
    std::string*                         unit                          ;	///< Nullable pointer.
/// Element maxUnitValue of type xs:double.
    double*                              maxUnitValue                  ;	///< Nullable pointer.
/// Element minUnitValue of type xs:double.
    double*                              minUnitValue                  ;	///< Nullable pointer.
/// Element interval of type xs:double.
    double*                              interval                      ;	///< Nullable pointer.
/// Element runnersMayBeAdded of type xs:boolean.
    bool                                 runnersMayBeAdded              1;	///< Required element.
/// Element timezone of type xs:string.
    std::string*                         timezone                      ;	///< Nullable pointer.
/// Element licenceId of type xs:int.
    int                                  licenceId                      1;	///< Required element.
/// Element couponLinks of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCouponLinks.
    ns3__ArrayOfCouponLinks*             couponLinks                   ;	///< Nullable pointer.
/// Element bspMarket of type xs:boolean.
    bool                                 bspMarket                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfEventId is a complexType.
class ns3__ArrayOfEventId
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > ns3__EventId                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":Runner is a complexType.
class ns3__Runner
{ public:
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element handicap of type xs:double.
    double                               handicap                       1;	///< Required element.
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRunner is a complexType.
class ns3__ArrayOfRunner
{ public:
/// Vector of ns3__Runner* with length 0..unbounded
    std::vector<ns3__Runner*           > ns3__Runner_                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketPrices is a complexType.
class ns3__MarketPrices
{ public:
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element delay of type xs:int.
    int                                  delay                          1;	///< Required element.
/// Element discountAllowed of type xs:boolean.
    bool                                 discountAllowed                1;	///< Required element.
/// Element lastRefresh of type xs:long.
    LONG64                               lastRefresh                    1;	///< Required element.
/// Element marketBaseRate of type xs:float.
    float                                marketBaseRate                 1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element marketInfo of type xs:string.
    std::string*                         marketInfo                    ;	///< Nullable pointer.
/// Element removedRunners of type xs:string.
    std::string*                         removedRunners                ;	///< Nullable pointer.
/// Element marketStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketStatusEnum.
    enum ns3__MarketStatusEnum           marketStatus                   1;	///< Required element.
/// Element numberOfWinners of type xs:int.
    int                                  numberOfWinners                1;	///< Required element.
/// Element bspMarket of type xs:boolean.
    bool                                 bspMarket                      1;	///< Required element.
/// Element runnerPrices of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRunnerPrices.
    ns3__ArrayOfRunnerPrices*            runnerPrices                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":RunnerPrices is a complexType.
class ns3__RunnerPrices
{ public:
/// Element asianLineId of type xs:int.
    int*                                 asianLineId                   ;	///< Nullable pointer.
/// Element bestPricesToBack of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPrice.
    ns3__ArrayOfPrice*                   bestPricesToBack              ;	///< Nullable pointer.
/// Element bestPricesToLay of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPrice.
    ns3__ArrayOfPrice*                   bestPricesToLay               ;	///< Nullable pointer.
/// Element handicap of type xs:double.
    double*                              handicap                      ;	///< Nullable pointer.
/// Element lastPriceMatched of type xs:double.
    double                               lastPriceMatched               1;	///< Required element.
/// Element reductionFactor of type xs:double.
    double                               reductionFactor                1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element sortOrder of type xs:int.
    int                                  sortOrder                      1;	///< Required element.
/// Element totalAmountMatched of type xs:double.
    double                               totalAmountMatched             1;	///< Required element.
/// Element vacant of type xs:boolean.
    bool*                                vacant                        ;	///< Nullable pointer.
/// Element farBSP of type xs:double.
    double*                              farBSP                        ;	///< Nullable pointer.
/// Element nearBSP of type xs:double.
    double*                              nearBSP                       ;	///< Nullable pointer.
/// Element actualBSP of type xs:double.
    double*                              actualBSP                     ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":Price is a complexType.
class ns3__Price
{ public:
/// Element amountAvailable of type xs:double.
    double                               amountAvailable                1;	///< Required element.
/// Element betType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetTypeEnum.
    enum ns3__BetTypeEnum                betType                        1;	///< Required element.
/// Element depth of type xs:int.
    int                                  depth                          1;	///< Required element.
/// Element price of type xs:double.
    double                               price                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPrice is a complexType.
class ns3__ArrayOfPrice
{ public:
/// Vector of ns3__Price* with length 0..unbounded
    std::vector<ns3__Price*            > ns3__Price_                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfRunnerPrices is a complexType.
class ns3__ArrayOfRunnerPrices
{ public:
/// Vector of ns3__RunnerPrices* with length 0..unbounded
    std::vector<ns3__RunnerPrices*     > ns3__RunnerPrices_             0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCountryCode is a complexType.
class ns3__ArrayOfCountryCode
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > ns3__Country                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PrivateMarket is a complexType.
class ns3__PrivateMarket
{ public:
/// Element name of type xs:string.
    std::string*                         name                          ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element menuPath of type xs:string.
    std::string*                         menuPath                      ;	///< Nullable pointer.
/// Element eventHierarchy of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfEventId.
    ns3__ArrayOfEventId*                 eventHierarchy                ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPrivateMarket is a complexType.
class ns3__ArrayOfPrivateMarket
{ public:
/// Vector of ns3__PrivateMarket* with length 0..unbounded
    std::vector<ns3__PrivateMarket*    > ns3__PrivateMarket_            0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MUBet is a complexType.
class ns3__MUBet
{ public:
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element transactionId of type xs:long.
    LONG64                               transactionId                  1;	///< Required element.
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element betType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetTypeEnum.
    enum ns3__BetTypeEnum                betType                        1;	///< Required element.
/// Element betCategoryType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum.
    enum ns3__BetCategoryTypeEnum        betCategoryType                1;	///< Required element.
/// Element betPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     betPersistenceType             1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element matchedDate of type xs:dateTime.
    time_t                               matchedDate                    1;	///< Required element.
/// Element size of type xs:double.
    double                               size                           1;	///< Required element.
/// Element bspLiability of type xs:double.
    double*                              bspLiability                  ;	///< Nullable pointer.
/// Element placedDate of type xs:dateTime.
    time_t                               placedDate                     1;	///< Required element.
/// Element price of type xs:double.
    double                               price                          1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element handicap of type xs:double.
    double                               handicap                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMUBet is a complexType.
class ns3__ArrayOfMUBet
{ public:
/// Vector of ns3__MUBet* with length 0..unbounded
    std::vector<ns3__MUBet*            > ns3__MUBet_                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBetId is a complexType.
class ns3__ArrayOfBetId
{ public:
/// Vector of LONG64 with length 0..1000
    std::vector<LONG64                 > ns3__betId                     0:1000;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":Bet is a complexType.
class ns3__Bet
{ public:
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element avgPrice of type xs:double.
    double                               avgPrice                       1;	///< Required element.
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element betType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetTypeEnum.
    enum ns3__BetTypeEnum                betType                        1;	///< Required element.
/// Element betCategoryType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum.
    enum ns3__BetCategoryTypeEnum        betCategoryType                1;	///< Required element.
/// Element betPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     betPersistenceType             1;	///< Required element.
/// Element cancelledDate of type xs:dateTime.
    time_t                               cancelledDate                  1;	///< Required element.
/// Element lapsedDate of type xs:dateTime.
    time_t                               lapsedDate                     1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element marketName of type xs:string.
    std::string*                         marketName                    ;	///< Nullable pointer.
/// Element fullMarketName of type xs:string.
    std::string*                         fullMarketName                ;	///< Nullable pointer.
/// Element marketType of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeEnum.
    enum ns3__MarketTypeEnum             marketType                     1;	///< Required element.
/// Element marketTypeVariant of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeVariantEnum.
    enum ns3__MarketTypeVariantEnum      marketTypeVariant              1;	///< Required element.
/// Element matchedDate of type xs:dateTime.
    time_t                               matchedDate                    1;	///< Required element.
/// Element matchedSize of type xs:double.
    double                               matchedSize                    1;	///< Required element.
/// Element matches of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMatch.
    ns3__ArrayOfMatch*                   matches                       ;	///< Nullable pointer.
/// Element placedDate of type xs:dateTime.
    time_t                               placedDate                     1;	///< Required element.
/// Element price of type xs:double.
    double                               price                          1;	///< Required element.
/// Element bspLiability of type xs:double.
    double*                              bspLiability                  ;	///< Nullable pointer.
/// Element profitAndLoss of type xs:double.
    double                               profitAndLoss                  1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element selectionName of type xs:string.
    std::string*                         selectionName                 ;	///< Nullable pointer.
/// Element settledDate of type xs:dateTime.
    time_t                               settledDate                    1;	///< Required element.
/// Element remainingSize of type xs:double.
    double                               remainingSize                  1;	///< Required element.
/// Element requestedSize of type xs:double.
    double                               requestedSize                  1;	///< Required element.
/// Element voidedDate of type xs:dateTime.
    time_t                               voidedDate                     1;	///< Required element.
/// Element handicap of type xs:double.
    double                               handicap                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":Match is a complexType.
class ns3__Match
{ public:
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element matchedDate of type xs:dateTime.
    time_t                               matchedDate                    1;	///< Required element.
/// Element priceMatched of type xs:double.
    double                               priceMatched                   1;	///< Required element.
/// Element profitLoss of type xs:double.
    double                               profitLoss                     1;	///< Required element.
/// Element settledDate of type xs:dateTime.
    time_t                               settledDate                    1;	///< Required element.
/// Element sizeMatched of type xs:double.
    double                               sizeMatched                    1;	///< Required element.
/// Element transactionId of type xs:long.
    LONG64                               transactionId                  1;	///< Required element.
/// Element voidedDate of type xs:dateTime.
    time_t                               voidedDate                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMatch is a complexType.
class ns3__ArrayOfMatch
{ public:
/// Vector of ns3__Match* with length 0..unbounded
    std::vector<ns3__Match*            > ns3__Match_                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBet is a complexType.
class ns3__ArrayOfBet
{ public:
/// Vector of ns3__Bet* with length 0..unbounded
    std::vector<ns3__Bet*              > ns3__Bet_                      0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":AvailabilityInfo is a complexType.
class ns3__AvailabilityInfo
{ public:
/// Element odds of type xs:double.
    double                               odds                           1;	///< Required element.
/// Element totalAvailableBackAmount of type xs:double.
    double                               totalAvailableBackAmount       1;	///< Required element.
/// Element totalAvailableLayAmount of type xs:double.
    double                               totalAvailableLayAmount        1;	///< Required element.
/// Element totalBspBackAmount of type xs:double.
    double                               totalBspBackAmount             1;	///< Required element.
/// Element totalBspLayAmount of type xs:double.
    double                               totalBspLayAmount              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfAvailabilityInfo is a complexType.
class ns3__ArrayOfAvailabilityInfo
{ public:
/// Vector of ns3__AvailabilityInfo* with length 0..unbounded
    std::vector<ns3__AvailabilityInfo* > ns3__AvailabilityInfo_         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":VolumeInfo is a complexType.
class ns3__VolumeInfo
{ public:
/// Element odds of type xs:double.
    double                               odds                           1;	///< Required element.
/// Element totalMatchedAmount of type xs:double.
    double                               totalMatchedAmount             1;	///< Required element.
/// Element totalBspBackMatchedAmount of type xs:double.
    double                               totalBspBackMatchedAmount      1;	///< Required element.
/// Element totalBspLiabilityMatchedAmount of type xs:double.
    double                               totalBspLiabilityMatchedAmount 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfVolumeInfo is a complexType.
class ns3__ArrayOfVolumeInfo
{ public:
/// Vector of ns3__VolumeInfo* with length 0..unbounded
    std::vector<ns3__VolumeInfo*       > ns3__VolumeInfo_               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMarketTypeEnum is a complexType.
class ns3__ArrayOfMarketTypeEnum
{ public:
/// Vector of enum ns3__MarketTypeEnum with length 0..unbounded
    std::vector<enum ns3__MarketTypeEnum> ns3__MarketTypeEnum            0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfInt is a complexType.
class ns3__ArrayOfInt
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > ns3__int                       0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":AccountStatementItem is a complexType.
class ns3__AccountStatementItem
{ public:
/// Element accountBalance of type xs:double.
    double                               accountBalance                 1;	///< Required element.
/// Element amount of type xs:double.
    double                               amount                         1;	///< Required element.
/// Element avgPrice of type xs:double.
    double                               avgPrice                       1;	///< Required element.
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element betSize of type xs:double.
    double                               betSize                        1;	///< Required element.
/// Element betType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetTypeEnum.
    enum ns3__BetTypeEnum                betType                        1;	///< Required element.
/// Element betCategoryType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum.
    enum ns3__BetCategoryTypeEnum        betCategoryType                1;	///< Required element.
/// Element commissionRate of type xs:string.
    std::string*                         commissionRate                ;	///< Nullable pointer.
/// Element eventId of type xs:int.
    int                                  eventId                        1;	///< Required element.
/// Element eventTypeId of type xs:int.
    int                                  eventTypeId                    1;	///< Required element.
/// Element fullMarketName of type xs:string.
    std::string*                         fullMarketName                ;	///< Nullable pointer.
/// Element grossBetAmount of type xs:double.
    double                               grossBetAmount                 1;	///< Required element.
/// Element marketName of type xs:string.
    std::string*                         marketName                    ;	///< Nullable pointer.
/// Element marketType of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeEnum.
    enum ns3__MarketTypeEnum             marketType                     1;	///< Required element.
/// Element placedDate of type xs:dateTime.
    time_t                               placedDate                     1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element selectionName of type xs:string.
    std::string*                         selectionName                 ;	///< Nullable pointer.
/// Element settledDate of type xs:dateTime.
    time_t                               settledDate                    1;	///< Required element.
/// Element startDate of type xs:dateTime.
    time_t                               startDate                      1;	///< Required element.
/// Element transactionType of type "http://www.betfair.com/publicapi/types/exchange/v5/":AccountStatementEnum.
    enum ns3__AccountStatementEnum       transactionType                1;	///< Required element.
/// Element transactionId of type xs:long.
    LONG64                               transactionId                  1;	///< Required element.
/// Element winLose of type "http://www.betfair.com/publicapi/types/exchange/v5/":AccountStatementEnum.
    enum ns3__AccountStatementEnum       winLose                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfAccountStatementItem is a complexType.
class ns3__ArrayOfAccountStatementItem
{ public:
/// Vector of ns3__AccountStatementItem* with length 0..unbounded
    std::vector<ns3__AccountStatementItem*> ns3__AccountStatementItem_     0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ProfitAndLoss is a complexType.
class ns3__ProfitAndLoss
{ public:
/// Element futureIfWin of type xs:double.
    double                               futureIfWin                    1;	///< Required element.
/// Element ifWin of type xs:double.
    double                               ifWin                          1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element selectionName of type xs:string.
    std::string*                         selectionName                 ;	///< Nullable pointer.
/// Element worstcaseIfWin of type xs:double.
    double                               worstcaseIfWin                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfProfitAndLoss is a complexType.
class ns3__ArrayOfProfitAndLoss
{ public:
/// Vector of ns3__ProfitAndLoss* with length 0..unbounded
    std::vector<ns3__ProfitAndLoss*    > ns3__ProfitAndLoss_            0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":BetLite is a complexType.
class ns3__BetLite
{ public:
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element matchedSize of type xs:double.
    double                               matchedSize                    1;	///< Required element.
/// Element remainingSize of type xs:double.
    double                               remainingSize                  1;	///< Required element.
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element betCategoryType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum.
    enum ns3__BetCategoryTypeEnum        betCategoryType                1;	///< Required element.
/// Element betPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     betPersistenceType             1;	///< Required element.
/// Element bspLiability of type xs:double.
    double*                              bspLiability                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBetLite is a complexType.
class ns3__ArrayOfBetLite
{ public:
/// Vector of ns3__BetLite* with length 0..unbounded
    std::vector<ns3__BetLite*          > ns3__BetLite_                  0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MatchLite is a complexType.
class ns3__MatchLite
{ public:
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element matchedDate of type xs:dateTime.
    time_t                               matchedDate                    1;	///< Required element.
/// Element priceMatched of type xs:double.
    double                               priceMatched                   1;	///< Required element.
/// Element sizeMatched of type xs:double.
    double                               sizeMatched                    1;	///< Required element.
/// Element transactionId of type xs:long.
    LONG64                               transactionId                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMatchLite is a complexType.
class ns3__ArrayOfMatchLite
{ public:
/// Vector of ns3__MatchLite* with length 0..unbounded
    std::vector<ns3__MatchLite*        > ns3__MatchLite_                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MUBetLite is a complexType.
class ns3__MUBetLite
{ public:
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element transactionId of type xs:long.
    LONG64                               transactionId                  1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element size of type xs:double.
    double                               size                           1;	///< Required element.
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element betCategoryType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetCategoryTypeEnum.
    enum ns3__BetCategoryTypeEnum        betCategoryType                1;	///< Required element.
/// Element betPersistenceType of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetPersistenceTypeEnum.
    enum ns3__BetPersistenceTypeEnum     betPersistenceType             1;	///< Required element.
/// Element bspLiability of type xs:double.
    double*                              bspLiability                  ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMUBetLite is a complexType.
class ns3__ArrayOfMUBetLite
{ public:
/// Vector of ns3__MUBetLite* with length 0..unbounded
    std::vector<ns3__MUBetLite*        > ns3__MUBetLite_                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MarketLite is a complexType.
class ns3__MarketLite
{ public:
/// Element marketStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketStatusEnum.
    enum ns3__MarketStatusEnum           marketStatus                   1;	///< Required element.
/// Element marketSuspendTime of type xs:dateTime.
    time_t                               marketSuspendTime              1;	///< Required element.
/// Element marketTime of type xs:dateTime.
    time_t                               marketTime                     1;	///< Required element.
/// Element numberOfRunners of type xs:int.
    int                                  numberOfRunners                1;	///< Required element.
/// Element delay of type xs:int.
    int                                  delay                          1;	///< Required element.
/// Element reconciled of type xs:boolean.
    bool                                 reconciled                     1;	///< Required element.
/// Element openForBspBetting of type xs:boolean.
    bool                                 openForBspBetting              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.betfair.com/publicapi/v5/BFExchangeService/                   *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountFunds

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountFunds is a complexType.
class _ns4__getAccountFunds
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountFundsReq.
    ns3__GetAccountFundsReq*             request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountFundsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountFundsResponse is a complexType.
class _ns4__getAccountFundsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountFundsResp.
    ns3__GetAccountFundsResp*            Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBets is a complexType.
class _ns4__cancelBets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsReq.
    ns3__CancelBetsReq*                  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBetsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBetsResponse is a complexType.
class _ns4__cancelBetsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsResp.
    ns3__CancelBetsResp*                 Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBetsByMarket

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBetsByMarket is a complexType.
class _ns4__cancelBetsByMarket
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketReq.
    ns3__CancelBetsByMarketReq*          request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBetsByMarketResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":cancelBetsByMarketResponse is a complexType.
class _ns4__cancelBetsByMarketResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketResp.
    ns3__CancelBetsByMarketResp*         Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":heartbeat

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":heartbeat is a complexType.
class _ns4__heartbeat
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":HeartbeatReq.
    ns3__HeartbeatReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":heartbeatResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":heartbeatResponse is a complexType.
class _ns4__heartbeatResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":HeartbeatResp.
    ns3__HeartbeatResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilks

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilks is a complexType.
class _ns4__getSilks
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksReq.
    ns3__GetSilksReq*                    request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilksResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilksResponse is a complexType.
class _ns4__getSilksResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksResp.
    ns3__GetSilksResp*                   Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilksV2

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilksV2 is a complexType.
class _ns4__getSilksV2
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksV2Req.
    ns3__GetSilksV2Req*                  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilksV2Response

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getSilksV2Response is a complexType.
class _ns4__getSilksV2Response
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksV2Resp.
    ns3__GetSilksV2Resp*                 Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":updateBets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":updateBets is a complexType.
class _ns4__updateBets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsReq.
    ns3__UpdateBetsReq*                  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":updateBetsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":updateBetsResponse is a complexType.
class _ns4__updateBetsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsResp.
    ns3__UpdateBetsResp*                 Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":placeBets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":placeBets is a complexType.
class _ns4__placeBets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsReq.
    ns3__PlaceBetsReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":placeBetsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":placeBetsResponse is a complexType.
class _ns4__placeBetsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsResp.
    ns3__PlaceBetsResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCoupon

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCoupon is a complexType.
class _ns4__getCoupon
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCouponReq.
    ns3__GetCouponReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCouponResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCouponResponse is a complexType.
class _ns4__getCouponResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCouponResp.
    ns3__GetCouponResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarket

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarket is a complexType.
class _ns4__getMarket
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketReq.
    ns3__GetMarketReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketInfo

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketInfo is a complexType.
class _ns4__getMarketInfo
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketInfoReq.
    ns3__GetMarketInfoReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketInfoResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketInfoResponse is a complexType.
class _ns4__getMarketInfoResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketInfoResp.
    ns3__GetMarketInfoResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketResponse is a complexType.
class _ns4__getMarketResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketResp.
    ns3__GetMarketResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPrices

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPrices is a complexType.
class _ns4__getMarketPrices
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesReq.
    ns3__GetMarketPricesReq*             request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPricesResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPricesResponse is a complexType.
class _ns4__getMarketPricesResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesResp.
    ns3__GetMarketPricesResp*            Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCompleteMarketPricesCompressed

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCompleteMarketPricesCompressed is a complexType.
class _ns4__getCompleteMarketPricesCompressed
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCompleteMarketPricesCompressedReq.
    ns3__GetCompleteMarketPricesCompressedReq*  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCompleteMarketPricesCompressedResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCompleteMarketPricesCompressedResponse is a complexType.
class _ns4__getCompleteMarketPricesCompressedResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCompleteMarketPricesCompressedResp.
    ns3__GetCompleteMarketPricesCompressedResp*  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolumeCompressed

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolumeCompressed is a complexType.
class _ns4__getMarketTradedVolumeCompressed
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeCompressedReq.
    ns3__GetMarketTradedVolumeCompressedReq*  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolumeCompressedResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolumeCompressedResponse is a complexType.
class _ns4__getMarketTradedVolumeCompressedResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeCompressedResp.
    ns3__GetMarketTradedVolumeCompressedResp*  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPricesCompressed

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPricesCompressed is a complexType.
class _ns4__getMarketPricesCompressed
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesCompressedReq.
    ns3__GetMarketPricesCompressedReq*   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPricesCompressedResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketPricesCompressedResponse is a complexType.
class _ns4__getMarketPricesCompressedResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesCompressedResp.
    ns3__GetMarketPricesCompressedResp*  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAllMarkets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAllMarkets is a complexType.
class _ns4__getAllMarkets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAllMarketsReq.
    ns3__GetAllMarketsReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAllMarketsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAllMarketsResponse is a complexType.
class _ns4__getAllMarketsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAllMarketsResp.
    ns3__GetAllMarketsResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getInPlayMarkets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getInPlayMarkets is a complexType.
class _ns4__getInPlayMarkets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetInPlayMarketsReq.
    ns3__GetInPlayMarketsReq*            request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getInPlayMarketsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getInPlayMarketsResponse is a complexType.
class _ns4__getInPlayMarketsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetInPlayMarketsResp.
    ns3__GetInPlayMarketsResp*           Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getPrivateMarkets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getPrivateMarkets is a complexType.
class _ns4__getPrivateMarkets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetPrivateMarketsReq.
    ns3__GetPrivateMarketsReq*           request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getPrivateMarketsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getPrivateMarketsResponse is a complexType.
class _ns4__getPrivateMarketsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetPrivateMarketsResp.
    ns3__GetPrivateMarketsResp*          Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBets is a complexType.
class _ns4__getCurrentBets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsReq.
    ns3__GetCurrentBetsReq*              request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBetsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBetsResponse is a complexType.
class _ns4__getCurrentBetsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsResp.
    ns3__GetCurrentBetsResp*             Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBetsLite

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBetsLite is a complexType.
class _ns4__getCurrentBetsLite
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsLiteReq.
    ns3__GetCurrentBetsLiteReq*          request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBetsLiteResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getCurrentBetsLiteResponse is a complexType.
class _ns4__getCurrentBetsLiteResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsLiteResp.
    ns3__GetCurrentBetsLiteResp*         Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBets

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBets is a complexType.
class _ns4__getMUBets
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsReq.
    ns3__GetMUBetsReq*                   request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBetsResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBetsResponse is a complexType.
class _ns4__getMUBetsResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsResp.
    ns3__GetMUBetsResp*                  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBetsLite

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBetsLite is a complexType.
class _ns4__getMUBetsLite
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsLiteReq.
    ns3__GetMUBetsLiteReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBetsLiteResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMUBetsLiteResponse is a complexType.
class _ns4__getMUBetsLiteResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsLiteResp.
    ns3__GetMUBetsLiteResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getDetailAvailableMktDepth

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getDetailAvailableMktDepth is a complexType.
class _ns4__getDetailAvailableMktDepth
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetDetailedAvailableMktDepthReq.
    ns3__GetDetailedAvailableMktDepthReq*  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getDetailAvailableMktDepthResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getDetailAvailableMktDepthResponse is a complexType.
class _ns4__getDetailAvailableMktDepthResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetDetailedAvailableMktDepthResp.
    ns3__GetDetailedAvailableMktDepthResp*  Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolume

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolume is a complexType.
class _ns4__getMarketTradedVolume
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeReq.
    ns3__GetMarketTradedVolumeReq*       request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolumeResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketTradedVolumeResponse is a complexType.
class _ns4__getMarketTradedVolumeResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeResp.
    ns3__GetMarketTradedVolumeResp*      Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetHistory

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetHistory is a complexType.
class _ns4__getBetHistory
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetHistoryReq.
    ns3__GetBetHistoryReq*               request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetHistoryResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetHistoryResponse is a complexType.
class _ns4__getBetHistoryResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetHistoryResp.
    ns3__GetBetHistoryResp*              Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountStatement

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountStatement is a complexType.
class _ns4__getAccountStatement
{ public:
/// Element req of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountStatementReq.
    ns3__GetAccountStatementReq*         req                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountStatementResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getAccountStatementResponse is a complexType.
class _ns4__getAccountStatementResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountStatementResp.
    ns3__GetAccountStatementResp*        Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketProfitAndLoss

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketProfitAndLoss is a complexType.
class _ns4__getMarketProfitAndLoss
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketProfitAndLossReq.
    ns3__GetMarketProfitAndLossReq*      request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketProfitAndLossResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getMarketProfitAndLossResponse is a complexType.
class _ns4__getMarketProfitAndLossResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketProfitAndLossResp.
    ns3__GetMarketProfitAndLossResp*     Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBet

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBet is a complexType.
class _ns4__getBet
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetReq.
    ns3__GetBetReq*                      request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetResponse is a complexType.
class _ns4__getBetResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetResp.
    ns3__GetBetResp*                     Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetLite

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetLite is a complexType.
class _ns4__getBetLite
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetLiteReq.
    ns3__GetBetLiteReq*                  request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetLiteResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetLiteResponse is a complexType.
class _ns4__getBetLiteResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetLiteResp.
    ns3__GetBetLiteResp*                 Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetMatchesLite

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetMatchesLite is a complexType.
class _ns4__getBetMatchesLite
{ public:
/// Element request of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetMatchesLiteReq.
    ns3__GetBetMatchesLiteReq*           request                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetMatchesLiteResponse

/// "http://www.betfair.com/publicapi/v5/BFExchangeService/":getBetMatchesLiteResponse is a complexType.
class _ns4__getBetMatchesLiteResponse
{ public:
/// Element Result of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetMatchesLiteResp.
    ns3__GetBetMatchesLiteResp*          Result                        ;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LoginResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__LoginResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element currency of type xs:string.
    std::string*                         currency                      ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":LoginErrorEnum.
    enum ns1__LoginErrorEnum             errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element validUntil of type xs:dateTime.
    time_t                               validUntil                     1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveLIMBMessageReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__RetrieveLIMBMessageReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":RetrieveLIMBMessageResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__RetrieveLIMBMessageResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveLIMBMessageErrorEnum.
    enum ns1__RetrieveLIMBMessageErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalMessagesCount of type xs:int.
    int                                  totalMessagesCount             1;	///< Required element.
/// Element retrievePersonalMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrievePersonalLIMBMessage.
    ns1__RetrievePersonalLIMBMessage*    retrievePersonalMessage        1;	///< Required element.
/// Element retrieveTCPrivacyPolicyChangeMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveTCPrivacyPolicyChangeLIMBMessage.
    ns1__RetrieveTCPrivacyPolicyChangeLIMBMessage*  retrieveTCPrivacyPolicyChangeMessage 1;	///< Required element.
/// Element retrievePasswordChangeMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrievePasswordChangeLIMBMessage.
    ns1__RetrievePasswordChangeLIMBMessage*  retrievePasswordChangeMessage  1;	///< Required element.
/// Element retrieveBirthDateCheckMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveBirthDateCheckLIMBMessage.
    ns1__RetrieveBirthDateCheckLIMBMessage*  retrieveBirthDateCheckMessage  1;	///< Required element.
/// Element retrieveAddressCheckMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveAddressCheckLIMBMessage.
    ns1__RetrieveAddressCheckLIMBMessage*  retrieveAddressCheckMessage    1;	///< Required element.
/// Element retrieveContactDetailsCheckMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveContactDetailsCheckLIMBMessage.
    ns1__RetrieveContactDetailsCheckLIMBMessage*  retrieveContactDetailsCheckMessage 1;	///< Required element.
/// Element retrieveChatNameChangeMessage of type "http://www.betfair.com/publicapi/types/global/v3/":RetrieveChatNameChangeLIMBMessage.
    ns1__RetrieveChatNameChangeLIMBMessage*  retrieveChatNameChangeMessage  1;	///< Required element.
/// Element retrieveCardBillingAddressCheckItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfRetrieveCardBillingAddressCheckLIMBMessage.
    ns1__ArrayOfRetrieveCardBillingAddressCheckLIMBMessage*  retrieveCardBillingAddressCheckItems;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitLIMBMessageReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__SubmitLIMBMessageReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element submitPersonalMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitPersonalLIMBMessage.
    ns1__SubmitPersonalLIMBMessage*      submitPersonalMessage          1;	///< Required element.
/// Element submitTCPrivacyPolicyChangeMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitTCPrivacyPolicyChangeLIMBMessage.
    ns1__SubmitTCPrivacyPolicyChangeLIMBMessage*  submitTCPrivacyPolicyChangeMessage 1;	///< Required element.
/// Element submitPasswordChangeMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitPasswordChangeLIMBMessage.
    ns1__SubmitPasswordChangeLIMBMessage*  submitPasswordChangeMessage    1;	///< Required element.
/// Element submitBirthDateCheckMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitBirthDateCheckLIMBMessage.
    ns1__SubmitBirthDateCheckLIMBMessage*  submitBirthDateCheckMessage    1;	///< Required element.
/// Element submitAddressCheckMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitAddressCheckLIMBMessage.
    ns1__SubmitAddressCheckLIMBMessage*  submitAddressCheckMessage      1;	///< Required element.
/// Element submitContactDetailsCheckMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitContactDetailsCheckLIMBMessage.
    ns1__SubmitContactDetailsCheckLIMBMessage*  submitContactDetailsCheckMessage 1;	///< Required element.
/// Element submitChatNameChangeMessage of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitChatNameChangeLIMBMessage.
    ns1__SubmitChatNameChangeLIMBMessage*  submitChatNameChangeMessage    1;	///< Required element.
/// Element submitCardBillingAddressCheckItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfSubmitCardBillingAddressCheckLIMBMessage.
    ns1__ArrayOfSubmitCardBillingAddressCheckLIMBMessage*  submitCardBillingAddressCheckItems;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SubmitLIMBMessageResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__SubmitLIMBMessageResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":SubmitLIMBMessageErrorEnum.
    enum ns1__SubmitLIMBMessageErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element validationErrors of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfLIMBValidationErrorsEnum.
    ns1__ArrayOfLIMBValidationErrorsEnum*  validationErrors              ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LogoutResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__LogoutResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":LogoutErrorEnum.
    enum ns1__LogoutErrorEnum            errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":LogoutReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__LogoutReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":KeepAliveResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__KeepAliveResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element apiVersion of type xs:string.
    std::string*                         apiVersion                    ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":KeepAliveReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__KeepAliveReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetEventsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__GetEventsResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventsErrorEnum.
    enum ns1__GetEventsErrorEnum         errorCode                      1;	///< Required element.
/// Element eventItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfBFEvent.
    ns1__ArrayOfBFEvent*                 eventItems                    ;	///< Nullable pointer.
/// Element eventParentId of type xs:int.
    int                                  eventParentId                  1;	///< Required element.
/// Element marketItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfMarketSummary.
    ns1__ArrayOfMarketSummary*           marketItems                   ;	///< Nullable pointer.
/// Element couponLinks of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfCouponLinks.
    ns1__ArrayOfCouponLinks*             couponLinks                   ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetEventsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__GetEventsReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element eventParentId of type xs:int.
    int                                  eventParentId                  1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetEventTypesResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__GetEventTypesResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element eventTypeItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfEventType.
    ns1__ArrayOfEventType*               eventTypeItems                ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":GetEventsErrorEnum.
    enum ns1__GetEventsErrorEnum         errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetEventTypesReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__GetEventTypesReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetSubscriptionInfoResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__GetSubscriptionInfoResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element subscriptions of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfSubscription.
    ns1__ArrayOfSubscription*            subscriptions                 ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetSubscriptionInfoReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__GetSubscriptionInfoReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":DepositFromPaymentCardResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
/// @brief Result of a DepositFromPaymentCardReq. If errorCode is set to CARD_AMOUNT_OUTSIDE_LIMIT then minAmount and maxAmount will be set. If errorCode is set to DEPOSIT_LIMIT_EXCEEDED then maxAmount will be set.
class ns1__DepositFromPaymentCardResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentsErrorEnum.
    enum ns1__PaymentsErrorEnum          errorCode                      1;	///< Required element.
/// Element fee of type xs:double.
    double                               fee                            1;	///< Required element.
/// Element maxAmount of type xs:double.
    double                               maxAmount                      1;	///< Required element.
/// Element minAmount of type xs:double.
    double                               minAmount                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element netAmount of type xs:double.
    double                               netAmount                      1;	///< Required element.
/// Element transactionId of type xs:string.
    std::string                          transactionId                  1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":DepositFromPaymentCardReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__DepositFromPaymentCardReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element amount of type xs:double.
    double                               amount                         1;	///< Required element.
/// Element cardIdentifier of type xs:string.
    std::string*                         cardIdentifier                ;	///< Nullable pointer.
/// Element cv2 of type xs:string.
    std::string*                         cv2                           ;	///< Nullable pointer.
/// Element password of type xs:string.
    std::string*                         password                      ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":AddPaymentCardReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__AddPaymentCardReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element cardNumber of type xs:string.
    std::string                          cardNumber                     1;	///< Required element.
/// Element cardType of type "http://www.betfair.com/publicapi/types/global/v3/":CardTypeEnum.
    enum ns1__CardTypeEnum               cardType                       1;	///< Required element.
/// Element startDate of type xs:string.
    std::string*                         startDate                     ;	///< Nullable pointer.
/// Element expiryDate of type xs:string.
    std::string                          expiryDate                     1;	///< Required element.
/// Element issueNumber of type xs:string.
    std::string*                         issueNumber                   ;	///< Nullable pointer.
/// Element billingName of type xs:string.
    std::string                          billingName                    1;	///< Required element.
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element address1 of type xs:string.
    std::string                          address1                       1;	///< Required element.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element address4 of type xs:string.
    std::string*                         address4                      ;	///< Nullable pointer.
/// Element town of type xs:string.
    std::string*                         town                          ;	///< Nullable pointer.
/// Element county of type xs:string.
    std::string*                         county                        ;	///< Nullable pointer.
/// Element zipCode of type xs:string.
    std::string*                         zipCode                       ;	///< Nullable pointer.
/// Element country of type xs:string.
    std::string*                         country                       ;	///< Nullable pointer.
/// Element cardStatus of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentCardStatusEnum.
    enum ns1__PaymentCardStatusEnum      cardStatus                     1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":DeletePaymentCardReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__DeletePaymentCardReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetPaymentCardReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__GetPaymentCardReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":UpdatePaymentCardReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__UpdatePaymentCardReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element expiryDate of type xs:string.
    std::string*                         expiryDate                    ;	///< Nullable pointer.
/// Element startDate of type xs:string.
    std::string*                         startDate                     ;	///< Nullable pointer.
/// Element issueNumber of type xs:string.
    std::string*                         issueNumber                   ;	///< Nullable pointer.
/// Element address1 of type xs:string.
    std::string*                         address1                      ;	///< Nullable pointer.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element address4 of type xs:string.
    std::string*                         address4                      ;	///< Nullable pointer.
/// Element town of type xs:string.
    std::string*                         town                          ;	///< Nullable pointer.
/// Element county of type xs:string.
    std::string*                         county                        ;	///< Nullable pointer.
/// Element zipCode of type xs:string.
    std::string*                         zipCode                       ;	///< Nullable pointer.
/// Element country of type xs:string.
    std::string*                         country                       ;	///< Nullable pointer.
/// Element cardStatus of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentCardStatusEnum.
    enum ns1__PaymentCardStatusEnum      cardStatus                     1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":AddPaymentCardResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__AddPaymentCardResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":AddPaymentCardErrorEnum.
    enum ns1__AddPaymentCardErrorEnum    errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element paymentCard of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentCard.
    ns1__PaymentCard*                    paymentCard                    1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":DeletePaymentCardResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__DeletePaymentCardResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":DeletePaymentCardErrorEnum.
    enum ns1__DeletePaymentCardErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element billingName of type xs:string.
    std::string                          billingName                    1;	///< Required element.
/// Element cardShortNumber of type xs:string.
    std::string                          cardShortNumber                1;	///< Required element.
/// Element cardType of type "http://www.betfair.com/publicapi/types/global/v3/":CardTypeEnum.
    enum ns1__CardTypeEnum               cardType                       1;	///< Required element.
/// Element issuingCountry of type xs:string.
    std::string*                         issuingCountry                ;	///< Nullable pointer.
/// Element expiryDate of type xs:string.
    std::string                          expiryDate                     1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":UpdatePaymentCardResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__UpdatePaymentCardResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":UpdatePaymentCardErrorEnum.
    enum ns1__UpdatePaymentCardErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element nickName of type xs:string.
    std::string                          nickName                       1;	///< Required element.
/// Element billingName of type xs:string.
    std::string                          billingName                    1;	///< Required element.
/// Element cardType of type "http://www.betfair.com/publicapi/types/global/v3/":CardTypeEnum.
    enum ns1__CardTypeEnum               cardType                       1;	///< Required element.
/// Element expiryDate of type xs:string.
    std::string                          expiryDate                     1;	///< Required element.
/// Element startDate of type xs:string.
    std::string*                         startDate                     ;	///< Nullable pointer.
/// Element address1 of type xs:string.
    std::string                          address1                       1;	///< Required element.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element address4 of type xs:string.
    std::string*                         address4                      ;	///< Nullable pointer.
/// Element zipCode of type xs:string.
    std::string*                         zipCode                       ;	///< Nullable pointer.
/// Element country of type xs:string.
    std::string*                         country                       ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetPaymentCardResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__GetPaymentCardResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":GetPaymentCardErrorEnum.
    enum ns1__GetPaymentCardErrorEnum    errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element paymentCardItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfPaymentCard.
    ns1__ArrayOfPaymentCard*             paymentCardItems              ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":WithdrawToPaymentCardResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__WithdrawToPaymentCardResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element amountWithdrawn of type xs:double.
    double                               amountWithdrawn                1;	///< Required element.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentsErrorEnum.
    enum ns1__PaymentsErrorEnum          errorCode                      1;	///< Required element.
/// Element maxAmount of type xs:double.
    double                               maxAmount                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":WithdrawToPaymentCardReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__WithdrawToPaymentCardReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element amount of type xs:double.
    double                               amount                         1;	///< Required element.
/// Element cardIdentifier of type xs:string.
    std::string*                         cardIdentifier                ;	///< Nullable pointer.
/// Element password of type xs:string.
    std::string*                         password                      ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":WithdrawByBankTransferReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__WithdrawByBankTransferReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element mode of type "http://www.betfair.com/publicapi/types/global/v3/":WithdrawByBankTransferModeEnum.
    enum ns1__WithdrawByBankTransferModeEnum  mode                           1;	///< Required element.
/// Element amount of type xs:double.
    double                               amount                         1;	///< Required element.
/// Element bankAccountDetails of type "http://www.betfair.com/publicapi/types/global/v3/":BankAccountDetails.
    ns1__BankAccountDetails*             bankAccountDetails             1;	///< Required element.
/// Element expressTransfer of type xs:boolean.
    bool                                 expressTransfer                1;	///< Required element.
/// Element password of type xs:string.
    std::string*                         password                      ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":WithdrawByBankTransferResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__WithdrawByBankTransferResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":PaymentsErrorEnum.
    enum ns1__PaymentsErrorEnum          errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element amountWithdrawn of type xs:double.
    double                               amountWithdrawn                1;	///< Required element.
/// Element minAmount of type xs:double.
    double                               minAmount                      1;	///< Required element.
/// Element maxAmount of type xs:double.
    double                               maxAmount                      1;	///< Required element.
/// Element amountAvailable of type xs:double.
    double*                              amountAvailable               ;	///< Nullable pointer.
/// Element transferFee of type xs:double.
    double*                              transferFee                   ;	///< Nullable pointer.
/// Element expressTransferFee of type xs:double.
    double*                              expressTransferFee            ;	///< Nullable pointer.
/// Element expressTransferAvailable of type xs:boolean.
    bool*                                expressTransferAvailable      ;	///< Nullable pointer.
/// Element lastBankAccountDetails of type "http://www.betfair.com/publicapi/types/global/v3/":BankAccountDetails.
    ns1__BankAccountDetails*             lastBankAccountDetails        ;	///< Nullable pointer.
/// Element requiredBankAccountDetailsFields of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfBankAccountDetailsField.
    ns1__ArrayOfBankAccountDetailsField*  requiredBankAccountDetailsFields;	///< Nullable pointer.
/// Element transactionId of type xs:string.
    std::string*                         transactionId                 ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BankAccountDetailsField is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":AbstractField.
class ns1__BankAccountDetailsField : public ns1__AbstractField
{ public:
/*  INHERITED FROM ns1__AbstractField:
/// Element required of type xs:boolean.
    bool                                 required                       1;	///< Required element.
/// Element readOnly of type xs:boolean.
    bool                                 readOnly                       1;	///< Required element.
/// Element size of type xs:int.
    int                                  size                           1;	///< Required element.
/// Element minLength of type xs:int.
    int                                  minLength                      1;	///< Required element.
/// Element maxLength of type xs:int.
    int                                  maxLength                      1;	///< Required element.
/// Element regExp of type xs:string.
    std::string                          regExp                         1;	///< Required element.
    END OF INHERITED FROM ns1__AbstractField */
/// Element type of type "http://www.betfair.com/publicapi/types/global/v3/":BankAccountDetailsFieldEnum.
    enum ns1__BankAccountDetailsFieldEnum  type                           1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":BankAccountDetails is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":BasicBankAccountDetails.
class ns1__BankAccountDetails : public ns1__BasicBankAccountDetails
{ public:
/*  INHERITED FROM ns1__BasicBankAccountDetails:
/// Element bankName of type xs:string.
    std::string*                         bankName                      ;	///< Nullable pointer.
/// Element accountHoldingBranch of type xs:string.
    std::string*                         accountHoldingBranch          ;	///< Nullable pointer.
/// Element bankGiroCreditNumber of type xs:string.
    std::string*                         bankGiroCreditNumber          ;	///< Nullable pointer.
/// Element accountNumber of type xs:string.
    std::string*                         accountNumber                 ;	///< Nullable pointer.
/// Element sortCode of type xs:string.
    std::string*                         sortCode                      ;	///< Nullable pointer.
/// Element bankCode of type xs:string.
    std::string*                         bankCode                      ;	///< Nullable pointer.
/// Element blzCode of type xs:string.
    std::string*                         blzCode                       ;	///< Nullable pointer.
/// Element bankBsb of type xs:string.
    std::string*                         bankBsb                       ;	///< Nullable pointer.
/// Element branchCode of type xs:string.
    std::string*                         branchCode                    ;	///< Nullable pointer.
/// Element bankLocationIso3 of type xs:string.
    std::string*                         bankLocationIso3              ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__BasicBankAccountDetails */
/// Element payee of type xs:string.
    std::string*                         payee                         ;	///< Nullable pointer.
/// Element accountType of type "http://www.betfair.com/publicapi/types/global/v3/":BankAccountTypeEnum.
    enum ns1__BankAccountTypeEnum        accountType                    1;	///< Required element.
/// Element bankKey of type xs:string.
    std::string*                         bankKey                       ;	///< Nullable pointer.
/// Element routing of type xs:string.
    std::string*                         routing                       ;	///< Nullable pointer.
/// Element abiCab of type xs:string.
    std::string*                         abiCab                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":TransferFundsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__TransferFundsReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element sourceWalletId of type xs:int.
    int                                  sourceWalletId                 1;	///< Required element.
/// Element targetWalletId of type xs:int.
    int                                  targetWalletId                 1;	///< Required element.
/// Element amount of type xs:double.
    double                               amount                         1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":TransferFundsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__TransferFundsResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":TransferFundsErrorEnum.
    enum ns1__TransferFundsErrorEnum     errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element monthlyDepositTotal of type xs:double.
    double*                              monthlyDepositTotal           ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SelfExcludeReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__SelfExcludeReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element selfExclude of type xs:boolean.
    bool                                 selfExclude                    1;	///< Required element.
/// Element password of type xs:string.
    std::string*                         password                      ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SelfExcludeResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__SelfExcludeResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":SelfExcludeErrorEnum.
    enum ns1__SelfExcludeErrorEnum       errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ConvertCurrencyResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__ConvertCurrencyResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element convertedAmount of type xs:double.
    double                               convertedAmount                1;	///< Required element.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ConvertCurrencyErrorEnum.
    enum ns1__ConvertCurrencyErrorEnum   errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ConvertCurrencyReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ConvertCurrencyReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element amount of type xs:double.
    double                               amount                         1;	///< Required element.
/// Element fromCurrency of type xs:string.
    std::string*                         fromCurrency                  ;	///< Nullable pointer.
/// Element toCurrency of type xs:string.
    std::string*                         toCurrency                    ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__GetCurrenciesResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element currencyItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfCurrency.
    ns1__ArrayOfCurrency*                currencyItems                 ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__GetCurrenciesReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesV2Resp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__GetCurrenciesV2Resp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element currencyItems of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfCurrencyV2.
    ns1__ArrayOfCurrencyV2*              currencyItems                 ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":CurrencyV2 is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":Currency.
class ns1__CurrencyV2 : public ns1__Currency
{ public:
/*  INHERITED FROM ns1__Currency:
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element rateGBP of type xs:double.
    double                               rateGBP                        1;	///< Required element.
    END OF INHERITED FROM ns1__Currency */
/// Element minimumStake of type xs:double.
    double*                              minimumStake                  ;	///< Nullable pointer.
/// Element minimumRangeStake of type xs:double.
    double*                              minimumRangeStake             ;	///< Nullable pointer.
/// Element minimumBSPLayLiability of type xs:double.
    double*                              minimumBSPLayLiability        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":GetCurrenciesV2Req is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__GetCurrenciesV2Req : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewReferAndEarnReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ViewReferAndEarnReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewReferAndEarnResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__ViewReferAndEarnResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ViewReferAndEarnErrorEnum.
    enum ns1__ViewReferAndEarnErrorEnum  errorCode                      1;	///< Required element.
/// Element referAndEarnCode of type xs:string.
    std::string*                         referAndEarnCode              ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ViewProfileReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__ViewProfileResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileErrorEnum.
    enum ns1__ViewProfileErrorEnum       errorCode                      1;	///< Required element.
/// Element title of type "http://www.betfair.com/publicapi/types/global/v3/":TitleEnum.
    enum ns1__TitleEnum                  title                          1;	///< Required element.
/// Element firstName of type xs:string.
    std::string*                         firstName                     ;	///< Nullable pointer.
/// Element surname of type xs:string.
    std::string*                         surname                       ;	///< Nullable pointer.
/// Element userName of type xs:string.
    std::string*                         userName                      ;	///< Nullable pointer.
/// Element forumName of type xs:string.
    std::string*                         forumName                     ;	///< Nullable pointer.
/// Element address1 of type xs:string.
    std::string*                         address1                      ;	///< Nullable pointer.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element townCity of type xs:string.
    std::string*                         townCity                      ;	///< Nullable pointer.
/// Element countyState of type xs:string.
    std::string*                         countyState                   ;	///< Nullable pointer.
/// Element postCode of type xs:string.
    std::string*                         postCode                      ;	///< Nullable pointer.
/// Element countryOfResidence of type xs:string.
    std::string*                         countryOfResidence            ;	///< Nullable pointer.
/// Element homeTelephone of type xs:string.
    std::string*                         homeTelephone                 ;	///< Nullable pointer.
/// Element workTelephone of type xs:string.
    std::string*                         workTelephone                 ;	///< Nullable pointer.
/// Element mobileTelephone of type xs:string.
    std::string*                         mobileTelephone               ;	///< Nullable pointer.
/// Element emailAddress of type xs:string.
    std::string*                         emailAddress                  ;	///< Nullable pointer.
/// Element timeZone of type xs:string.
    std::string*                         timeZone                      ;	///< Nullable pointer.
/// Element currency of type xs:string.
    std::string*                         currency                      ;	///< Nullable pointer.
/// Element gamcareLimit of type xs:int.
    int*                                 gamcareLimit                  ;	///< Nullable pointer.
/// Element gamcareFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum       gamcareFrequency               1;	///< Required element.
/// Element gamcareLossLimit of type xs:int.
    int*                                 gamcareLossLimit              ;	///< Nullable pointer.
/// Element gamcareLossLimitFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum       gamcareLossLimitFrequency      1;	///< Required element.
/// Element gamcareUpdateDate of type xs:dateTime.
    time_t                               gamcareUpdateDate              1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileV2Req is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ViewProfileV2Req : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element requestVersion of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileV2ReqVersionEnum.
    enum ns1__ViewProfileV2ReqVersionEnum*  requestVersion                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ModifyProfileReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ModifyProfileReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element address1 of type xs:string.
    std::string*                         address1                      ;	///< Nullable pointer.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element townCity of type xs:string.
    std::string*                         townCity                      ;	///< Nullable pointer.
/// Element countyState of type xs:string.
    std::string*                         countyState                   ;	///< Nullable pointer.
/// Element postCode of type xs:string.
    std::string*                         postCode                      ;	///< Nullable pointer.
/// Element countryOfResidence of type xs:string.
    std::string*                         countryOfResidence            ;	///< Nullable pointer.
/// Element homeTelephone of type xs:string.
    std::string*                         homeTelephone                 ;	///< Nullable pointer.
/// Element workTelephone of type xs:string.
    std::string*                         workTelephone                 ;	///< Nullable pointer.
/// Element mobileTelephone of type xs:string.
    std::string*                         mobileTelephone               ;	///< Nullable pointer.
/// Element emailAddress of type xs:string.
    std::string*                         emailAddress                  ;	///< Nullable pointer.
/// Element timeZone of type xs:string.
    std::string*                         timeZone                      ;	///< Nullable pointer.
/// Element depositLimit of type xs:int.
    int*                                 depositLimit                  ;	///< Nullable pointer.
/// Element depositLimitFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum*      depositLimitFrequency         ;	///< Nullable pointer.
/// Element lossLimit of type xs:int.
    int*                                 lossLimit                     ;	///< Nullable pointer.
/// Element lossLimitFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum*      lossLimitFrequency            ;	///< Nullable pointer.
/// Element nationalIdentifier of type xs:string.
    std::string*                         nationalIdentifier            ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ModifyProfileResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__ModifyProfileResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ModifyProfileErrorEnum.
    enum ns1__ModifyProfileErrorEnum     errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element validationErrors of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfValidationErrorsEnum.
    ns1__ArrayOfValidationErrorsEnum*    validationErrors              ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":CreateAccountResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__CreateAccountResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element accountId of type xs:int.
    int                                  accountId                      1;	///< Required element.
/// Element accountStatus of type "http://www.betfair.com/publicapi/types/global/v3/":AccountStatusEnum.
    enum ns1__AccountStatusEnum          accountStatus                  1;	///< Required element.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":CreateAccountErrorEnum.
    enum ns1__CreateAccountErrorEnum     errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element tan of type xs:string.
    std::string*                         tan                           ;	///< Nullable pointer.
/// Element userId of type xs:int.
    int                                  userId                         1;	///< Required element.
/// Element validationErrors of type "http://www.betfair.com/publicapi/types/global/v3/":ArrayOfValidationErrorsEnum.
    ns1__ArrayOfValidationErrorsEnum*    validationErrors              ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":CreateAccountReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__CreateAccountReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element acceptedPrivicyPolicyVersion of type xs:int.
    int                                  acceptedPrivicyPolicyVersion   1;	///< Required element.
/// Element acceptedTermsAndConditionsVersion of type xs:int.
    int                                  acceptedTermsAndConditionsVersion 1;	///< Required element.
/// Element accountType of type "http://www.betfair.com/publicapi/types/global/v3/":AccountTypeEnum.
    enum ns1__AccountTypeEnum            accountType                    1;	///< Required element.
/// Element address1 of type xs:string.
    std::string                          address1                       1;	///< Required element.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element answer1 of type xs:string.
    std::string                          answer1                        1;	///< Required element.
/// Element answer2 of type xs:string.
    std::string                          answer2                        1;	///< Required element.
/// Element browser of type xs:string.
    std::string*                         browser                       ;	///< Nullable pointer.
/// Element countryOfResidence of type xs:string.
    std::string*                         countryOfResidence            ;	///< Nullable pointer.
/// Element countyState of type xs:string.
    std::string*                         countyState                   ;	///< Nullable pointer.
/// Element currency of type xs:string.
    std::string*                         currency                      ;	///< Nullable pointer.
/// Element dateOfBirth of type xs:dateTime.
    time_t                               dateOfBirth                    1;	///< Required element.
/// Element depositLimit of type xs:double.
    double                               depositLimit                   1;	///< Required element.
/// Element depositLimitFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum       depositLimitFrequency          1;	///< Required element.
/// Element emailAddress of type xs:string.
    std::string                          emailAddress                   1;	///< Required element.
/// Element firstName of type xs:string.
    std::string                          firstName                      1;	///< Required element.
/// Element gender of type "http://www.betfair.com/publicapi/types/global/v3/":GenderEnum.
    enum ns1__GenderEnum                 gender                         1;	///< Required element.
/// Element homeTelephone of type xs:string.
    std::string                          homeTelephone                  1;	///< Required element.
/// Element informProductsServices of type xs:boolean.
    bool                                 informProductsServices         1;	///< Required element.
/// Element informSpecialOffers of type xs:boolean.
    bool                                 informSpecialOffers            1;	///< Required element.
/// Element ipAddress of type xs:string.
    std::string                          ipAddress                      1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element lossLimit of type xs:double.
    double                               lossLimit                      1;	///< Required element.
/// Element lossLimitFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum       lossLimitFrequency             1;	///< Required element.
/// Element manualAddress of type xs:boolean.
    bool                                 manualAddress                  1;	///< Required element.
/// Element mobileTelephone of type xs:string.
    std::string                          mobileTelephone                1;	///< Required element.
/// Element partnerId of type xs:int.
    int                                  partnerId                      1;	///< Required element.
/// Element password of type xs:string.
    std::string*                         password                      ;	///< Nullable pointer.
/// Element postCode of type xs:string.
    std::string*                         postCode                      ;	///< Nullable pointer.
/// Element preferredName of type xs:string.
    std::string*                         preferredName                 ;	///< Nullable pointer.
/// Element productId of type xs:int.
    int                                  productId                      1;	///< Required element.
/// Element question1 of type "http://www.betfair.com/publicapi/types/global/v3/":SecurityQuestion1Enum.
    enum ns1__SecurityQuestion1Enum      question1                      1;	///< Required element.
/// Element question2 of type "http://www.betfair.com/publicapi/types/global/v3/":SecurityQuestion2Enum.
    enum ns1__SecurityQuestion2Enum      question2                      1;	///< Required element.
/// Element referrerCode of type xs:string.
    std::string*                         referrerCode                  ;	///< Nullable pointer.
/// Element region of type "http://www.betfair.com/publicapi/types/global/v3/":RegionEnum.
    enum ns1__RegionEnum                 region                         1;	///< Required element.
/// Element subPartnerId of type xs:int.
    int                                  subPartnerId                   1;	///< Required element.
/// Element superPartnerId of type xs:int.
    int                                  superPartnerId                 1;	///< Required element.
/// Element surname of type xs:string.
    std::string                          surname                        1;	///< Required element.
/// Element timeZone of type xs:string.
    std::string*                         timeZone                      ;	///< Nullable pointer.
/// Element title of type "http://www.betfair.com/publicapi/types/global/v3/":TitleEnum.
    enum ns1__TitleEnum                  title                          1;	///< Required element.
/// Element townCity of type xs:string.
    std::string                          townCity                       1;	///< Required element.
/// Element username of type xs:string.
    std::string*                         username                      ;	///< Nullable pointer.
/// Element workTelephone of type xs:string.
    std::string*                         workTelephone                 ;	///< Nullable pointer.
/// Element nationalIdentifier of type xs:string.
    std::string*                         nationalIdentifier            ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ForgotPasswordReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ForgotPasswordReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// Element emailAddress of type xs:string.
    std::string                          emailAddress                   1;	///< Required element.
/// Element countryOfResidence of type xs:string.
    std::string                          countryOfResidence             1;	///< Required element.
/// Element forgottenPasswordAnswer1 of type xs:string.
    std::string*                         forgottenPasswordAnswer1      ;	///< Nullable pointer.
/// Element forgottenPasswordAnswer2 of type xs:string.
    std::string*                         forgottenPasswordAnswer2      ;	///< Nullable pointer.
/// Element newPassword of type xs:string.
    std::string*                         newPassword                   ;	///< Nullable pointer.
/// Element newPasswordRepeat of type xs:string.
    std::string*                         newPasswordRepeat             ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ForgotPasswordResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__ForgotPasswordResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ForgotPasswordErrorEnum.
    enum ns1__ForgotPasswordErrorEnum    errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element question1 of type xs:string.
    std::string*                         question1                     ;	///< Nullable pointer.
/// Element question2 of type xs:string.
    std::string*                         question2                     ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ModifyPasswordReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__ModifyPasswordReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element newPassword of type xs:string.
    std::string                          newPassword                    1;	///< Required element.
/// Element newPasswordRepeat of type xs:string.
    std::string                          newPasswordRepeat              1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ModifyPasswordResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__ModifyPasswordResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ModifyPasswordErrorEnum.
    enum ns1__ModifyPasswordErrorEnum    errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SetChatNameReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIRequest.
class ns1__SetChatNameReq : public ns1__APIRequest
{ public:
/*  INHERITED FROM ns1__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIRequestHeader.
    ns1__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIRequest */
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// Element chatName of type xs:string.
    std::string                          chatName                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":SetChatNameResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":APIResponse.
class ns1__SetChatNameResp : public ns1__APIResponse
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":SetChatNameErrorEnum.
    enum ns1__SetChatNameErrorEnum       errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountFundsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetAccountFundsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element availBalance of type xs:double.
    double                               availBalance                   1;	///< Required element.
/// Element balance of type xs:double.
    double                               balance                        1;	///< Required element.
/// Element commissionRetain of type xs:double.
    double                               commissionRetain               1;	///< Required element.
/// Element creditLimit of type xs:double.
    double                               creditLimit                    1;	///< Required element.
/// Element currentBetfairPoints of type xs:int.
    int                                  currentBetfairPoints           1;	///< Required element.
/// Element expoLimit of type xs:double.
    double                               expoLimit                      1;	///< Required element.
/// Element exposure of type xs:double.
    double                               exposure                       1;	///< Required element.
/// Element holidaysAvailable of type xs:int.
    int                                  holidaysAvailable              1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element nextDiscount of type xs:double.
    double                               nextDiscount                   1;	///< Required element.
/// Element withdrawBalance of type xs:double.
    double                               withdrawBalance                1;	///< Required element.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountFundsErrorEnum.
    enum ns3__GetAccountFundsErrorEnum   errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountFundsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetAccountFundsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetSilksResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksErrorEnum.
    enum ns3__GetSilksErrorEnum          errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element marketDisplayDetails of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMarketDisplayDetail.
    ns3__ArrayOfMarketDisplayDetail*     marketDisplayDetails          ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetSilksReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element markets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfInt.
    ns3__ArrayOfInt*                     markets                       ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksV2Resp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetSilksV2Resp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksErrorEnum.
    enum ns3__GetSilksErrorEnum          errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element marketDisplayDetails of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMarketDisplayDetailV2.
    ns3__ArrayOfMarketDisplayDetailV2*   marketDisplayDetails          ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":RacingSilkV2 is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":RacingSilk.
class ns3__RacingSilkV2 : public ns3__RacingSilk
{ public:
/*  INHERITED FROM ns3__RacingSilk:
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element silksURL of type xs:string.
    std::string*                         silksURL                      ;	///< Nullable pointer.
/// Element silksText of type xs:string.
    std::string*                         silksText                     ;	///< Nullable pointer.
/// Element trainerName of type xs:string.
    std::string*                         trainerName                   ;	///< Nullable pointer.
/// Element ageWeight of type xs:string.
    std::string*                         ageWeight                     ;	///< Nullable pointer.
/// Element form of type xs:string.
    std::string*                         form                          ;	///< Nullable pointer.
/// Element daysSince of type xs:int.
    int                                  daysSince                      1;	///< Required element.
/// Element jockeyClaim of type xs:int.
    int                                  jockeyClaim                    1;	///< Required element.
/// Element wearing of type xs:string.
    std::string*                         wearing                       ;	///< Nullable pointer.
/// Element saddleCloth of type xs:int.
    int                                  saddleCloth                    1;	///< Required element.
/// Element stallDraw of type xs:int.
    int                                  stallDraw                      1;	///< Required element.
    END OF INHERITED FROM ns3__RacingSilk */
/// Element ownerName of type xs:string.
    std::string*                         ownerName                     ;	///< Nullable pointer.
/// Element jockeyName of type xs:string.
    std::string*                         jockeyName                    ;	///< Nullable pointer.
/// Element colour of type xs:string.
    std::string*                         colour                        ;	///< Nullable pointer.
/// Element sex of type xs:string.
    std::string*                         sex                           ;	///< Nullable pointer.
/// Element bred of type xs:string.
    std::string*                         bred                          ;	///< Nullable pointer.
/// Element forecastPriceNumerator of type xs:int.
    int                                  forecastPriceNumerator         1;	///< Required element.
/// Element forecastPriceDenominator of type xs:int.
    int                                  forecastPriceDenominator       1;	///< Required element.
/// Element officialRating of type xs:int.
    int                                  officialRating                 1;	///< Required element.
/// Element sire of type "http://www.betfair.com/publicapi/types/exchange/v5/":Breeding.
    ns3__Breeding*                       sire                          ;	///< Nullable pointer.
/// Element dam of type "http://www.betfair.com/publicapi/types/exchange/v5/":Breeding.
    ns3__Breeding*                       dam                           ;	///< Nullable pointer.
/// Element damSire of type "http://www.betfair.com/publicapi/types/exchange/v5/":Breeding.
    ns3__Breeding*                       damSire                       ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__CancelBetsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betResults of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCancelBetsResult.
    ns3__ArrayOfCancelBetsResult*        betResults                    ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsErrorEnum.
    enum ns3__CancelBetsErrorEnum        errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__CancelBetsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element bets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCancelBets.
    ns3__ArrayOfCancelBets*              bets                          ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__CancelBetsByMarketReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element markets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfInt.
    ns3__ArrayOfInt*                     markets                       ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__CancelBetsByMarketResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element results of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCancelBetsByMarketResult.
    ns3__ArrayOfCancelBetsByMarketResult*  results                       ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":CancelBetsByMarketErrorEnum.
    enum ns3__CancelBetsByMarketErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__UpdateBetsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betResults of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfUpdateBetsResult.
    ns3__ArrayOfUpdateBetsResult*        betResults                    ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsErrorEnum.
    enum ns3__UpdateBetsErrorEnum        errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":UpdateBetsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__UpdateBetsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element bets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfUpdateBets.
    ns3__ArrayOfUpdateBets*              bets                          ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__PlaceBetsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betResults of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPlaceBetsResult.
    ns3__ArrayOfPlaceBetsResult*         betResults                    ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsErrorEnum.
    enum ns3__PlaceBetsErrorEnum         errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":PlaceBetsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__PlaceBetsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element bets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPlaceBets.
    ns3__ArrayOfPlaceBets*               bets                          ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCouponResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetCouponResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element couponId of type xs:int.
    int                                  couponId                       1;	///< Required element.
/// Element couponName of type xs:string.
    std::string*                         couponName                    ;	///< Nullable pointer.
/// Element couponMarketItems of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCouponMarket.
    ns3__ArrayOfCouponMarket*            couponMarketItems             ;	///< Nullable pointer.
/// Element parentEventId of type xs:int.
    int                                  parentEventId                  1;	///< Required element.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCouponErrorEnum.
    enum ns3__GetCouponErrorEnum         errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCouponReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetCouponReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element couponId of type xs:int.
    int                                  couponId                       1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":HeartbeatReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__HeartbeatReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element frequency of type xs:int.
    int                                  frequency                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":HeartbeatResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__HeartbeatResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":HeartbeatErrorEnum.
    enum ns3__HeartbeatErrorEnum         errorCode                      1;	///< Required element.
/// Element frequency of type xs:int.
    int                                  frequency                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketErrorEnum.
    enum ns3__GetMarketErrorEnum         errorCode                      1;	///< Required element.
/// Element market of type "http://www.betfair.com/publicapi/types/exchange/v5/":Market.
    ns3__Market*                         market                        ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element includeCouponLinks of type xs:boolean.
    bool                                 includeCouponLinks             1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketPricesResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesErrorEnum.
    enum ns3__GetMarketPricesErrorEnum   errorCode                      1;	///< Required element.
/// Element marketPrices of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketPrices.
    ns3__MarketPrices*                   marketPrices                  ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketPricesReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAllMarketsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetAllMarketsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAllMarketsErrorEnum.
    enum ns3__GetAllMarketsErrorEnum     errorCode                      1;	///< Required element.
/// Element marketData of type xs:string.
    std::string*                         marketData                    ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAllMarketsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetAllMarketsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element eventTypeIds of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfInt.
    ns3__ArrayOfInt*                     eventTypeIds                  ;	///< Nullable pointer.
/// Element countries of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfCountryCode.
    ns3__ArrayOfCountryCode*             countries                     ;	///< Nullable pointer.
/// Element fromDate of type xs:dateTime.
    time_t*                              fromDate                      ;	///< Nullable pointer.
/// Element toDate of type xs:dateTime.
    time_t*                              toDate                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetInPlayMarketsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetInPlayMarketsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetInPlayMarketsErrorEnum.
    enum ns3__GetInPlayMarketsErrorEnum  errorCode                      1;	///< Required element.
/// Element marketData of type xs:string.
    std::string*                         marketData                    ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetInPlayMarketsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetInPlayMarketsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetPrivateMarketsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetPrivateMarketsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetPrivateMarketsErrorEnum.
    enum ns3__GetPrivateMarketsErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element privateMarkets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfPrivateMarket.
    ns3__ArrayOfPrivateMarket*           privateMarkets                ;	///< Nullable pointer.
/// Element lastRefresh of type xs:long.
    LONG64                               lastRefresh                    1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetPrivateMarketsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetPrivateMarketsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element eventTypeId of type xs:int.
    int                                  eventTypeId                    1;	///< Required element.
/// Element marketType of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketTypeEnum.
    enum ns3__MarketTypeEnum             marketType                     1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCompleteMarketPricesCompressedResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetCompleteMarketPricesCompressedResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCompleteMarketPricesErrorEnum.
    enum ns3__GetCompleteMarketPricesErrorEnum  errorCode                      1;	///< Required element.
/// Element completeMarketPrices of type xs:string.
    std::string*                         completeMarketPrices          ;	///< Nullable pointer.
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCompleteMarketPricesCompressedReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetCompleteMarketPricesCompressedReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeCompressedResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketTradedVolumeCompressedResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeCompressedErrorEnum.
    enum ns3__GetMarketTradedVolumeCompressedErrorEnum  errorCode                      1;	///< Required element.
/// Element tradedVolume of type xs:string.
    std::string*                         tradedVolume                  ;	///< Nullable pointer.
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeCompressedReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketTradedVolumeCompressedReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesCompressedResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketPricesCompressedResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesErrorEnum.
    enum ns3__GetMarketPricesErrorEnum   errorCode                      1;	///< Required element.
/// Element marketPrices of type xs:string.
    std::string*                         marketPrices                  ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketPricesCompressedReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketPricesCompressedReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetCurrentBetsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element bets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBet.
    ns3__ArrayOfBet*                     bets                          ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsErrorEnum.
    enum ns3__GetCurrentBetsErrorEnum    errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalRecordCount of type xs:int.
    int                                  totalRecordCount               1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMUBetsResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element bets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMUBet.
    ns3__ArrayOfMUBet*                   bets                          ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsErrorEnum.
    enum ns3__GetMUBetsErrorEnum         errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalRecordCount of type xs:int.
    int                                  totalRecordCount               1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMUBetsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element betIds of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBetId.
    ns3__ArrayOfBetId*                   betIds                        ;	///< Nullable pointer.
/// Element orderBy of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetsOrderByEnum.
    enum ns3__BetsOrderByEnum            orderBy                        1;	///< Required element.
/// Element sortOrder of type "http://www.betfair.com/publicapi/types/exchange/v5/":SortOrderEnum.
    enum ns3__SortOrderEnum              sortOrder                      1;	///< Required element.
/// Element recordCount of type xs:int.
    int                                  recordCount                    1;	///< Required element.
/// Element startRecord of type xs:int.
    int                                  startRecord                    1;	///< Required element.
/// Element matchedSince of type xs:dateTime.
    time_t*                              matchedSince                  ;	///< Nullable pointer.
/// Element excludeLastSecond of type xs:boolean.
    bool                                 excludeLastSecond              1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
/// @brief Obtain all bets placed on a given market. Pass marketId = 0 to obtain bets for all markets. If deatiled is true then also return details of Matches when betStatus = M
class ns3__GetCurrentBetsReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element detailed of type xs:boolean.
    bool                                 detailed                       1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element timezone of type xs:string.
    std::string*                         timezone                      ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element orderBy of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetsOrderByEnum.
    enum ns3__BetsOrderByEnum            orderBy                        1;	///< Required element.
/// Element recordCount of type xs:int.
    int                                  recordCount                    1;	///< Required element.
/// Element startRecord of type xs:int.
    int                                  startRecord                    1;	///< Required element.
/// Element noTotalRecordCount of type xs:boolean.
    bool                                 noTotalRecordCount             1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetDetailedAvailableMktDepthResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetDetailedAvailableMktDepthResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetDetailedAvailMktDepthErrorEnum.
    enum ns3__GetDetailedAvailMktDepthErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element priceItems of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfAvailabilityInfo.
    ns3__ArrayOfAvailabilityInfo*        priceItems                    ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetDetailedAvailableMktDepthReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetDetailedAvailableMktDepthReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketTradedVolumeResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeErrorEnum.
    enum ns3__GetMarketTradedVolumeErrorEnum  errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element priceItems of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfVolumeInfo.
    ns3__ArrayOfVolumeInfo*              priceItems                    ;	///< Nullable pointer.
/// Element actualBSP of type xs:double.
    double*                              actualBSP                     ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketTradedVolumeReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketTradedVolumeReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element asianLineId of type xs:int.
    int                                  asianLineId                    1;	///< Required element.
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetHistoryResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetBetHistoryResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betHistoryItems of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBet.
    ns3__ArrayOfBet*                     betHistoryItems               ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetHistoryErrorEnum.
    enum ns3__GetBetHistoryErrorEnum     errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalRecordCount of type xs:int.
    int                                  totalRecordCount               1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetHistoryReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetBetHistoryReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betTypesIncluded of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betTypesIncluded               1;	///< Required element.
/// Element detailed of type xs:boolean.
    bool                                 detailed                       1;	///< Required element.
/// Element eventTypeIds of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfInt.
    ns3__ArrayOfInt*                     eventTypeIds                  ;	///< Nullable pointer.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element timezone of type xs:string.
    std::string*                         timezone                      ;	///< Nullable pointer.
/// Element marketTypesIncluded of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMarketTypeEnum.
    ns3__ArrayOfMarketTypeEnum*          marketTypesIncluded           ;	///< Nullable pointer.
/// Element placedDateFrom of type xs:dateTime.
    time_t                               placedDateFrom                 1;	///< Required element.
/// Element placedDateTo of type xs:dateTime.
    time_t                               placedDateTo                   1;	///< Required element.
/// Element recordCount of type xs:int.
    int                                  recordCount                    1;	///< Required element.
/// Element sortBetsBy of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetsOrderByEnum.
    enum ns3__BetsOrderByEnum            sortBetsBy                     1;	///< Required element.
/// Element startRecord of type xs:int.
    int                                  startRecord                    1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountStatementResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetAccountStatementResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountStatementErrorEnum.
    enum ns3__GetAccountStatementErrorEnum  errorCode                      1;	///< Required element.
/// Element items of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfAccountStatementItem.
    ns3__ArrayOfAccountStatementItem*    items                         ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalRecordCount of type xs:int.
    int                                  totalRecordCount               1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetAccountStatementReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetAccountStatementReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element endDate of type xs:dateTime.
    time_t                               endDate                        1;	///< Required element.
/// Element itemsIncluded of type "http://www.betfair.com/publicapi/types/exchange/v5/":AccountStatementIncludeEnum.
    enum ns3__AccountStatementIncludeEnum  itemsIncluded                  1;	///< Required element.
/// Element ignoreAutoTransfers of type xs:boolean.
    bool                                 ignoreAutoTransfers            1;	///< Required element.
/// Element recordCount of type xs:int.
    int                                  recordCount                    1;	///< Required element.
/// Element startDate of type xs:dateTime.
    time_t                               startDate                      1;	///< Required element.
/// Element startRecord of type xs:int.
    int                                  startRecord                    1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketProfitAndLossResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketProfitAndLossResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element annotations of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfProfitAndLoss.
    ns3__ArrayOfProfitAndLoss*           annotations                   ;	///< Nullable pointer.
/// Element commissionApplied of type xs:double.
    double                               commissionApplied              1;	///< Required element.
/// Element currencyCode of type xs:string.
    std::string*                         currencyCode                  ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketProfitAndLossErrorEnum.
    enum ns3__GetMarketProfitAndLossErrorEnum  errorCode                      1;	///< Required element.
/// Element includesSettledBets of type xs:boolean.
    bool                                 includesSettledBets            1;	///< Required element.
/// Element includesBspBets of type xs:boolean.
    bool                                 includesBspBets                1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element marketName of type xs:string.
    std::string*                         marketName                    ;	///< Nullable pointer.
/// Element marketStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketStatusEnum.
    enum ns3__MarketStatusEnum           marketStatus                   1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element unit of type xs:string.
    std::string*                         unit                          ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketProfitAndLossReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketProfitAndLossReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element includeSettledBets of type xs:boolean.
    bool                                 includeSettledBets             1;	///< Required element.
/// Element includeBspBets of type xs:boolean.
    bool                                 includeBspBets                 1;	///< Required element.
/// Element marketID of type xs:int.
    int                                  marketID                       1;	///< Required element.
/// Element netOfCommission of type xs:boolean.
    bool                                 netOfCommission                1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetBetResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element bet of type "http://www.betfair.com/publicapi/types/exchange/v5/":Bet.
    ns3__Bet*                            bet                           ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetErrorEnum.
    enum ns3__GetBetErrorEnum            errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetBetReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetLiteResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetBetLiteResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betLite of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetLite.
    ns3__BetLite*                        betLite                       ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetErrorEnum.
    enum ns3__GetBetErrorEnum            errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetLiteReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetBetLiteReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetMatchesLiteReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetBetMatchesLiteReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betId of type xs:long.
    LONG64                               betId                          1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetMatchesLiteResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetBetMatchesLiteResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element matchLites of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMatchLite.
    ns3__ArrayOfMatchLite*               matchLites                    ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetBetErrorEnum.
    enum ns3__GetBetErrorEnum            errorCode                      1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsLiteResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetCurrentBetsLiteResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betLites of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBetLite.
    ns3__ArrayOfBetLite*                 betLites                      ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsErrorEnum.
    enum ns3__GetCurrentBetsErrorEnum    errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalRecordCount of type xs:int.
    int                                  totalRecordCount               1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetCurrentBetsLiteReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetCurrentBetsLiteReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element orderBy of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetsOrderByEnum.
    enum ns3__BetsOrderByEnum            orderBy                        1;	///< Required element.
/// Element recordCount of type xs:int.
    int                                  recordCount                    1;	///< Required element.
/// Element startRecord of type xs:int.
    int                                  startRecord                    1;	///< Required element.
/// Element noTotalRecordCount of type xs:boolean.
    bool                                 noTotalRecordCount             1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsLiteResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMUBetsLiteResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element betLites of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfMUBetLite.
    ns3__ArrayOfMUBetLite*               betLites                      ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsErrorEnum.
    enum ns3__GetMUBetsErrorEnum         errorCode                      1;	///< Required element.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element totalRecordCount of type xs:int.
    int                                  totalRecordCount               1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMUBetsLiteReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMUBetsLiteReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element betStatus of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetStatusEnum.
    enum ns3__BetStatusEnum              betStatus                      1;	///< Required element.
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
/// Element betIds of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfBetId.
    ns3__ArrayOfBetId*                   betIds                        ;	///< Nullable pointer.
/// Element orderBy of type "http://www.betfair.com/publicapi/types/exchange/v5/":BetsOrderByEnum.
    enum ns3__BetsOrderByEnum            orderBy                        1;	///< Required element.
/// Element sortOrder of type "http://www.betfair.com/publicapi/types/exchange/v5/":SortOrderEnum.
    enum ns3__SortOrderEnum              sortOrder                      1;	///< Required element.
/// Element recordCount of type xs:int.
    int                                  recordCount                    1;	///< Required element.
/// Element startRecord of type xs:int.
    int                                  startRecord                    1;	///< Required element.
/// Element matchedSince of type xs:dateTime.
    time_t*                              matchedSince                  ;	///< Nullable pointer.
/// Element excludeLastSecond of type xs:boolean.
    bool                                 excludeLastSecond              1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketInfoResp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponse.
class ns3__GetMarketInfoResp : public ns3__APIResponse
{ public:
/*  INHERITED FROM ns3__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIResponseHeader.
    ns3__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIResponse */
/// Element errorCode of type "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketErrorEnum.
    enum ns3__GetMarketErrorEnum         errorCode                      1;	///< Required element.
/// Element marketLite of type "http://www.betfair.com/publicapi/types/exchange/v5/":MarketLite.
    ns3__MarketLite*                     marketLite                    ;	///< Nullable pointer.
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetMarketInfoReq is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequest.
class ns3__GetMarketInfoReq : public ns3__APIRequest
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/// Element marketId of type xs:int.
    int                                  marketId                       1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":HandicapLine is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":ProfitAndLoss.
class ns3__HandicapLine : public ns3__ProfitAndLoss
{ public:
/*  INHERITED FROM ns3__ProfitAndLoss:
/// Element futureIfWin of type xs:double.
    double                               futureIfWin                    1;	///< Required element.
/// Element ifWin of type xs:double.
    double                               ifWin                          1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element selectionName of type xs:string.
    std::string*                         selectionName                 ;	///< Nullable pointer.
/// Element worstcaseIfWin of type xs:double.
    double                               worstcaseIfWin                 1;	///< Required element.
    END OF INHERITED FROM ns3__ProfitAndLoss */
/// Element from of type xs:double.
    double                               from                           1;	///< Required element.
/// Element to of type xs:double.
    double                               to                             1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":MultiWinnerOddsLine is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":ProfitAndLoss.
class ns3__MultiWinnerOddsLine : public ns3__ProfitAndLoss
{ public:
/*  INHERITED FROM ns3__ProfitAndLoss:
/// Element futureIfWin of type xs:double.
    double                               futureIfWin                    1;	///< Required element.
/// Element ifWin of type xs:double.
    double                               ifWin                          1;	///< Required element.
/// Element selectionId of type xs:int.
    int                                  selectionId                    1;	///< Required element.
/// Element selectionName of type xs:string.
    std::string*                         selectionName                 ;	///< Nullable pointer.
/// Element worstcaseIfWin of type xs:double.
    double                               worstcaseIfWin                 1;	///< Required element.
    END OF INHERITED FROM ns3__ProfitAndLoss */
/// Element ifLoss of type xs:double.
    double                               ifLoss                         1;	///< Required element.
};

/// "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileV2Resp is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileResp.
class ns1__ViewProfileV2Resp : public ns1__ViewProfileResp
{ public:
/*  INHERITED FROM ns1__APIResponse:
/// Element header of type "http://www.betfair.com/publicapi/types/global/v3/":APIResponseHeader.
    ns1__APIResponseHeader*              header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns1__APIResponse */
/*  INHERITED FROM ns1__ViewProfileResp:
/// Element minorErrorCode of type xs:string.
    std::string*                         minorErrorCode                ;	///< Nullable pointer.
/// Element errorCode of type "http://www.betfair.com/publicapi/types/global/v3/":ViewProfileErrorEnum.
    enum ns1__ViewProfileErrorEnum       errorCode                      1;	///< Required element.
/// Element title of type "http://www.betfair.com/publicapi/types/global/v3/":TitleEnum.
    enum ns1__TitleEnum                  title                          1;	///< Required element.
/// Element firstName of type xs:string.
    std::string*                         firstName                     ;	///< Nullable pointer.
/// Element surname of type xs:string.
    std::string*                         surname                       ;	///< Nullable pointer.
/// Element userName of type xs:string.
    std::string*                         userName                      ;	///< Nullable pointer.
/// Element forumName of type xs:string.
    std::string*                         forumName                     ;	///< Nullable pointer.
/// Element address1 of type xs:string.
    std::string*                         address1                      ;	///< Nullable pointer.
/// Element address2 of type xs:string.
    std::string*                         address2                      ;	///< Nullable pointer.
/// Element address3 of type xs:string.
    std::string*                         address3                      ;	///< Nullable pointer.
/// Element townCity of type xs:string.
    std::string*                         townCity                      ;	///< Nullable pointer.
/// Element countyState of type xs:string.
    std::string*                         countyState                   ;	///< Nullable pointer.
/// Element postCode of type xs:string.
    std::string*                         postCode                      ;	///< Nullable pointer.
/// Element countryOfResidence of type xs:string.
    std::string*                         countryOfResidence            ;	///< Nullable pointer.
/// Element homeTelephone of type xs:string.
    std::string*                         homeTelephone                 ;	///< Nullable pointer.
/// Element workTelephone of type xs:string.
    std::string*                         workTelephone                 ;	///< Nullable pointer.
/// Element mobileTelephone of type xs:string.
    std::string*                         mobileTelephone               ;	///< Nullable pointer.
/// Element emailAddress of type xs:string.
    std::string*                         emailAddress                  ;	///< Nullable pointer.
/// Element timeZone of type xs:string.
    std::string*                         timeZone                      ;	///< Nullable pointer.
/// Element currency of type xs:string.
    std::string*                         currency                      ;	///< Nullable pointer.
/// Element gamcareLimit of type xs:int.
    int*                                 gamcareLimit                  ;	///< Nullable pointer.
/// Element gamcareFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum       gamcareFrequency               1;	///< Required element.
/// Element gamcareLossLimit of type xs:int.
    int*                                 gamcareLossLimit              ;	///< Nullable pointer.
/// Element gamcareLossLimitFrequency of type "http://www.betfair.com/publicapi/types/global/v3/":GamcareLimitFreqEnum.
    enum ns1__GamcareLimitFreqEnum       gamcareLossLimitFrequency      1;	///< Required element.
/// Element gamcareUpdateDate of type xs:dateTime.
    time_t                               gamcareUpdateDate              1;	///< Required element.
    END OF INHERITED FROM ns1__ViewProfileResp */
/// Element tAN of type xs:string.
    std::string*                         tAN                           ;	///< Nullable pointer.
/// Element referAndEarnCode of type xs:string.
    std::string*                         referAndEarnCode              ;	///< Nullable pointer.
/// Element earthportID of type xs:string.
    std::string*                         earthportID                   ;	///< Nullable pointer.
/// Element kYCStatus of type "http://www.betfair.com/publicapi/types/global/v3/":KYCStatusEnum.
    enum ns1__KYCStatusEnum              kYCStatus                      1;	///< Required element.
/// Element nationalIdentifier of type xs:string.
    std::string*                         nationalIdentifier             0;	///< Optional element.
};

/// "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksV2Req is a complexType with complexContent extension of "http://www.betfair.com/publicapi/types/exchange/v5/":GetSilksReq.
class ns3__GetSilksV2Req : public ns3__GetSilksReq
{ public:
/*  INHERITED FROM ns3__APIRequest:
/// Element header of type "http://www.betfair.com/publicapi/types/exchange/v5/":APIRequestHeader.
    ns3__APIRequestHeader*               header                        ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__APIRequest */
/*  INHERITED FROM ns3__GetSilksReq:
/// Element locale of type xs:string.
    std::string*                         locale                        ;	///< Nullable pointer.
/// Element markets of type "http://www.betfair.com/publicapi/types/exchange/v5/":ArrayOfInt.
    ns3__ArrayOfInt*                     markets                       ;	///< Nullable pointer.
    END OF INHERITED FROM ns3__GetSilksReq */
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.betfair.com/publicapi/types/global/v3/                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.betfair.com/publicapi/types/global/v3/                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.betfair.com/publicapi/v3/BFGlobalService/                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.betfair.com/publicapi/v3/BFGlobalService/                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.betfair.com/publicapi/types/exchange/v5/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.betfair.com/publicapi/types/exchange/v5/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.betfair.com/publicapi/v5/BFExchangeService/                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.betfair.com/publicapi/v5/BFExchangeService/                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	BFGlobalService 
//gsoap ns2  service type:	BFGlobalService 
//gsoap ns2  service port:	https://api.betfair.com/global/v3/BFGlobalService 
//gsoap ns2  service namespace:	http://www.betfair.com/publicapi/v3/BFGlobalService/ 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns4  service name:	BFExchangeService 
//gsoap ns4  service type:	BFExchangeService 
//gsoap ns4  service port:	https://api.betfair.com/exchange/v5/BFExchangeService 
//gsoap ns4  service namespace:	http://www.betfair.com/publicapi/v5/BFExchangeService/ 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref BFGlobalService

  - @ref BFExchangeService

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page BFGlobalService Binding "BFGlobalService"

@section BFGlobalService_operations Operations of Binding  "BFGlobalService"

  - @ref __ns2__login

  - @ref __ns2__retrieveLIMBMessage

  - @ref __ns2__submitLIMBMessage

  - @ref __ns2__logout

  - @ref __ns2__keepAlive

  - @ref __ns2__getEvents

  - @ref __ns2__getActiveEventTypes

  - @ref __ns2__getAllEventTypes

  - @ref __ns2__getSubscriptionInfo

  - @ref __ns2__depositFromPaymentCard

  - @ref __ns2__addPaymentCard

  - @ref __ns2__deletePaymentCard

  - @ref __ns2__updatePaymentCard

  - @ref __ns2__getPaymentCard

  - @ref __ns2__withdrawToPaymentCard

  - @ref __ns2__selfExclude

  - @ref __ns2__convertCurrency

  - @ref __ns2__getAllCurrencies

  - @ref __ns2__getAllCurrenciesV2

  - @ref __ns2__viewReferAndEarn

  - @ref __ns2__viewProfile

  - @ref __ns2__viewProfileV2

  - @ref __ns2__modifyProfile

  - @ref __ns2__createAccount

  - @ref __ns2__forgotPassword

  - @ref __ns2__modifyPassword

  - @ref __ns2__withdrawByBankTransfer

  - @ref __ns2__setChatName

  - @ref __ns2__transferFunds

@section BFGlobalService_ports Endpoints of Binding  "BFGlobalService"

  - https://api.betfair.com/global/v3/BFGlobalService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page BFExchangeService Binding "BFExchangeService"

@section BFExchangeService_operations Operations of Binding  "BFExchangeService"

  - @ref __ns4__getAccountFunds

  - @ref __ns4__cancelBets

  - @ref __ns4__cancelBetsByMarket

  - @ref __ns4__updateBets

  - @ref __ns4__placeBets

  - @ref __ns4__getMarket

  - @ref __ns4__getMarketInfo

  - @ref __ns4__getMarketPrices

  - @ref __ns4__getCompleteMarketPricesCompressed

  - @ref __ns4__getMarketTradedVolumeCompressed

  - @ref __ns4__getMarketPricesCompressed

  - @ref __ns4__getAllMarkets

  - @ref __ns4__getInPlayMarkets

  - @ref __ns4__getPrivateMarkets

  - @ref __ns4__getCurrentBets

  - @ref __ns4__getCoupon

  - @ref __ns4__getCurrentBetsLite

  - @ref __ns4__getMUBets

  - @ref __ns4__getMUBetsLite

  - @ref __ns4__getDetailAvailableMktDepth

  - @ref __ns4__getMarketTradedVolume

  - @ref __ns4__getBetHistory

  - @ref __ns4__getAccountStatement

  - @ref __ns4__getMarketProfitAndLoss

  - @ref __ns4__getBet

  - @ref __ns4__getBetLite

  - @ref __ns4__getBetMatchesLite

  - @ref __ns4__getSilks

  - @ref __ns4__getSilksV2

  - @ref __ns4__heartbeat

@section BFExchangeService_ports Endpoints of Binding  "BFExchangeService"

  - https://api.betfair.com/exchange/v5/BFExchangeService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BFGlobalService                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__login                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__login" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="login"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__login*                        ns2__login,
    // response parameters:
    _ns2__loginResponse*                ns2__loginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__login(
    struct soap *soap,
    // request parameters:
    _ns2__login*                        ns2__login,
    // response parameters:
    _ns2__loginResponse*                ns2__loginResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	login document
//gsoap ns2  service method-encoding:	login literal
//gsoap ns2  service method-action:	login login
int __ns2__login(
    _ns2__login*                        ns2__login,	///< Request parameter
    _ns2__loginResponse*                ns2__loginResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__retrieveLIMBMessage                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__retrieveLIMBMessage" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="retrieveLIMBMessage"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__retrieveLIMBMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__retrieveLIMBMessage*          ns2__retrieveLIMBMessage,
    // response parameters:
    _ns2__retrieveLIMBMessageResponse*  ns2__retrieveLIMBMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__retrieveLIMBMessage(
    struct soap *soap,
    // request parameters:
    _ns2__retrieveLIMBMessage*          ns2__retrieveLIMBMessage,
    // response parameters:
    _ns2__retrieveLIMBMessageResponse*  ns2__retrieveLIMBMessageResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	retrieveLIMBMessage document
//gsoap ns2  service method-encoding:	retrieveLIMBMessage literal
//gsoap ns2  service method-action:	retrieveLIMBMessage retrieveLIMBMessage
int __ns2__retrieveLIMBMessage(
    _ns2__retrieveLIMBMessage*          ns2__retrieveLIMBMessage,	///< Request parameter
    _ns2__retrieveLIMBMessageResponse*  ns2__retrieveLIMBMessageResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__submitLIMBMessage                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__submitLIMBMessage" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="submitLIMBMessage"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__submitLIMBMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__submitLIMBMessage*            ns2__submitLIMBMessage,
    // response parameters:
    _ns2__submitLIMBMessageResponse*    ns2__submitLIMBMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__submitLIMBMessage(
    struct soap *soap,
    // request parameters:
    _ns2__submitLIMBMessage*            ns2__submitLIMBMessage,
    // response parameters:
    _ns2__submitLIMBMessageResponse*    ns2__submitLIMBMessageResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	submitLIMBMessage document
//gsoap ns2  service method-encoding:	submitLIMBMessage literal
//gsoap ns2  service method-action:	submitLIMBMessage submitLIMBMessage
int __ns2__submitLIMBMessage(
    _ns2__submitLIMBMessage*            ns2__submitLIMBMessage,	///< Request parameter
    _ns2__submitLIMBMessageResponse*    ns2__submitLIMBMessageResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__logout                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__logout" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="logout"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__logout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__logout*                       ns2__logout,
    // response parameters:
    _ns2__logoutResponse*               ns2__logoutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__logout(
    struct soap *soap,
    // request parameters:
    _ns2__logout*                       ns2__logout,
    // response parameters:
    _ns2__logoutResponse*               ns2__logoutResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	logout document
//gsoap ns2  service method-encoding:	logout literal
//gsoap ns2  service method-action:	logout logout
int __ns2__logout(
    _ns2__logout*                       ns2__logout,	///< Request parameter
    _ns2__logoutResponse*               ns2__logoutResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__keepAlive                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__keepAlive" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="keepAlive"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__keepAlive(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__keepAlive*                    ns2__keepAlive,
    // response parameters:
    _ns2__keepAliveResponse*            ns2__keepAliveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__keepAlive(
    struct soap *soap,
    // request parameters:
    _ns2__keepAlive*                    ns2__keepAlive,
    // response parameters:
    _ns2__keepAliveResponse*            ns2__keepAliveResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	keepAlive document
//gsoap ns2  service method-encoding:	keepAlive literal
//gsoap ns2  service method-action:	keepAlive keepAlive
int __ns2__keepAlive(
    _ns2__keepAlive*                    ns2__keepAlive,	///< Request parameter
    _ns2__keepAliveResponse*            ns2__keepAliveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getEvents                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getEvents" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getEvents"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getEvents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getEvents*                    ns2__getEvents,
    // response parameters:
    _ns2__getEventsResponse*            ns2__getEventsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getEvents(
    struct soap *soap,
    // request parameters:
    _ns2__getEvents*                    ns2__getEvents,
    // response parameters:
    _ns2__getEventsResponse*            ns2__getEventsResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getEvents document
//gsoap ns2  service method-encoding:	getEvents literal
//gsoap ns2  service method-action:	getEvents getEvents
int __ns2__getEvents(
    _ns2__getEvents*                    ns2__getEvents,	///< Request parameter
    _ns2__getEventsResponse*            ns2__getEventsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getActiveEventTypes                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getActiveEventTypes" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getActiveEventTypes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getActiveEventTypes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getActiveEventTypes*          ns2__getActiveEventTypes,
    // response parameters:
    _ns2__getActiveEventTypesResponse*  ns2__getActiveEventTypesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getActiveEventTypes(
    struct soap *soap,
    // request parameters:
    _ns2__getActiveEventTypes*          ns2__getActiveEventTypes,
    // response parameters:
    _ns2__getActiveEventTypesResponse*  ns2__getActiveEventTypesResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getActiveEventTypes document
//gsoap ns2  service method-encoding:	getActiveEventTypes literal
//gsoap ns2  service method-action:	getActiveEventTypes getActiveEventTypes
int __ns2__getActiveEventTypes(
    _ns2__getActiveEventTypes*          ns2__getActiveEventTypes,	///< Request parameter
    _ns2__getActiveEventTypesResponse*  ns2__getActiveEventTypesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getAllEventTypes                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getAllEventTypes" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getAllEventTypes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getAllEventTypes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getAllEventTypes*             ns2__getAllEventTypes,
    // response parameters:
    _ns2__getAllEventTypesResponse*     ns2__getAllEventTypesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getAllEventTypes(
    struct soap *soap,
    // request parameters:
    _ns2__getAllEventTypes*             ns2__getAllEventTypes,
    // response parameters:
    _ns2__getAllEventTypesResponse*     ns2__getAllEventTypesResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getAllEventTypes document
//gsoap ns2  service method-encoding:	getAllEventTypes literal
//gsoap ns2  service method-action:	getAllEventTypes getAllEventTypes
int __ns2__getAllEventTypes(
    _ns2__getAllEventTypes*             ns2__getAllEventTypes,	///< Request parameter
    _ns2__getAllEventTypesResponse*     ns2__getAllEventTypesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getSubscriptionInfo                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getSubscriptionInfo" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getSubscriptionInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getSubscriptionInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getSubscriptionInfo*          ns2__getSubscriptionInfo,
    // response parameters:
    _ns2__getSubscriptionInfoResponse*  ns2__getSubscriptionInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getSubscriptionInfo(
    struct soap *soap,
    // request parameters:
    _ns2__getSubscriptionInfo*          ns2__getSubscriptionInfo,
    // response parameters:
    _ns2__getSubscriptionInfoResponse*  ns2__getSubscriptionInfoResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getSubscriptionInfo document
//gsoap ns2  service method-encoding:	getSubscriptionInfo literal
//gsoap ns2  service method-action:	getSubscriptionInfo getSubscriptionInfo
int __ns2__getSubscriptionInfo(
    _ns2__getSubscriptionInfo*          ns2__getSubscriptionInfo,	///< Request parameter
    _ns2__getSubscriptionInfoResponse*  ns2__getSubscriptionInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__depositFromPaymentCard                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__depositFromPaymentCard" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="depositFromPaymentCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__depositFromPaymentCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__depositFromPaymentCard*       ns2__depositFromPaymentCard,
    // response parameters:
    _ns2__depositFromPaymentCardResponse* ns2__depositFromPaymentCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__depositFromPaymentCard(
    struct soap *soap,
    // request parameters:
    _ns2__depositFromPaymentCard*       ns2__depositFromPaymentCard,
    // response parameters:
    _ns2__depositFromPaymentCardResponse* ns2__depositFromPaymentCardResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	depositFromPaymentCard document
//gsoap ns2  service method-encoding:	depositFromPaymentCard literal
//gsoap ns2  service method-action:	depositFromPaymentCard depositFromPaymentCard
int __ns2__depositFromPaymentCard(
    _ns2__depositFromPaymentCard*       ns2__depositFromPaymentCard,	///< Request parameter
    _ns2__depositFromPaymentCardResponse* ns2__depositFromPaymentCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__addPaymentCard                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__addPaymentCard" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="addPaymentCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__addPaymentCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__addPaymentCard*               ns2__addPaymentCard,
    // response parameters:
    _ns2__addPaymentCardResponse*       ns2__addPaymentCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__addPaymentCard(
    struct soap *soap,
    // request parameters:
    _ns2__addPaymentCard*               ns2__addPaymentCard,
    // response parameters:
    _ns2__addPaymentCardResponse*       ns2__addPaymentCardResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	addPaymentCard document
//gsoap ns2  service method-encoding:	addPaymentCard literal
//gsoap ns2  service method-action:	addPaymentCard addPaymentCard
int __ns2__addPaymentCard(
    _ns2__addPaymentCard*               ns2__addPaymentCard,	///< Request parameter
    _ns2__addPaymentCardResponse*       ns2__addPaymentCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__deletePaymentCard                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__deletePaymentCard" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="deletePaymentCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__deletePaymentCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__deletePaymentCard*            ns2__deletePaymentCard,
    // response parameters:
    _ns2__deletePaymentCardResponse*    ns2__deletePaymentCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__deletePaymentCard(
    struct soap *soap,
    // request parameters:
    _ns2__deletePaymentCard*            ns2__deletePaymentCard,
    // response parameters:
    _ns2__deletePaymentCardResponse*    ns2__deletePaymentCardResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	deletePaymentCard document
//gsoap ns2  service method-encoding:	deletePaymentCard literal
//gsoap ns2  service method-action:	deletePaymentCard deletePaymentCard
int __ns2__deletePaymentCard(
    _ns2__deletePaymentCard*            ns2__deletePaymentCard,	///< Request parameter
    _ns2__deletePaymentCardResponse*    ns2__deletePaymentCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__updatePaymentCard                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__updatePaymentCard" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="updatePaymentCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__updatePaymentCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__updatePaymentCard*            ns2__updatePaymentCard,
    // response parameters:
    _ns2__updatePaymentCardResponse*    ns2__updatePaymentCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__updatePaymentCard(
    struct soap *soap,
    // request parameters:
    _ns2__updatePaymentCard*            ns2__updatePaymentCard,
    // response parameters:
    _ns2__updatePaymentCardResponse*    ns2__updatePaymentCardResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	updatePaymentCard document
//gsoap ns2  service method-encoding:	updatePaymentCard literal
//gsoap ns2  service method-action:	updatePaymentCard updatePaymentCard
int __ns2__updatePaymentCard(
    _ns2__updatePaymentCard*            ns2__updatePaymentCard,	///< Request parameter
    _ns2__updatePaymentCardResponse*    ns2__updatePaymentCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getPaymentCard                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getPaymentCard" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getPaymentCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getPaymentCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getPaymentCard*               ns2__getPaymentCard,
    // response parameters:
    _ns2__getPaymentCardResponse*       ns2__getPaymentCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getPaymentCard(
    struct soap *soap,
    // request parameters:
    _ns2__getPaymentCard*               ns2__getPaymentCard,
    // response parameters:
    _ns2__getPaymentCardResponse*       ns2__getPaymentCardResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getPaymentCard document
//gsoap ns2  service method-encoding:	getPaymentCard literal
//gsoap ns2  service method-action:	getPaymentCard getPaymentCard
int __ns2__getPaymentCard(
    _ns2__getPaymentCard*               ns2__getPaymentCard,	///< Request parameter
    _ns2__getPaymentCardResponse*       ns2__getPaymentCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__withdrawToPaymentCard                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__withdrawToPaymentCard" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="withdrawToPaymentCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__withdrawToPaymentCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__withdrawToPaymentCard*        ns2__withdrawToPaymentCard,
    // response parameters:
    _ns2__withdrawToPaymentCardResponse* ns2__withdrawToPaymentCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__withdrawToPaymentCard(
    struct soap *soap,
    // request parameters:
    _ns2__withdrawToPaymentCard*        ns2__withdrawToPaymentCard,
    // response parameters:
    _ns2__withdrawToPaymentCardResponse* ns2__withdrawToPaymentCardResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	withdrawToPaymentCard document
//gsoap ns2  service method-encoding:	withdrawToPaymentCard literal
//gsoap ns2  service method-action:	withdrawToPaymentCard withdrawToPaymentCard
int __ns2__withdrawToPaymentCard(
    _ns2__withdrawToPaymentCard*        ns2__withdrawToPaymentCard,	///< Request parameter
    _ns2__withdrawToPaymentCardResponse* ns2__withdrawToPaymentCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__selfExclude                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__selfExclude" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="selfExclude"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__selfExclude(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__selfExclude*                  ns2__selfExclude,
    // response parameters:
    _ns2__selfExcludeResponse*          ns2__selfExcludeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__selfExclude(
    struct soap *soap,
    // request parameters:
    _ns2__selfExclude*                  ns2__selfExclude,
    // response parameters:
    _ns2__selfExcludeResponse*          ns2__selfExcludeResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	selfExclude document
//gsoap ns2  service method-encoding:	selfExclude literal
//gsoap ns2  service method-action:	selfExclude selfExclude
int __ns2__selfExclude(
    _ns2__selfExclude*                  ns2__selfExclude,	///< Request parameter
    _ns2__selfExcludeResponse*          ns2__selfExcludeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__convertCurrency                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__convertCurrency" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="convertCurrency"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__convertCurrency(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__convertCurrency*              ns2__convertCurrency,
    // response parameters:
    _ns2__convertCurrencyResponse*      ns2__convertCurrencyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__convertCurrency(
    struct soap *soap,
    // request parameters:
    _ns2__convertCurrency*              ns2__convertCurrency,
    // response parameters:
    _ns2__convertCurrencyResponse*      ns2__convertCurrencyResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	convertCurrency document
//gsoap ns2  service method-encoding:	convertCurrency literal
//gsoap ns2  service method-action:	convertCurrency convertCurrency
int __ns2__convertCurrency(
    _ns2__convertCurrency*              ns2__convertCurrency,	///< Request parameter
    _ns2__convertCurrencyResponse*      ns2__convertCurrencyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getAllCurrencies                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getAllCurrencies" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getAllCurrencies"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getAllCurrencies(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getAllCurrencies*             ns2__getAllCurrencies,
    // response parameters:
    _ns2__getAllCurrenciesResponse*     ns2__getAllCurrenciesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getAllCurrencies(
    struct soap *soap,
    // request parameters:
    _ns2__getAllCurrencies*             ns2__getAllCurrencies,
    // response parameters:
    _ns2__getAllCurrenciesResponse*     ns2__getAllCurrenciesResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getAllCurrencies document
//gsoap ns2  service method-encoding:	getAllCurrencies literal
//gsoap ns2  service method-action:	getAllCurrencies getAllCurrencies
int __ns2__getAllCurrencies(
    _ns2__getAllCurrencies*             ns2__getAllCurrencies,	///< Request parameter
    _ns2__getAllCurrenciesResponse*     ns2__getAllCurrenciesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__getAllCurrenciesV2                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__getAllCurrenciesV2" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getAllCurrenciesV2"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__getAllCurrenciesV2(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__getAllCurrenciesV2*           ns2__getAllCurrenciesV2,
    // response parameters:
    _ns2__getAllCurrenciesV2Response*   ns2__getAllCurrenciesV2Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__getAllCurrenciesV2(
    struct soap *soap,
    // request parameters:
    _ns2__getAllCurrenciesV2*           ns2__getAllCurrenciesV2,
    // response parameters:
    _ns2__getAllCurrenciesV2Response*   ns2__getAllCurrenciesV2Response
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	getAllCurrenciesV2 document
//gsoap ns2  service method-encoding:	getAllCurrenciesV2 literal
//gsoap ns2  service method-action:	getAllCurrenciesV2 getAllCurrenciesV2
int __ns2__getAllCurrenciesV2(
    _ns2__getAllCurrenciesV2*           ns2__getAllCurrenciesV2,	///< Request parameter
    _ns2__getAllCurrenciesV2Response*   ns2__getAllCurrenciesV2Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__viewReferAndEarn                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__viewReferAndEarn" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="viewReferAndEarn"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__viewReferAndEarn(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__viewReferAndEarn*             ns2__viewReferAndEarn,
    // response parameters:
    _ns2__viewReferAndEarnResponse*     ns2__viewReferAndEarnResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__viewReferAndEarn(
    struct soap *soap,
    // request parameters:
    _ns2__viewReferAndEarn*             ns2__viewReferAndEarn,
    // response parameters:
    _ns2__viewReferAndEarnResponse*     ns2__viewReferAndEarnResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	viewReferAndEarn document
//gsoap ns2  service method-encoding:	viewReferAndEarn literal
//gsoap ns2  service method-action:	viewReferAndEarn viewReferAndEarn
int __ns2__viewReferAndEarn(
    _ns2__viewReferAndEarn*             ns2__viewReferAndEarn,	///< Request parameter
    _ns2__viewReferAndEarnResponse*     ns2__viewReferAndEarnResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__viewProfile                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__viewProfile" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="viewProfile"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__viewProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__viewProfile*                  ns2__viewProfile,
    // response parameters:
    _ns2__viewProfileResponse*          ns2__viewProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__viewProfile(
    struct soap *soap,
    // request parameters:
    _ns2__viewProfile*                  ns2__viewProfile,
    // response parameters:
    _ns2__viewProfileResponse*          ns2__viewProfileResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	viewProfile document
//gsoap ns2  service method-encoding:	viewProfile literal
//gsoap ns2  service method-action:	viewProfile viewProfile
int __ns2__viewProfile(
    _ns2__viewProfile*                  ns2__viewProfile,	///< Request parameter
    _ns2__viewProfileResponse*          ns2__viewProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__viewProfileV2                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__viewProfileV2" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="viewProfileV2"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__viewProfileV2(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__viewProfileV2*                ns2__viewProfileV2,
    // response parameters:
    _ns2__viewProfileV2Response*        ns2__viewProfileV2Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__viewProfileV2(
    struct soap *soap,
    // request parameters:
    _ns2__viewProfileV2*                ns2__viewProfileV2,
    // response parameters:
    _ns2__viewProfileV2Response*        ns2__viewProfileV2Response
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	viewProfileV2 document
//gsoap ns2  service method-encoding:	viewProfileV2 literal
//gsoap ns2  service method-action:	viewProfileV2 viewProfileV2
int __ns2__viewProfileV2(
    _ns2__viewProfileV2*                ns2__viewProfileV2,	///< Request parameter
    _ns2__viewProfileV2Response*        ns2__viewProfileV2Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__modifyProfile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__modifyProfile" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="modifyProfile"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__modifyProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__modifyProfile*                ns2__modifyProfile,
    // response parameters:
    _ns2__modifyProfileResponse*        ns2__modifyProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__modifyProfile(
    struct soap *soap,
    // request parameters:
    _ns2__modifyProfile*                ns2__modifyProfile,
    // response parameters:
    _ns2__modifyProfileResponse*        ns2__modifyProfileResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	modifyProfile document
//gsoap ns2  service method-encoding:	modifyProfile literal
//gsoap ns2  service method-action:	modifyProfile modifyProfile
int __ns2__modifyProfile(
    _ns2__modifyProfile*                ns2__modifyProfile,	///< Request parameter
    _ns2__modifyProfileResponse*        ns2__modifyProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__createAccount                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__createAccount" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="createAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__createAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__createAccount*                ns2__createAccount,
    // response parameters:
    _ns2__createAccountResponse*        ns2__createAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__createAccount(
    struct soap *soap,
    // request parameters:
    _ns2__createAccount*                ns2__createAccount,
    // response parameters:
    _ns2__createAccountResponse*        ns2__createAccountResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	createAccount document
//gsoap ns2  service method-encoding:	createAccount literal
//gsoap ns2  service method-action:	createAccount createAccount
int __ns2__createAccount(
    _ns2__createAccount*                ns2__createAccount,	///< Request parameter
    _ns2__createAccountResponse*        ns2__createAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__forgotPassword                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__forgotPassword" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="forgotPassword"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__forgotPassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__forgotPassword*               ns2__forgotPassword,
    // response parameters:
    _ns2__forgotPasswordResponse*       ns2__forgotPasswordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__forgotPassword(
    struct soap *soap,
    // request parameters:
    _ns2__forgotPassword*               ns2__forgotPassword,
    // response parameters:
    _ns2__forgotPasswordResponse*       ns2__forgotPasswordResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	forgotPassword document
//gsoap ns2  service method-encoding:	forgotPassword literal
//gsoap ns2  service method-action:	forgotPassword forgotPassword
int __ns2__forgotPassword(
    _ns2__forgotPassword*               ns2__forgotPassword,	///< Request parameter
    _ns2__forgotPasswordResponse*       ns2__forgotPasswordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__modifyPassword                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__modifyPassword" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="modifyPassword"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__modifyPassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__modifyPassword*               ns2__modifyPassword,
    // response parameters:
    _ns2__modifyPasswordResponse*       ns2__modifyPasswordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__modifyPassword(
    struct soap *soap,
    // request parameters:
    _ns2__modifyPassword*               ns2__modifyPassword,
    // response parameters:
    _ns2__modifyPasswordResponse*       ns2__modifyPasswordResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	modifyPassword document
//gsoap ns2  service method-encoding:	modifyPassword literal
//gsoap ns2  service method-action:	modifyPassword modifyPassword
int __ns2__modifyPassword(
    _ns2__modifyPassword*               ns2__modifyPassword,	///< Request parameter
    _ns2__modifyPasswordResponse*       ns2__modifyPasswordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__withdrawByBankTransfer                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__withdrawByBankTransfer" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="withdrawByBankTransfer"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__withdrawByBankTransfer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__withdrawByBankTransfer*       ns2__withdrawByBankTransfer,
    // response parameters:
    _ns2__withdrawByBankTransferResponse* ns2__withdrawByBankTransferResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__withdrawByBankTransfer(
    struct soap *soap,
    // request parameters:
    _ns2__withdrawByBankTransfer*       ns2__withdrawByBankTransfer,
    // response parameters:
    _ns2__withdrawByBankTransferResponse* ns2__withdrawByBankTransferResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	withdrawByBankTransfer document
//gsoap ns2  service method-encoding:	withdrawByBankTransfer literal
//gsoap ns2  service method-action:	withdrawByBankTransfer withdrawByBankTransfer
int __ns2__withdrawByBankTransfer(
    _ns2__withdrawByBankTransfer*       ns2__withdrawByBankTransfer,	///< Request parameter
    _ns2__withdrawByBankTransferResponse* ns2__withdrawByBankTransferResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__setChatName                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__setChatName" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="setChatName"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__setChatName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__setChatName*                  ns2__setChatName,
    // response parameters:
    _ns2__setChatNameResponse*          ns2__setChatNameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__setChatName(
    struct soap *soap,
    // request parameters:
    _ns2__setChatName*                  ns2__setChatName,
    // response parameters:
    _ns2__setChatNameResponse*          ns2__setChatNameResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	setChatName document
//gsoap ns2  service method-encoding:	setChatName literal
//gsoap ns2  service method-action:	setChatName setChatName
int __ns2__setChatName(
    _ns2__setChatName*                  ns2__setChatName,	///< Request parameter
    _ns2__setChatNameResponse*          ns2__setChatNameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__transferFunds                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__transferFunds" of service binding "BFGlobalService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="transferFunds"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__transferFunds(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns2__transferFunds*                ns2__transferFunds,
    // response parameters:
    _ns2__transferFundsResponse*        ns2__transferFundsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__transferFunds(
    struct soap *soap,
    // request parameters:
    _ns2__transferFunds*                ns2__transferFunds,
    // response parameters:
    _ns2__transferFundsResponse*        ns2__transferFundsResponse
  );
@endcode

C++ proxy class (defined in soapBFGlobalServiceProxy.h):
@code
  class BFGlobalServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFGlobalServiceService.h):
@code
  class BFGlobalServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	transferFunds document
//gsoap ns2  service method-encoding:	transferFunds literal
//gsoap ns2  service method-action:	transferFunds transferFunds
int __ns2__transferFunds(
    _ns2__transferFunds*                ns2__transferFunds,	///< Request parameter
    _ns2__transferFundsResponse*        ns2__transferFundsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BFExchangeService                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getAccountFunds                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getAccountFunds" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getAccountFunds"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getAccountFunds(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getAccountFunds*              ns4__getAccountFunds,
    // response parameters:
    _ns4__getAccountFundsResponse*      ns4__getAccountFundsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getAccountFunds(
    struct soap *soap,
    // request parameters:
    _ns4__getAccountFunds*              ns4__getAccountFunds,
    // response parameters:
    _ns4__getAccountFundsResponse*      ns4__getAccountFundsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getAccountFunds document
//gsoap ns4  service method-encoding:	getAccountFunds literal
//gsoap ns4  service method-action:	getAccountFunds getAccountFunds
int __ns4__getAccountFunds(
    _ns4__getAccountFunds*              ns4__getAccountFunds,	///< Request parameter
    _ns4__getAccountFundsResponse*      ns4__getAccountFundsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__cancelBets                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__cancelBets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="cancelBets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__cancelBets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__cancelBets*                   ns4__cancelBets,
    // response parameters:
    _ns4__cancelBetsResponse*           ns4__cancelBetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__cancelBets(
    struct soap *soap,
    // request parameters:
    _ns4__cancelBets*                   ns4__cancelBets,
    // response parameters:
    _ns4__cancelBetsResponse*           ns4__cancelBetsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	cancelBets document
//gsoap ns4  service method-encoding:	cancelBets literal
//gsoap ns4  service method-action:	cancelBets cancelBets
int __ns4__cancelBets(
    _ns4__cancelBets*                   ns4__cancelBets,	///< Request parameter
    _ns4__cancelBetsResponse*           ns4__cancelBetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__cancelBetsByMarket                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__cancelBetsByMarket" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="cancelBetsByMarket"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__cancelBetsByMarket(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__cancelBetsByMarket*           ns4__cancelBetsByMarket,
    // response parameters:
    _ns4__cancelBetsByMarketResponse*   ns4__cancelBetsByMarketResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__cancelBetsByMarket(
    struct soap *soap,
    // request parameters:
    _ns4__cancelBetsByMarket*           ns4__cancelBetsByMarket,
    // response parameters:
    _ns4__cancelBetsByMarketResponse*   ns4__cancelBetsByMarketResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	cancelBetsByMarket document
//gsoap ns4  service method-encoding:	cancelBetsByMarket literal
//gsoap ns4  service method-action:	cancelBetsByMarket cancelBetsByMarket
int __ns4__cancelBetsByMarket(
    _ns4__cancelBetsByMarket*           ns4__cancelBetsByMarket,	///< Request parameter
    _ns4__cancelBetsByMarketResponse*   ns4__cancelBetsByMarketResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__updateBets                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__updateBets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="updateBets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__updateBets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__updateBets*                   ns4__updateBets,
    // response parameters:
    _ns4__updateBetsResponse*           ns4__updateBetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__updateBets(
    struct soap *soap,
    // request parameters:
    _ns4__updateBets*                   ns4__updateBets,
    // response parameters:
    _ns4__updateBetsResponse*           ns4__updateBetsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	updateBets document
//gsoap ns4  service method-encoding:	updateBets literal
//gsoap ns4  service method-action:	updateBets updateBets
int __ns4__updateBets(
    _ns4__updateBets*                   ns4__updateBets,	///< Request parameter
    _ns4__updateBetsResponse*           ns4__updateBetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__placeBets                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__placeBets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="placeBets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__placeBets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__placeBets*                    ns4__placeBets,
    // response parameters:
    _ns4__placeBetsResponse*            ns4__placeBetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__placeBets(
    struct soap *soap,
    // request parameters:
    _ns4__placeBets*                    ns4__placeBets,
    // response parameters:
    _ns4__placeBetsResponse*            ns4__placeBetsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	placeBets document
//gsoap ns4  service method-encoding:	placeBets literal
//gsoap ns4  service method-action:	placeBets placeBets
int __ns4__placeBets(
    _ns4__placeBets*                    ns4__placeBets,	///< Request parameter
    _ns4__placeBetsResponse*            ns4__placeBetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarket                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarket" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarket"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarket(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarket*                    ns4__getMarket,
    // response parameters:
    _ns4__getMarketResponse*            ns4__getMarketResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarket(
    struct soap *soap,
    // request parameters:
    _ns4__getMarket*                    ns4__getMarket,
    // response parameters:
    _ns4__getMarketResponse*            ns4__getMarketResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarket document
//gsoap ns4  service method-encoding:	getMarket literal
//gsoap ns4  service method-action:	getMarket getMarket
int __ns4__getMarket(
    _ns4__getMarket*                    ns4__getMarket,	///< Request parameter
    _ns4__getMarketResponse*            ns4__getMarketResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarketInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarketInfo" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarketInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarketInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarketInfo*                ns4__getMarketInfo,
    // response parameters:
    _ns4__getMarketInfoResponse*        ns4__getMarketInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarketInfo(
    struct soap *soap,
    // request parameters:
    _ns4__getMarketInfo*                ns4__getMarketInfo,
    // response parameters:
    _ns4__getMarketInfoResponse*        ns4__getMarketInfoResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarketInfo document
//gsoap ns4  service method-encoding:	getMarketInfo literal
//gsoap ns4  service method-action:	getMarketInfo getMarketInfo
int __ns4__getMarketInfo(
    _ns4__getMarketInfo*                ns4__getMarketInfo,	///< Request parameter
    _ns4__getMarketInfoResponse*        ns4__getMarketInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarketPrices                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarketPrices" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarketPrices"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarketPrices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarketPrices*              ns4__getMarketPrices,
    // response parameters:
    _ns4__getMarketPricesResponse*      ns4__getMarketPricesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarketPrices(
    struct soap *soap,
    // request parameters:
    _ns4__getMarketPrices*              ns4__getMarketPrices,
    // response parameters:
    _ns4__getMarketPricesResponse*      ns4__getMarketPricesResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarketPrices document
//gsoap ns4  service method-encoding:	getMarketPrices literal
//gsoap ns4  service method-action:	getMarketPrices getMarketPrices
int __ns4__getMarketPrices(
    _ns4__getMarketPrices*              ns4__getMarketPrices,	///< Request parameter
    _ns4__getMarketPricesResponse*      ns4__getMarketPricesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getCompleteMarketPricesCompressed                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getCompleteMarketPricesCompressed" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getCompleteMarketPricesCompressed"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getCompleteMarketPricesCompressed(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getCompleteMarketPricesCompressed* ns4__getCompleteMarketPricesCompressed,
    // response parameters:
    _ns4__getCompleteMarketPricesCompressedResponse* ns4__getCompleteMarketPricesCompressedResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getCompleteMarketPricesCompressed(
    struct soap *soap,
    // request parameters:
    _ns4__getCompleteMarketPricesCompressed* ns4__getCompleteMarketPricesCompressed,
    // response parameters:
    _ns4__getCompleteMarketPricesCompressedResponse* ns4__getCompleteMarketPricesCompressedResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getCompleteMarketPricesCompressed document
//gsoap ns4  service method-encoding:	getCompleteMarketPricesCompressed literal
//gsoap ns4  service method-action:	getCompleteMarketPricesCompressed getCompleteMarketPricesCompressed
int __ns4__getCompleteMarketPricesCompressed(
    _ns4__getCompleteMarketPricesCompressed* ns4__getCompleteMarketPricesCompressed,	///< Request parameter
    _ns4__getCompleteMarketPricesCompressedResponse* ns4__getCompleteMarketPricesCompressedResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarketTradedVolumeCompressed                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarketTradedVolumeCompressed" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarketTradedVolumeCompressed"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarketTradedVolumeCompressed(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarketTradedVolumeCompressed* ns4__getMarketTradedVolumeCompressed,
    // response parameters:
    _ns4__getMarketTradedVolumeCompressedResponse* ns4__getMarketTradedVolumeCompressedResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarketTradedVolumeCompressed(
    struct soap *soap,
    // request parameters:
    _ns4__getMarketTradedVolumeCompressed* ns4__getMarketTradedVolumeCompressed,
    // response parameters:
    _ns4__getMarketTradedVolumeCompressedResponse* ns4__getMarketTradedVolumeCompressedResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarketTradedVolumeCompressed document
//gsoap ns4  service method-encoding:	getMarketTradedVolumeCompressed literal
//gsoap ns4  service method-action:	getMarketTradedVolumeCompressed getMarketTradedVolumeCompressed
int __ns4__getMarketTradedVolumeCompressed(
    _ns4__getMarketTradedVolumeCompressed* ns4__getMarketTradedVolumeCompressed,	///< Request parameter
    _ns4__getMarketTradedVolumeCompressedResponse* ns4__getMarketTradedVolumeCompressedResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarketPricesCompressed                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarketPricesCompressed" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarketPricesCompressed"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarketPricesCompressed(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarketPricesCompressed*    ns4__getMarketPricesCompressed,
    // response parameters:
    _ns4__getMarketPricesCompressedResponse* ns4__getMarketPricesCompressedResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarketPricesCompressed(
    struct soap *soap,
    // request parameters:
    _ns4__getMarketPricesCompressed*    ns4__getMarketPricesCompressed,
    // response parameters:
    _ns4__getMarketPricesCompressedResponse* ns4__getMarketPricesCompressedResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarketPricesCompressed document
//gsoap ns4  service method-encoding:	getMarketPricesCompressed literal
//gsoap ns4  service method-action:	getMarketPricesCompressed getMarketPricesCompressed
int __ns4__getMarketPricesCompressed(
    _ns4__getMarketPricesCompressed*    ns4__getMarketPricesCompressed,	///< Request parameter
    _ns4__getMarketPricesCompressedResponse* ns4__getMarketPricesCompressedResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getAllMarkets                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getAllMarkets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getAllMarkets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getAllMarkets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getAllMarkets*                ns4__getAllMarkets,
    // response parameters:
    _ns4__getAllMarketsResponse*        ns4__getAllMarketsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getAllMarkets(
    struct soap *soap,
    // request parameters:
    _ns4__getAllMarkets*                ns4__getAllMarkets,
    // response parameters:
    _ns4__getAllMarketsResponse*        ns4__getAllMarketsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getAllMarkets document
//gsoap ns4  service method-encoding:	getAllMarkets literal
//gsoap ns4  service method-action:	getAllMarkets getAllMarkets
int __ns4__getAllMarkets(
    _ns4__getAllMarkets*                ns4__getAllMarkets,	///< Request parameter
    _ns4__getAllMarketsResponse*        ns4__getAllMarketsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getInPlayMarkets                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getInPlayMarkets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getInPlayMarkets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getInPlayMarkets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getInPlayMarkets*             ns4__getInPlayMarkets,
    // response parameters:
    _ns4__getInPlayMarketsResponse*     ns4__getInPlayMarketsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getInPlayMarkets(
    struct soap *soap,
    // request parameters:
    _ns4__getInPlayMarkets*             ns4__getInPlayMarkets,
    // response parameters:
    _ns4__getInPlayMarketsResponse*     ns4__getInPlayMarketsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getInPlayMarkets document
//gsoap ns4  service method-encoding:	getInPlayMarkets literal
//gsoap ns4  service method-action:	getInPlayMarkets getInPlayMarkets
int __ns4__getInPlayMarkets(
    _ns4__getInPlayMarkets*             ns4__getInPlayMarkets,	///< Request parameter
    _ns4__getInPlayMarketsResponse*     ns4__getInPlayMarketsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getPrivateMarkets                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getPrivateMarkets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getPrivateMarkets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getPrivateMarkets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getPrivateMarkets*            ns4__getPrivateMarkets,
    // response parameters:
    _ns4__getPrivateMarketsResponse*    ns4__getPrivateMarketsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getPrivateMarkets(
    struct soap *soap,
    // request parameters:
    _ns4__getPrivateMarkets*            ns4__getPrivateMarkets,
    // response parameters:
    _ns4__getPrivateMarketsResponse*    ns4__getPrivateMarketsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getPrivateMarkets document
//gsoap ns4  service method-encoding:	getPrivateMarkets literal
//gsoap ns4  service method-action:	getPrivateMarkets getPrivateMarkets
int __ns4__getPrivateMarkets(
    _ns4__getPrivateMarkets*            ns4__getPrivateMarkets,	///< Request parameter
    _ns4__getPrivateMarketsResponse*    ns4__getPrivateMarketsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getCurrentBets                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getCurrentBets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getCurrentBets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getCurrentBets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getCurrentBets*               ns4__getCurrentBets,
    // response parameters:
    _ns4__getCurrentBetsResponse*       ns4__getCurrentBetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getCurrentBets(
    struct soap *soap,
    // request parameters:
    _ns4__getCurrentBets*               ns4__getCurrentBets,
    // response parameters:
    _ns4__getCurrentBetsResponse*       ns4__getCurrentBetsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getCurrentBets document
//gsoap ns4  service method-encoding:	getCurrentBets literal
//gsoap ns4  service method-action:	getCurrentBets getCurrentBets
int __ns4__getCurrentBets(
    _ns4__getCurrentBets*               ns4__getCurrentBets,	///< Request parameter
    _ns4__getCurrentBetsResponse*       ns4__getCurrentBetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getCoupon                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getCoupon" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getCoupon"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getCoupon(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getCoupon*                    ns4__getCoupon,
    // response parameters:
    _ns4__getCouponResponse*            ns4__getCouponResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getCoupon(
    struct soap *soap,
    // request parameters:
    _ns4__getCoupon*                    ns4__getCoupon,
    // response parameters:
    _ns4__getCouponResponse*            ns4__getCouponResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getCoupon document
//gsoap ns4  service method-encoding:	getCoupon literal
//gsoap ns4  service method-action:	getCoupon getCoupon
int __ns4__getCoupon(
    _ns4__getCoupon*                    ns4__getCoupon,	///< Request parameter
    _ns4__getCouponResponse*            ns4__getCouponResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getCurrentBetsLite                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getCurrentBetsLite" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getCurrentBetsLite"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getCurrentBetsLite(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getCurrentBetsLite*           ns4__getCurrentBetsLite,
    // response parameters:
    _ns4__getCurrentBetsLiteResponse*   ns4__getCurrentBetsLiteResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getCurrentBetsLite(
    struct soap *soap,
    // request parameters:
    _ns4__getCurrentBetsLite*           ns4__getCurrentBetsLite,
    // response parameters:
    _ns4__getCurrentBetsLiteResponse*   ns4__getCurrentBetsLiteResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getCurrentBetsLite document
//gsoap ns4  service method-encoding:	getCurrentBetsLite literal
//gsoap ns4  service method-action:	getCurrentBetsLite getCurrentBetsLite
int __ns4__getCurrentBetsLite(
    _ns4__getCurrentBetsLite*           ns4__getCurrentBetsLite,	///< Request parameter
    _ns4__getCurrentBetsLiteResponse*   ns4__getCurrentBetsLiteResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMUBets                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMUBets" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMUBets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMUBets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMUBets*                    ns4__getMUBets,
    // response parameters:
    _ns4__getMUBetsResponse*            ns4__getMUBetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMUBets(
    struct soap *soap,
    // request parameters:
    _ns4__getMUBets*                    ns4__getMUBets,
    // response parameters:
    _ns4__getMUBetsResponse*            ns4__getMUBetsResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMUBets document
//gsoap ns4  service method-encoding:	getMUBets literal
//gsoap ns4  service method-action:	getMUBets getMUBets
int __ns4__getMUBets(
    _ns4__getMUBets*                    ns4__getMUBets,	///< Request parameter
    _ns4__getMUBetsResponse*            ns4__getMUBetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMUBetsLite                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMUBetsLite" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMUBetsLite"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMUBetsLite(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMUBetsLite*                ns4__getMUBetsLite,
    // response parameters:
    _ns4__getMUBetsLiteResponse*        ns4__getMUBetsLiteResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMUBetsLite(
    struct soap *soap,
    // request parameters:
    _ns4__getMUBetsLite*                ns4__getMUBetsLite,
    // response parameters:
    _ns4__getMUBetsLiteResponse*        ns4__getMUBetsLiteResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMUBetsLite document
//gsoap ns4  service method-encoding:	getMUBetsLite literal
//gsoap ns4  service method-action:	getMUBetsLite getMUBetsLite
int __ns4__getMUBetsLite(
    _ns4__getMUBetsLite*                ns4__getMUBetsLite,	///< Request parameter
    _ns4__getMUBetsLiteResponse*        ns4__getMUBetsLiteResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getDetailAvailableMktDepth                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getDetailAvailableMktDepth" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getDetailAvailableMktDepth"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getDetailAvailableMktDepth(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getDetailAvailableMktDepth*   ns4__getDetailAvailableMktDepth,
    // response parameters:
    _ns4__getDetailAvailableMktDepthResponse* ns4__getDetailAvailableMktDepthResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getDetailAvailableMktDepth(
    struct soap *soap,
    // request parameters:
    _ns4__getDetailAvailableMktDepth*   ns4__getDetailAvailableMktDepth,
    // response parameters:
    _ns4__getDetailAvailableMktDepthResponse* ns4__getDetailAvailableMktDepthResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getDetailAvailableMktDepth document
//gsoap ns4  service method-encoding:	getDetailAvailableMktDepth literal
//gsoap ns4  service method-action:	getDetailAvailableMktDepth getDetailAvailableMktDepth
int __ns4__getDetailAvailableMktDepth(
    _ns4__getDetailAvailableMktDepth*   ns4__getDetailAvailableMktDepth,	///< Request parameter
    _ns4__getDetailAvailableMktDepthResponse* ns4__getDetailAvailableMktDepthResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarketTradedVolume                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarketTradedVolume" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarketTradedVolume"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarketTradedVolume(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarketTradedVolume*        ns4__getMarketTradedVolume,
    // response parameters:
    _ns4__getMarketTradedVolumeResponse* ns4__getMarketTradedVolumeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarketTradedVolume(
    struct soap *soap,
    // request parameters:
    _ns4__getMarketTradedVolume*        ns4__getMarketTradedVolume,
    // response parameters:
    _ns4__getMarketTradedVolumeResponse* ns4__getMarketTradedVolumeResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarketTradedVolume document
//gsoap ns4  service method-encoding:	getMarketTradedVolume literal
//gsoap ns4  service method-action:	getMarketTradedVolume getMarketTradedVolume
int __ns4__getMarketTradedVolume(
    _ns4__getMarketTradedVolume*        ns4__getMarketTradedVolume,	///< Request parameter
    _ns4__getMarketTradedVolumeResponse* ns4__getMarketTradedVolumeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getBetHistory                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getBetHistory" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getBetHistory"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getBetHistory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getBetHistory*                ns4__getBetHistory,
    // response parameters:
    _ns4__getBetHistoryResponse*        ns4__getBetHistoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getBetHistory(
    struct soap *soap,
    // request parameters:
    _ns4__getBetHistory*                ns4__getBetHistory,
    // response parameters:
    _ns4__getBetHistoryResponse*        ns4__getBetHistoryResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getBetHistory document
//gsoap ns4  service method-encoding:	getBetHistory literal
//gsoap ns4  service method-action:	getBetHistory getBetHistory
int __ns4__getBetHistory(
    _ns4__getBetHistory*                ns4__getBetHistory,	///< Request parameter
    _ns4__getBetHistoryResponse*        ns4__getBetHistoryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getAccountStatement                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getAccountStatement" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getAccountStatement"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getAccountStatement(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getAccountStatement*          ns4__getAccountStatement,
    // response parameters:
    _ns4__getAccountStatementResponse*  ns4__getAccountStatementResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getAccountStatement(
    struct soap *soap,
    // request parameters:
    _ns4__getAccountStatement*          ns4__getAccountStatement,
    // response parameters:
    _ns4__getAccountStatementResponse*  ns4__getAccountStatementResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getAccountStatement document
//gsoap ns4  service method-encoding:	getAccountStatement literal
//gsoap ns4  service method-action:	getAccountStatement getAccountStatement
int __ns4__getAccountStatement(
    _ns4__getAccountStatement*          ns4__getAccountStatement,	///< Request parameter
    _ns4__getAccountStatementResponse*  ns4__getAccountStatementResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getMarketProfitAndLoss                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getMarketProfitAndLoss" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getMarketProfitAndLoss"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getMarketProfitAndLoss(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getMarketProfitAndLoss*       ns4__getMarketProfitAndLoss,
    // response parameters:
    _ns4__getMarketProfitAndLossResponse* ns4__getMarketProfitAndLossResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getMarketProfitAndLoss(
    struct soap *soap,
    // request parameters:
    _ns4__getMarketProfitAndLoss*       ns4__getMarketProfitAndLoss,
    // response parameters:
    _ns4__getMarketProfitAndLossResponse* ns4__getMarketProfitAndLossResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getMarketProfitAndLoss document
//gsoap ns4  service method-encoding:	getMarketProfitAndLoss literal
//gsoap ns4  service method-action:	getMarketProfitAndLoss getMarketProfitAndLoss
int __ns4__getMarketProfitAndLoss(
    _ns4__getMarketProfitAndLoss*       ns4__getMarketProfitAndLoss,	///< Request parameter
    _ns4__getMarketProfitAndLossResponse* ns4__getMarketProfitAndLossResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getBet                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getBet" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getBet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getBet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getBet*                       ns4__getBet,
    // response parameters:
    _ns4__getBetResponse*               ns4__getBetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getBet(
    struct soap *soap,
    // request parameters:
    _ns4__getBet*                       ns4__getBet,
    // response parameters:
    _ns4__getBetResponse*               ns4__getBetResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getBet document
//gsoap ns4  service method-encoding:	getBet literal
//gsoap ns4  service method-action:	getBet getBet
int __ns4__getBet(
    _ns4__getBet*                       ns4__getBet,	///< Request parameter
    _ns4__getBetResponse*               ns4__getBetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getBetLite                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getBetLite" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getBetLite"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getBetLite(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getBetLite*                   ns4__getBetLite,
    // response parameters:
    _ns4__getBetLiteResponse*           ns4__getBetLiteResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getBetLite(
    struct soap *soap,
    // request parameters:
    _ns4__getBetLite*                   ns4__getBetLite,
    // response parameters:
    _ns4__getBetLiteResponse*           ns4__getBetLiteResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getBetLite document
//gsoap ns4  service method-encoding:	getBetLite literal
//gsoap ns4  service method-action:	getBetLite getBetLite
int __ns4__getBetLite(
    _ns4__getBetLite*                   ns4__getBetLite,	///< Request parameter
    _ns4__getBetLiteResponse*           ns4__getBetLiteResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getBetMatchesLite                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getBetMatchesLite" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getBetMatchesLite"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getBetMatchesLite(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getBetMatchesLite*            ns4__getBetMatchesLite,
    // response parameters:
    _ns4__getBetMatchesLiteResponse*    ns4__getBetMatchesLiteResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getBetMatchesLite(
    struct soap *soap,
    // request parameters:
    _ns4__getBetMatchesLite*            ns4__getBetMatchesLite,
    // response parameters:
    _ns4__getBetMatchesLiteResponse*    ns4__getBetMatchesLiteResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getBetMatchesLite document
//gsoap ns4  service method-encoding:	getBetMatchesLite literal
//gsoap ns4  service method-action:	getBetMatchesLite getBetMatchesLite
int __ns4__getBetMatchesLite(
    _ns4__getBetMatchesLite*            ns4__getBetMatchesLite,	///< Request parameter
    _ns4__getBetMatchesLiteResponse*    ns4__getBetMatchesLiteResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getSilks                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getSilks" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getSilks"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getSilks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getSilks*                     ns4__getSilks,
    // response parameters:
    _ns4__getSilksResponse*             ns4__getSilksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getSilks(
    struct soap *soap,
    // request parameters:
    _ns4__getSilks*                     ns4__getSilks,
    // response parameters:
    _ns4__getSilksResponse*             ns4__getSilksResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getSilks document
//gsoap ns4  service method-encoding:	getSilks literal
//gsoap ns4  service method-action:	getSilks getSilks
int __ns4__getSilks(
    _ns4__getSilks*                     ns4__getSilks,	///< Request parameter
    _ns4__getSilksResponse*             ns4__getSilksResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__getSilksV2                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__getSilksV2" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="getSilksV2"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__getSilksV2(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__getSilksV2*                   ns4__getSilksV2,
    // response parameters:
    _ns4__getSilksV2Response*           ns4__getSilksV2Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__getSilksV2(
    struct soap *soap,
    // request parameters:
    _ns4__getSilksV2*                   ns4__getSilksV2,
    // response parameters:
    _ns4__getSilksV2Response*           ns4__getSilksV2Response
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	getSilksV2 document
//gsoap ns4  service method-encoding:	getSilksV2 literal
//gsoap ns4  service method-action:	getSilksV2 getSilksV2
int __ns4__getSilksV2(
    _ns4__getSilksV2*                   ns4__getSilksV2,	///< Request parameter
    _ns4__getSilksV2Response*           ns4__getSilksV2Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__heartbeat                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__heartbeat" of service binding "BFExchangeService"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="heartbeat"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__heartbeat(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__heartbeat*                    ns4__heartbeat,
    // response parameters:
    _ns4__heartbeatResponse*            ns4__heartbeatResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__heartbeat(
    struct soap *soap,
    // request parameters:
    _ns4__heartbeat*                    ns4__heartbeat,
    // response parameters:
    _ns4__heartbeatResponse*            ns4__heartbeatResponse
  );
@endcode

C++ proxy class (defined in soapBFExchangeServiceProxy.h):
@code
  class BFExchangeServiceProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBFExchangeServiceService.h):
@code
  class BFExchangeServiceService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	heartbeat document
//gsoap ns4  service method-encoding:	heartbeat literal
//gsoap ns4  service method-action:	heartbeat heartbeat
int __ns4__heartbeat(
    _ns4__heartbeat*                    ns4__heartbeat,	///< Request parameter
    _ns4__heartbeatResponse*            ns4__heartbeatResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://www.betfair.com/publicapi/types/global/v3/"

@section ns2 Top-level root elements of schema "http://www.betfair.com/publicapi/v3/BFGlobalService/"

  - <ns2:login> @ref _ns2__login
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__login(struct soap*, _ns2__login*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__login(struct soap*, _ns2__login*);
    @endcode

  - <ns2:loginResponse> @ref _ns2__loginResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__loginResponse(struct soap*, _ns2__loginResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__loginResponse(struct soap*, _ns2__loginResponse*);
    @endcode

  - <ns2:retrieveLIMBMessage> @ref _ns2__retrieveLIMBMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__retrieveLIMBMessage(struct soap*, _ns2__retrieveLIMBMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__retrieveLIMBMessage(struct soap*, _ns2__retrieveLIMBMessage*);
    @endcode

  - <ns2:retrieveLIMBMessageResponse> @ref _ns2__retrieveLIMBMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__retrieveLIMBMessageResponse(struct soap*, _ns2__retrieveLIMBMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__retrieveLIMBMessageResponse(struct soap*, _ns2__retrieveLIMBMessageResponse*);
    @endcode

  - <ns2:submitLIMBMessage> @ref _ns2__submitLIMBMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__submitLIMBMessage(struct soap*, _ns2__submitLIMBMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__submitLIMBMessage(struct soap*, _ns2__submitLIMBMessage*);
    @endcode

  - <ns2:submitLIMBMessageResponse> @ref _ns2__submitLIMBMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__submitLIMBMessageResponse(struct soap*, _ns2__submitLIMBMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__submitLIMBMessageResponse(struct soap*, _ns2__submitLIMBMessageResponse*);
    @endcode

  - <ns2:logout> @ref _ns2__logout
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__logout(struct soap*, _ns2__logout*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__logout(struct soap*, _ns2__logout*);
    @endcode

  - <ns2:logoutResponse> @ref _ns2__logoutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__logoutResponse(struct soap*, _ns2__logoutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__logoutResponse(struct soap*, _ns2__logoutResponse*);
    @endcode

  - <ns2:keepAlive> @ref _ns2__keepAlive
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__keepAlive(struct soap*, _ns2__keepAlive*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__keepAlive(struct soap*, _ns2__keepAlive*);
    @endcode

  - <ns2:keepAliveResponse> @ref _ns2__keepAliveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__keepAliveResponse(struct soap*, _ns2__keepAliveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__keepAliveResponse(struct soap*, _ns2__keepAliveResponse*);
    @endcode

  - <ns2:getEvents> @ref _ns2__getEvents
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getEvents(struct soap*, _ns2__getEvents*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getEvents(struct soap*, _ns2__getEvents*);
    @endcode

  - <ns2:getEventsResponse> @ref _ns2__getEventsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getEventsResponse(struct soap*, _ns2__getEventsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getEventsResponse(struct soap*, _ns2__getEventsResponse*);
    @endcode

  - <ns2:getActiveEventTypes> @ref _ns2__getActiveEventTypes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getActiveEventTypes(struct soap*, _ns2__getActiveEventTypes*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getActiveEventTypes(struct soap*, _ns2__getActiveEventTypes*);
    @endcode

  - <ns2:getActiveEventTypesResponse> @ref _ns2__getActiveEventTypesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getActiveEventTypesResponse(struct soap*, _ns2__getActiveEventTypesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getActiveEventTypesResponse(struct soap*, _ns2__getActiveEventTypesResponse*);
    @endcode

  - <ns2:getAllEventTypes> @ref _ns2__getAllEventTypes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getAllEventTypes(struct soap*, _ns2__getAllEventTypes*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getAllEventTypes(struct soap*, _ns2__getAllEventTypes*);
    @endcode

  - <ns2:getAllEventTypesResponse> @ref _ns2__getAllEventTypesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getAllEventTypesResponse(struct soap*, _ns2__getAllEventTypesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getAllEventTypesResponse(struct soap*, _ns2__getAllEventTypesResponse*);
    @endcode

  - <ns2:getSubscriptionInfo> @ref _ns2__getSubscriptionInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getSubscriptionInfo(struct soap*, _ns2__getSubscriptionInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getSubscriptionInfo(struct soap*, _ns2__getSubscriptionInfo*);
    @endcode

  - <ns2:getSubscriptionInfoResponse> @ref _ns2__getSubscriptionInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getSubscriptionInfoResponse(struct soap*, _ns2__getSubscriptionInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getSubscriptionInfoResponse(struct soap*, _ns2__getSubscriptionInfoResponse*);
    @endcode

  - <ns2:depositFromPaymentCard> @ref _ns2__depositFromPaymentCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__depositFromPaymentCard(struct soap*, _ns2__depositFromPaymentCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__depositFromPaymentCard(struct soap*, _ns2__depositFromPaymentCard*);
    @endcode

  - <ns2:depositFromPaymentCardResponse> @ref _ns2__depositFromPaymentCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__depositFromPaymentCardResponse(struct soap*, _ns2__depositFromPaymentCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__depositFromPaymentCardResponse(struct soap*, _ns2__depositFromPaymentCardResponse*);
    @endcode

  - <ns2:addPaymentCard> @ref _ns2__addPaymentCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__addPaymentCard(struct soap*, _ns2__addPaymentCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__addPaymentCard(struct soap*, _ns2__addPaymentCard*);
    @endcode

  - <ns2:addPaymentCardResponse> @ref _ns2__addPaymentCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__addPaymentCardResponse(struct soap*, _ns2__addPaymentCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__addPaymentCardResponse(struct soap*, _ns2__addPaymentCardResponse*);
    @endcode

  - <ns2:deletePaymentCard> @ref _ns2__deletePaymentCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__deletePaymentCard(struct soap*, _ns2__deletePaymentCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__deletePaymentCard(struct soap*, _ns2__deletePaymentCard*);
    @endcode

  - <ns2:deletePaymentCardResponse> @ref _ns2__deletePaymentCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__deletePaymentCardResponse(struct soap*, _ns2__deletePaymentCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__deletePaymentCardResponse(struct soap*, _ns2__deletePaymentCardResponse*);
    @endcode

  - <ns2:updatePaymentCard> @ref _ns2__updatePaymentCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__updatePaymentCard(struct soap*, _ns2__updatePaymentCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__updatePaymentCard(struct soap*, _ns2__updatePaymentCard*);
    @endcode

  - <ns2:updatePaymentCardResponse> @ref _ns2__updatePaymentCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__updatePaymentCardResponse(struct soap*, _ns2__updatePaymentCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__updatePaymentCardResponse(struct soap*, _ns2__updatePaymentCardResponse*);
    @endcode

  - <ns2:getPaymentCard> @ref _ns2__getPaymentCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getPaymentCard(struct soap*, _ns2__getPaymentCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getPaymentCard(struct soap*, _ns2__getPaymentCard*);
    @endcode

  - <ns2:getPaymentCardResponse> @ref _ns2__getPaymentCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getPaymentCardResponse(struct soap*, _ns2__getPaymentCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getPaymentCardResponse(struct soap*, _ns2__getPaymentCardResponse*);
    @endcode

  - <ns2:withdrawToPaymentCard> @ref _ns2__withdrawToPaymentCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__withdrawToPaymentCard(struct soap*, _ns2__withdrawToPaymentCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__withdrawToPaymentCard(struct soap*, _ns2__withdrawToPaymentCard*);
    @endcode

  - <ns2:withdrawToPaymentCardResponse> @ref _ns2__withdrawToPaymentCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__withdrawToPaymentCardResponse(struct soap*, _ns2__withdrawToPaymentCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__withdrawToPaymentCardResponse(struct soap*, _ns2__withdrawToPaymentCardResponse*);
    @endcode

  - <ns2:selfExclude> @ref _ns2__selfExclude
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__selfExclude(struct soap*, _ns2__selfExclude*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__selfExclude(struct soap*, _ns2__selfExclude*);
    @endcode

  - <ns2:selfExcludeResponse> @ref _ns2__selfExcludeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__selfExcludeResponse(struct soap*, _ns2__selfExcludeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__selfExcludeResponse(struct soap*, _ns2__selfExcludeResponse*);
    @endcode

  - <ns2:convertCurrency> @ref _ns2__convertCurrency
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__convertCurrency(struct soap*, _ns2__convertCurrency*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__convertCurrency(struct soap*, _ns2__convertCurrency*);
    @endcode

  - <ns2:convertCurrencyResponse> @ref _ns2__convertCurrencyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__convertCurrencyResponse(struct soap*, _ns2__convertCurrencyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__convertCurrencyResponse(struct soap*, _ns2__convertCurrencyResponse*);
    @endcode

  - <ns2:getAllCurrencies> @ref _ns2__getAllCurrencies
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getAllCurrencies(struct soap*, _ns2__getAllCurrencies*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getAllCurrencies(struct soap*, _ns2__getAllCurrencies*);
    @endcode

  - <ns2:getAllCurrenciesResponse> @ref _ns2__getAllCurrenciesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getAllCurrenciesResponse(struct soap*, _ns2__getAllCurrenciesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getAllCurrenciesResponse(struct soap*, _ns2__getAllCurrenciesResponse*);
    @endcode

  - <ns2:getAllCurrenciesV2> @ref _ns2__getAllCurrenciesV2
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getAllCurrenciesV2(struct soap*, _ns2__getAllCurrenciesV2*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getAllCurrenciesV2(struct soap*, _ns2__getAllCurrenciesV2*);
    @endcode

  - <ns2:getAllCurrenciesV2Response> @ref _ns2__getAllCurrenciesV2Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__getAllCurrenciesV2Response(struct soap*, _ns2__getAllCurrenciesV2Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__getAllCurrenciesV2Response(struct soap*, _ns2__getAllCurrenciesV2Response*);
    @endcode

  - <ns2:viewReferAndEarn> @ref _ns2__viewReferAndEarn
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__viewReferAndEarn(struct soap*, _ns2__viewReferAndEarn*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__viewReferAndEarn(struct soap*, _ns2__viewReferAndEarn*);
    @endcode

  - <ns2:viewReferAndEarnResponse> @ref _ns2__viewReferAndEarnResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__viewReferAndEarnResponse(struct soap*, _ns2__viewReferAndEarnResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__viewReferAndEarnResponse(struct soap*, _ns2__viewReferAndEarnResponse*);
    @endcode

  - <ns2:viewProfile> @ref _ns2__viewProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__viewProfile(struct soap*, _ns2__viewProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__viewProfile(struct soap*, _ns2__viewProfile*);
    @endcode

  - <ns2:viewProfileResponse> @ref _ns2__viewProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__viewProfileResponse(struct soap*, _ns2__viewProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__viewProfileResponse(struct soap*, _ns2__viewProfileResponse*);
    @endcode

  - <ns2:withdrawByBankTransfer> @ref _ns2__withdrawByBankTransfer
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__withdrawByBankTransfer(struct soap*, _ns2__withdrawByBankTransfer*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__withdrawByBankTransfer(struct soap*, _ns2__withdrawByBankTransfer*);
    @endcode

  - <ns2:withdrawByBankTransferResponse> @ref _ns2__withdrawByBankTransferResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__withdrawByBankTransferResponse(struct soap*, _ns2__withdrawByBankTransferResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__withdrawByBankTransferResponse(struct soap*, _ns2__withdrawByBankTransferResponse*);
    @endcode

  - <ns2:viewProfileV2> @ref _ns2__viewProfileV2
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__viewProfileV2(struct soap*, _ns2__viewProfileV2*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__viewProfileV2(struct soap*, _ns2__viewProfileV2*);
    @endcode

  - <ns2:viewProfileV2Response> @ref _ns2__viewProfileV2Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__viewProfileV2Response(struct soap*, _ns2__viewProfileV2Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__viewProfileV2Response(struct soap*, _ns2__viewProfileV2Response*);
    @endcode

  - <ns2:modifyProfile> @ref _ns2__modifyProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__modifyProfile(struct soap*, _ns2__modifyProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__modifyProfile(struct soap*, _ns2__modifyProfile*);
    @endcode

  - <ns2:modifyProfileResponse> @ref _ns2__modifyProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__modifyProfileResponse(struct soap*, _ns2__modifyProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__modifyProfileResponse(struct soap*, _ns2__modifyProfileResponse*);
    @endcode

  - <ns2:createAccount> @ref _ns2__createAccount
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__createAccount(struct soap*, _ns2__createAccount*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__createAccount(struct soap*, _ns2__createAccount*);
    @endcode

  - <ns2:createAccountResponse> @ref _ns2__createAccountResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__createAccountResponse(struct soap*, _ns2__createAccountResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__createAccountResponse(struct soap*, _ns2__createAccountResponse*);
    @endcode

  - <ns2:forgotPassword> @ref _ns2__forgotPassword
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__forgotPassword(struct soap*, _ns2__forgotPassword*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__forgotPassword(struct soap*, _ns2__forgotPassword*);
    @endcode

  - <ns2:forgotPasswordResponse> @ref _ns2__forgotPasswordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__forgotPasswordResponse(struct soap*, _ns2__forgotPasswordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__forgotPasswordResponse(struct soap*, _ns2__forgotPasswordResponse*);
    @endcode

  - <ns2:modifyPassword> @ref _ns2__modifyPassword
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__modifyPassword(struct soap*, _ns2__modifyPassword*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__modifyPassword(struct soap*, _ns2__modifyPassword*);
    @endcode

  - <ns2:modifyPasswordResponse> @ref _ns2__modifyPasswordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__modifyPasswordResponse(struct soap*, _ns2__modifyPasswordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__modifyPasswordResponse(struct soap*, _ns2__modifyPasswordResponse*);
    @endcode

  - <ns2:setChatName> @ref _ns2__setChatName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__setChatName(struct soap*, _ns2__setChatName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__setChatName(struct soap*, _ns2__setChatName*);
    @endcode

  - <ns2:setChatNameResponse> @ref _ns2__setChatNameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__setChatNameResponse(struct soap*, _ns2__setChatNameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__setChatNameResponse(struct soap*, _ns2__setChatNameResponse*);
    @endcode

  - <ns2:transferFunds> @ref _ns2__transferFunds
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__transferFunds(struct soap*, _ns2__transferFunds*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__transferFunds(struct soap*, _ns2__transferFunds*);
    @endcode

  - <ns2:transferFundsResponse> @ref _ns2__transferFundsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__transferFundsResponse(struct soap*, _ns2__transferFundsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__transferFundsResponse(struct soap*, _ns2__transferFundsResponse*);
    @endcode

@section ns3 Top-level root elements of schema "http://www.betfair.com/publicapi/types/exchange/v5/"

@section ns4 Top-level root elements of schema "http://www.betfair.com/publicapi/v5/BFExchangeService/"

  - <ns4:getAccountFunds> @ref _ns4__getAccountFunds
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getAccountFunds(struct soap*, _ns4__getAccountFunds*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getAccountFunds(struct soap*, _ns4__getAccountFunds*);
    @endcode

  - <ns4:getAccountFundsResponse> @ref _ns4__getAccountFundsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getAccountFundsResponse(struct soap*, _ns4__getAccountFundsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getAccountFundsResponse(struct soap*, _ns4__getAccountFundsResponse*);
    @endcode

  - <ns4:cancelBets> @ref _ns4__cancelBets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__cancelBets(struct soap*, _ns4__cancelBets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__cancelBets(struct soap*, _ns4__cancelBets*);
    @endcode

  - <ns4:cancelBetsResponse> @ref _ns4__cancelBetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__cancelBetsResponse(struct soap*, _ns4__cancelBetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__cancelBetsResponse(struct soap*, _ns4__cancelBetsResponse*);
    @endcode

  - <ns4:cancelBetsByMarket> @ref _ns4__cancelBetsByMarket
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__cancelBetsByMarket(struct soap*, _ns4__cancelBetsByMarket*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__cancelBetsByMarket(struct soap*, _ns4__cancelBetsByMarket*);
    @endcode

  - <ns4:cancelBetsByMarketResponse> @ref _ns4__cancelBetsByMarketResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__cancelBetsByMarketResponse(struct soap*, _ns4__cancelBetsByMarketResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__cancelBetsByMarketResponse(struct soap*, _ns4__cancelBetsByMarketResponse*);
    @endcode

  - <ns4:heartbeat> @ref _ns4__heartbeat
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__heartbeat(struct soap*, _ns4__heartbeat*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__heartbeat(struct soap*, _ns4__heartbeat*);
    @endcode

  - <ns4:heartbeatResponse> @ref _ns4__heartbeatResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__heartbeatResponse(struct soap*, _ns4__heartbeatResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__heartbeatResponse(struct soap*, _ns4__heartbeatResponse*);
    @endcode

  - <ns4:getSilks> @ref _ns4__getSilks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getSilks(struct soap*, _ns4__getSilks*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getSilks(struct soap*, _ns4__getSilks*);
    @endcode

  - <ns4:getSilksResponse> @ref _ns4__getSilksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getSilksResponse(struct soap*, _ns4__getSilksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getSilksResponse(struct soap*, _ns4__getSilksResponse*);
    @endcode

  - <ns4:getSilksV2> @ref _ns4__getSilksV2
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getSilksV2(struct soap*, _ns4__getSilksV2*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getSilksV2(struct soap*, _ns4__getSilksV2*);
    @endcode

  - <ns4:getSilksV2Response> @ref _ns4__getSilksV2Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getSilksV2Response(struct soap*, _ns4__getSilksV2Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getSilksV2Response(struct soap*, _ns4__getSilksV2Response*);
    @endcode

  - <ns4:updateBets> @ref _ns4__updateBets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__updateBets(struct soap*, _ns4__updateBets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__updateBets(struct soap*, _ns4__updateBets*);
    @endcode

  - <ns4:updateBetsResponse> @ref _ns4__updateBetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__updateBetsResponse(struct soap*, _ns4__updateBetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__updateBetsResponse(struct soap*, _ns4__updateBetsResponse*);
    @endcode

  - <ns4:placeBets> @ref _ns4__placeBets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__placeBets(struct soap*, _ns4__placeBets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__placeBets(struct soap*, _ns4__placeBets*);
    @endcode

  - <ns4:placeBetsResponse> @ref _ns4__placeBetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__placeBetsResponse(struct soap*, _ns4__placeBetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__placeBetsResponse(struct soap*, _ns4__placeBetsResponse*);
    @endcode

  - <ns4:getCoupon> @ref _ns4__getCoupon
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCoupon(struct soap*, _ns4__getCoupon*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCoupon(struct soap*, _ns4__getCoupon*);
    @endcode

  - <ns4:getCouponResponse> @ref _ns4__getCouponResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCouponResponse(struct soap*, _ns4__getCouponResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCouponResponse(struct soap*, _ns4__getCouponResponse*);
    @endcode

  - <ns4:getMarket> @ref _ns4__getMarket
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarket(struct soap*, _ns4__getMarket*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarket(struct soap*, _ns4__getMarket*);
    @endcode

  - <ns4:getMarketInfo> @ref _ns4__getMarketInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketInfo(struct soap*, _ns4__getMarketInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketInfo(struct soap*, _ns4__getMarketInfo*);
    @endcode

  - <ns4:getMarketInfoResponse> @ref _ns4__getMarketInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketInfoResponse(struct soap*, _ns4__getMarketInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketInfoResponse(struct soap*, _ns4__getMarketInfoResponse*);
    @endcode

  - <ns4:getMarketResponse> @ref _ns4__getMarketResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketResponse(struct soap*, _ns4__getMarketResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketResponse(struct soap*, _ns4__getMarketResponse*);
    @endcode

  - <ns4:getMarketPrices> @ref _ns4__getMarketPrices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketPrices(struct soap*, _ns4__getMarketPrices*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketPrices(struct soap*, _ns4__getMarketPrices*);
    @endcode

  - <ns4:getMarketPricesResponse> @ref _ns4__getMarketPricesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketPricesResponse(struct soap*, _ns4__getMarketPricesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketPricesResponse(struct soap*, _ns4__getMarketPricesResponse*);
    @endcode

  - <ns4:getCompleteMarketPricesCompressed> @ref _ns4__getCompleteMarketPricesCompressed
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCompleteMarketPricesCompressed(struct soap*, _ns4__getCompleteMarketPricesCompressed*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCompleteMarketPricesCompressed(struct soap*, _ns4__getCompleteMarketPricesCompressed*);
    @endcode

  - <ns4:getCompleteMarketPricesCompressedResponse> @ref _ns4__getCompleteMarketPricesCompressedResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCompleteMarketPricesCompressedResponse(struct soap*, _ns4__getCompleteMarketPricesCompressedResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCompleteMarketPricesCompressedResponse(struct soap*, _ns4__getCompleteMarketPricesCompressedResponse*);
    @endcode

  - <ns4:getMarketTradedVolumeCompressed> @ref _ns4__getMarketTradedVolumeCompressed
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketTradedVolumeCompressed(struct soap*, _ns4__getMarketTradedVolumeCompressed*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketTradedVolumeCompressed(struct soap*, _ns4__getMarketTradedVolumeCompressed*);
    @endcode

  - <ns4:getMarketTradedVolumeCompressedResponse> @ref _ns4__getMarketTradedVolumeCompressedResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketTradedVolumeCompressedResponse(struct soap*, _ns4__getMarketTradedVolumeCompressedResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketTradedVolumeCompressedResponse(struct soap*, _ns4__getMarketTradedVolumeCompressedResponse*);
    @endcode

  - <ns4:getMarketPricesCompressed> @ref _ns4__getMarketPricesCompressed
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketPricesCompressed(struct soap*, _ns4__getMarketPricesCompressed*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketPricesCompressed(struct soap*, _ns4__getMarketPricesCompressed*);
    @endcode

  - <ns4:getMarketPricesCompressedResponse> @ref _ns4__getMarketPricesCompressedResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketPricesCompressedResponse(struct soap*, _ns4__getMarketPricesCompressedResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketPricesCompressedResponse(struct soap*, _ns4__getMarketPricesCompressedResponse*);
    @endcode

  - <ns4:getAllMarkets> @ref _ns4__getAllMarkets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getAllMarkets(struct soap*, _ns4__getAllMarkets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getAllMarkets(struct soap*, _ns4__getAllMarkets*);
    @endcode

  - <ns4:getAllMarketsResponse> @ref _ns4__getAllMarketsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getAllMarketsResponse(struct soap*, _ns4__getAllMarketsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getAllMarketsResponse(struct soap*, _ns4__getAllMarketsResponse*);
    @endcode

  - <ns4:getInPlayMarkets> @ref _ns4__getInPlayMarkets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getInPlayMarkets(struct soap*, _ns4__getInPlayMarkets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getInPlayMarkets(struct soap*, _ns4__getInPlayMarkets*);
    @endcode

  - <ns4:getInPlayMarketsResponse> @ref _ns4__getInPlayMarketsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getInPlayMarketsResponse(struct soap*, _ns4__getInPlayMarketsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getInPlayMarketsResponse(struct soap*, _ns4__getInPlayMarketsResponse*);
    @endcode

  - <ns4:getPrivateMarkets> @ref _ns4__getPrivateMarkets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getPrivateMarkets(struct soap*, _ns4__getPrivateMarkets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getPrivateMarkets(struct soap*, _ns4__getPrivateMarkets*);
    @endcode

  - <ns4:getPrivateMarketsResponse> @ref _ns4__getPrivateMarketsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getPrivateMarketsResponse(struct soap*, _ns4__getPrivateMarketsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getPrivateMarketsResponse(struct soap*, _ns4__getPrivateMarketsResponse*);
    @endcode

  - <ns4:getCurrentBets> @ref _ns4__getCurrentBets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCurrentBets(struct soap*, _ns4__getCurrentBets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCurrentBets(struct soap*, _ns4__getCurrentBets*);
    @endcode

  - <ns4:getCurrentBetsResponse> @ref _ns4__getCurrentBetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCurrentBetsResponse(struct soap*, _ns4__getCurrentBetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCurrentBetsResponse(struct soap*, _ns4__getCurrentBetsResponse*);
    @endcode

  - <ns4:getCurrentBetsLite> @ref _ns4__getCurrentBetsLite
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCurrentBetsLite(struct soap*, _ns4__getCurrentBetsLite*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCurrentBetsLite(struct soap*, _ns4__getCurrentBetsLite*);
    @endcode

  - <ns4:getCurrentBetsLiteResponse> @ref _ns4__getCurrentBetsLiteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getCurrentBetsLiteResponse(struct soap*, _ns4__getCurrentBetsLiteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getCurrentBetsLiteResponse(struct soap*, _ns4__getCurrentBetsLiteResponse*);
    @endcode

  - <ns4:getMUBets> @ref _ns4__getMUBets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMUBets(struct soap*, _ns4__getMUBets*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMUBets(struct soap*, _ns4__getMUBets*);
    @endcode

  - <ns4:getMUBetsResponse> @ref _ns4__getMUBetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMUBetsResponse(struct soap*, _ns4__getMUBetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMUBetsResponse(struct soap*, _ns4__getMUBetsResponse*);
    @endcode

  - <ns4:getMUBetsLite> @ref _ns4__getMUBetsLite
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMUBetsLite(struct soap*, _ns4__getMUBetsLite*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMUBetsLite(struct soap*, _ns4__getMUBetsLite*);
    @endcode

  - <ns4:getMUBetsLiteResponse> @ref _ns4__getMUBetsLiteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMUBetsLiteResponse(struct soap*, _ns4__getMUBetsLiteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMUBetsLiteResponse(struct soap*, _ns4__getMUBetsLiteResponse*);
    @endcode

  - <ns4:getDetailAvailableMktDepth> @ref _ns4__getDetailAvailableMktDepth
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getDetailAvailableMktDepth(struct soap*, _ns4__getDetailAvailableMktDepth*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getDetailAvailableMktDepth(struct soap*, _ns4__getDetailAvailableMktDepth*);
    @endcode

  - <ns4:getDetailAvailableMktDepthResponse> @ref _ns4__getDetailAvailableMktDepthResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getDetailAvailableMktDepthResponse(struct soap*, _ns4__getDetailAvailableMktDepthResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getDetailAvailableMktDepthResponse(struct soap*, _ns4__getDetailAvailableMktDepthResponse*);
    @endcode

  - <ns4:getMarketTradedVolume> @ref _ns4__getMarketTradedVolume
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketTradedVolume(struct soap*, _ns4__getMarketTradedVolume*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketTradedVolume(struct soap*, _ns4__getMarketTradedVolume*);
    @endcode

  - <ns4:getMarketTradedVolumeResponse> @ref _ns4__getMarketTradedVolumeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketTradedVolumeResponse(struct soap*, _ns4__getMarketTradedVolumeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketTradedVolumeResponse(struct soap*, _ns4__getMarketTradedVolumeResponse*);
    @endcode

  - <ns4:getBetHistory> @ref _ns4__getBetHistory
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetHistory(struct soap*, _ns4__getBetHistory*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetHistory(struct soap*, _ns4__getBetHistory*);
    @endcode

  - <ns4:getBetHistoryResponse> @ref _ns4__getBetHistoryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetHistoryResponse(struct soap*, _ns4__getBetHistoryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetHistoryResponse(struct soap*, _ns4__getBetHistoryResponse*);
    @endcode

  - <ns4:getAccountStatement> @ref _ns4__getAccountStatement
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getAccountStatement(struct soap*, _ns4__getAccountStatement*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getAccountStatement(struct soap*, _ns4__getAccountStatement*);
    @endcode

  - <ns4:getAccountStatementResponse> @ref _ns4__getAccountStatementResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getAccountStatementResponse(struct soap*, _ns4__getAccountStatementResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getAccountStatementResponse(struct soap*, _ns4__getAccountStatementResponse*);
    @endcode

  - <ns4:getMarketProfitAndLoss> @ref _ns4__getMarketProfitAndLoss
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketProfitAndLoss(struct soap*, _ns4__getMarketProfitAndLoss*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketProfitAndLoss(struct soap*, _ns4__getMarketProfitAndLoss*);
    @endcode

  - <ns4:getMarketProfitAndLossResponse> @ref _ns4__getMarketProfitAndLossResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getMarketProfitAndLossResponse(struct soap*, _ns4__getMarketProfitAndLossResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getMarketProfitAndLossResponse(struct soap*, _ns4__getMarketProfitAndLossResponse*);
    @endcode

  - <ns4:getBet> @ref _ns4__getBet
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBet(struct soap*, _ns4__getBet*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBet(struct soap*, _ns4__getBet*);
    @endcode

  - <ns4:getBetResponse> @ref _ns4__getBetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetResponse(struct soap*, _ns4__getBetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetResponse(struct soap*, _ns4__getBetResponse*);
    @endcode

  - <ns4:getBetLite> @ref _ns4__getBetLite
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetLite(struct soap*, _ns4__getBetLite*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetLite(struct soap*, _ns4__getBetLite*);
    @endcode

  - <ns4:getBetLiteResponse> @ref _ns4__getBetLiteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetLiteResponse(struct soap*, _ns4__getBetLiteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetLiteResponse(struct soap*, _ns4__getBetLiteResponse*);
    @endcode

  - <ns4:getBetMatchesLite> @ref _ns4__getBetMatchesLite
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetMatchesLite(struct soap*, _ns4__getBetMatchesLite*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetMatchesLite(struct soap*, _ns4__getBetMatchesLite*);
    @endcode

  - <ns4:getBetMatchesLiteResponse> @ref _ns4__getBetMatchesLiteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__getBetMatchesLiteResponse(struct soap*, _ns4__getBetMatchesLiteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__getBetMatchesLiteResponse(struct soap*, _ns4__getBetMatchesLiteResponse*);
    @endcode

*/

/* End of Betfair.h */
