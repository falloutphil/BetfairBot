/* soapBFGlobalServiceProxy.cpp
   Generated by gSOAP 2.8.1 from Betfair.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#include "soapBFGlobalServiceProxy.h"

BFGlobalServiceProxy::BFGlobalServiceProxy()
{	BFGlobalServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BFGlobalServiceProxy::BFGlobalServiceProxy(const struct soap &_soap) : soap(_soap)
{ }

BFGlobalServiceProxy::BFGlobalServiceProxy(soap_mode iomode)
{	BFGlobalServiceProxy_init(iomode, iomode);
}

BFGlobalServiceProxy::BFGlobalServiceProxy(soap_mode imode, soap_mode omode)
{	BFGlobalServiceProxy_init(imode, omode);
}

void BFGlobalServiceProxy::BFGlobalServiceProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://www.betfair.com/publicapi/types/global/v3/", NULL, NULL},
	{"ns3", "http://www.betfair.com/publicapi/types/exchange/v5/", NULL, NULL},
	{"ns2", "http://www.betfair.com/publicapi/v3/BFGlobalService/", NULL, NULL},
	{"ns4", "http://www.betfair.com/publicapi/v5/BFExchangeService/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
}

BFGlobalServiceProxy::~BFGlobalServiceProxy()
{ }

void BFGlobalServiceProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void BFGlobalServiceProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *BFGlobalServiceProxy::soap_fault()
{	return this->fault;
}

const char *BFGlobalServiceProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *BFGlobalServiceProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int BFGlobalServiceProxy::soap_close_socket()
{	return soap_closesock(this);
}

void BFGlobalServiceProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void BFGlobalServiceProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *BFGlobalServiceProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int BFGlobalServiceProxy::login(_ns2__login *ns2__login, _ns2__loginResponse *ns2__loginResponse)
{	struct soap *soap = this;
	struct __ns2__login soap_tmp___ns2__login;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "login";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__login.ns2__login = ns2__login;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__login(soap, &soap_tmp___ns2__login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__login(soap, &soap_tmp___ns2__login, "-ns2:login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__login(soap, &soap_tmp___ns2__login, "-ns2:login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__loginResponse)
		return soap_closesock(soap);
	ns2__loginResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__loginResponse->soap_get(soap, "ns2:loginResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::retrieveLIMBMessage(_ns2__retrieveLIMBMessage *ns2__retrieveLIMBMessage, _ns2__retrieveLIMBMessageResponse *ns2__retrieveLIMBMessageResponse)
{	struct soap *soap = this;
	struct __ns2__retrieveLIMBMessage soap_tmp___ns2__retrieveLIMBMessage;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "retrieveLIMBMessage";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__retrieveLIMBMessage.ns2__retrieveLIMBMessage = ns2__retrieveLIMBMessage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__retrieveLIMBMessage(soap, &soap_tmp___ns2__retrieveLIMBMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__retrieveLIMBMessage(soap, &soap_tmp___ns2__retrieveLIMBMessage, "-ns2:retrieveLIMBMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__retrieveLIMBMessage(soap, &soap_tmp___ns2__retrieveLIMBMessage, "-ns2:retrieveLIMBMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__retrieveLIMBMessageResponse)
		return soap_closesock(soap);
	ns2__retrieveLIMBMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__retrieveLIMBMessageResponse->soap_get(soap, "ns2:retrieveLIMBMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::submitLIMBMessage(_ns2__submitLIMBMessage *ns2__submitLIMBMessage, _ns2__submitLIMBMessageResponse *ns2__submitLIMBMessageResponse)
{	struct soap *soap = this;
	struct __ns2__submitLIMBMessage soap_tmp___ns2__submitLIMBMessage;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "submitLIMBMessage";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__submitLIMBMessage.ns2__submitLIMBMessage = ns2__submitLIMBMessage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__submitLIMBMessage(soap, &soap_tmp___ns2__submitLIMBMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__submitLIMBMessage(soap, &soap_tmp___ns2__submitLIMBMessage, "-ns2:submitLIMBMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__submitLIMBMessage(soap, &soap_tmp___ns2__submitLIMBMessage, "-ns2:submitLIMBMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__submitLIMBMessageResponse)
		return soap_closesock(soap);
	ns2__submitLIMBMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__submitLIMBMessageResponse->soap_get(soap, "ns2:submitLIMBMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::logout(_ns2__logout *ns2__logout, _ns2__logoutResponse *ns2__logoutResponse)
{	struct soap *soap = this;
	struct __ns2__logout soap_tmp___ns2__logout;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "logout";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__logout.ns2__logout = ns2__logout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__logout(soap, &soap_tmp___ns2__logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__logout(soap, &soap_tmp___ns2__logout, "-ns2:logout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__logout(soap, &soap_tmp___ns2__logout, "-ns2:logout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__logoutResponse)
		return soap_closesock(soap);
	ns2__logoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__logoutResponse->soap_get(soap, "ns2:logoutResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::keepAlive(_ns2__keepAlive *ns2__keepAlive, _ns2__keepAliveResponse *ns2__keepAliveResponse)
{	struct soap *soap = this;
	struct __ns2__keepAlive soap_tmp___ns2__keepAlive;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "keepAlive";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__keepAlive.ns2__keepAlive = ns2__keepAlive;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__keepAlive(soap, &soap_tmp___ns2__keepAlive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__keepAlive(soap, &soap_tmp___ns2__keepAlive, "-ns2:keepAlive", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__keepAlive(soap, &soap_tmp___ns2__keepAlive, "-ns2:keepAlive", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__keepAliveResponse)
		return soap_closesock(soap);
	ns2__keepAliveResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__keepAliveResponse->soap_get(soap, "ns2:keepAliveResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getEvents(_ns2__getEvents *ns2__getEvents, _ns2__getEventsResponse *ns2__getEventsResponse)
{	struct soap *soap = this;
	struct __ns2__getEvents soap_tmp___ns2__getEvents;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getEvents";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getEvents.ns2__getEvents = ns2__getEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getEvents(soap, &soap_tmp___ns2__getEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getEvents(soap, &soap_tmp___ns2__getEvents, "-ns2:getEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getEvents(soap, &soap_tmp___ns2__getEvents, "-ns2:getEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getEventsResponse)
		return soap_closesock(soap);
	ns2__getEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getEventsResponse->soap_get(soap, "ns2:getEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getActiveEventTypes(_ns2__getActiveEventTypes *ns2__getActiveEventTypes, _ns2__getActiveEventTypesResponse *ns2__getActiveEventTypesResponse)
{	struct soap *soap = this;
	struct __ns2__getActiveEventTypes soap_tmp___ns2__getActiveEventTypes;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getActiveEventTypes";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getActiveEventTypes.ns2__getActiveEventTypes = ns2__getActiveEventTypes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getActiveEventTypes(soap, &soap_tmp___ns2__getActiveEventTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getActiveEventTypes(soap, &soap_tmp___ns2__getActiveEventTypes, "-ns2:getActiveEventTypes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getActiveEventTypes(soap, &soap_tmp___ns2__getActiveEventTypes, "-ns2:getActiveEventTypes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getActiveEventTypesResponse)
		return soap_closesock(soap);
	ns2__getActiveEventTypesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getActiveEventTypesResponse->soap_get(soap, "ns2:getActiveEventTypesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getAllEventTypes(_ns2__getAllEventTypes *ns2__getAllEventTypes, _ns2__getAllEventTypesResponse *ns2__getAllEventTypesResponse)
{	struct soap *soap = this;
	struct __ns2__getAllEventTypes soap_tmp___ns2__getAllEventTypes;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getAllEventTypes";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getAllEventTypes.ns2__getAllEventTypes = ns2__getAllEventTypes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getAllEventTypes(soap, &soap_tmp___ns2__getAllEventTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getAllEventTypes(soap, &soap_tmp___ns2__getAllEventTypes, "-ns2:getAllEventTypes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getAllEventTypes(soap, &soap_tmp___ns2__getAllEventTypes, "-ns2:getAllEventTypes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getAllEventTypesResponse)
		return soap_closesock(soap);
	ns2__getAllEventTypesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getAllEventTypesResponse->soap_get(soap, "ns2:getAllEventTypesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getSubscriptionInfo(_ns2__getSubscriptionInfo *ns2__getSubscriptionInfo, _ns2__getSubscriptionInfoResponse *ns2__getSubscriptionInfoResponse)
{	struct soap *soap = this;
	struct __ns2__getSubscriptionInfo soap_tmp___ns2__getSubscriptionInfo;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getSubscriptionInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getSubscriptionInfo.ns2__getSubscriptionInfo = ns2__getSubscriptionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getSubscriptionInfo(soap, &soap_tmp___ns2__getSubscriptionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getSubscriptionInfo(soap, &soap_tmp___ns2__getSubscriptionInfo, "-ns2:getSubscriptionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getSubscriptionInfo(soap, &soap_tmp___ns2__getSubscriptionInfo, "-ns2:getSubscriptionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getSubscriptionInfoResponse)
		return soap_closesock(soap);
	ns2__getSubscriptionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getSubscriptionInfoResponse->soap_get(soap, "ns2:getSubscriptionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::depositFromPaymentCard(_ns2__depositFromPaymentCard *ns2__depositFromPaymentCard, _ns2__depositFromPaymentCardResponse *ns2__depositFromPaymentCardResponse)
{	struct soap *soap = this;
	struct __ns2__depositFromPaymentCard soap_tmp___ns2__depositFromPaymentCard;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "depositFromPaymentCard";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__depositFromPaymentCard.ns2__depositFromPaymentCard = ns2__depositFromPaymentCard;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__depositFromPaymentCard(soap, &soap_tmp___ns2__depositFromPaymentCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__depositFromPaymentCard(soap, &soap_tmp___ns2__depositFromPaymentCard, "-ns2:depositFromPaymentCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__depositFromPaymentCard(soap, &soap_tmp___ns2__depositFromPaymentCard, "-ns2:depositFromPaymentCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__depositFromPaymentCardResponse)
		return soap_closesock(soap);
	ns2__depositFromPaymentCardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__depositFromPaymentCardResponse->soap_get(soap, "ns2:depositFromPaymentCardResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::addPaymentCard(_ns2__addPaymentCard *ns2__addPaymentCard, _ns2__addPaymentCardResponse *ns2__addPaymentCardResponse)
{	struct soap *soap = this;
	struct __ns2__addPaymentCard soap_tmp___ns2__addPaymentCard;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "addPaymentCard";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__addPaymentCard.ns2__addPaymentCard = ns2__addPaymentCard;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__addPaymentCard(soap, &soap_tmp___ns2__addPaymentCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__addPaymentCard(soap, &soap_tmp___ns2__addPaymentCard, "-ns2:addPaymentCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__addPaymentCard(soap, &soap_tmp___ns2__addPaymentCard, "-ns2:addPaymentCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__addPaymentCardResponse)
		return soap_closesock(soap);
	ns2__addPaymentCardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__addPaymentCardResponse->soap_get(soap, "ns2:addPaymentCardResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::deletePaymentCard(_ns2__deletePaymentCard *ns2__deletePaymentCard, _ns2__deletePaymentCardResponse *ns2__deletePaymentCardResponse)
{	struct soap *soap = this;
	struct __ns2__deletePaymentCard soap_tmp___ns2__deletePaymentCard;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "deletePaymentCard";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__deletePaymentCard.ns2__deletePaymentCard = ns2__deletePaymentCard;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__deletePaymentCard(soap, &soap_tmp___ns2__deletePaymentCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__deletePaymentCard(soap, &soap_tmp___ns2__deletePaymentCard, "-ns2:deletePaymentCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__deletePaymentCard(soap, &soap_tmp___ns2__deletePaymentCard, "-ns2:deletePaymentCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__deletePaymentCardResponse)
		return soap_closesock(soap);
	ns2__deletePaymentCardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deletePaymentCardResponse->soap_get(soap, "ns2:deletePaymentCardResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::updatePaymentCard(_ns2__updatePaymentCard *ns2__updatePaymentCard, _ns2__updatePaymentCardResponse *ns2__updatePaymentCardResponse)
{	struct soap *soap = this;
	struct __ns2__updatePaymentCard soap_tmp___ns2__updatePaymentCard;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "updatePaymentCard";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__updatePaymentCard.ns2__updatePaymentCard = ns2__updatePaymentCard;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__updatePaymentCard(soap, &soap_tmp___ns2__updatePaymentCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__updatePaymentCard(soap, &soap_tmp___ns2__updatePaymentCard, "-ns2:updatePaymentCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__updatePaymentCard(soap, &soap_tmp___ns2__updatePaymentCard, "-ns2:updatePaymentCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__updatePaymentCardResponse)
		return soap_closesock(soap);
	ns2__updatePaymentCardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updatePaymentCardResponse->soap_get(soap, "ns2:updatePaymentCardResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getPaymentCard(_ns2__getPaymentCard *ns2__getPaymentCard, _ns2__getPaymentCardResponse *ns2__getPaymentCardResponse)
{	struct soap *soap = this;
	struct __ns2__getPaymentCard soap_tmp___ns2__getPaymentCard;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getPaymentCard";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getPaymentCard.ns2__getPaymentCard = ns2__getPaymentCard;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getPaymentCard(soap, &soap_tmp___ns2__getPaymentCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getPaymentCard(soap, &soap_tmp___ns2__getPaymentCard, "-ns2:getPaymentCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getPaymentCard(soap, &soap_tmp___ns2__getPaymentCard, "-ns2:getPaymentCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getPaymentCardResponse)
		return soap_closesock(soap);
	ns2__getPaymentCardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getPaymentCardResponse->soap_get(soap, "ns2:getPaymentCardResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::withdrawToPaymentCard(_ns2__withdrawToPaymentCard *ns2__withdrawToPaymentCard, _ns2__withdrawToPaymentCardResponse *ns2__withdrawToPaymentCardResponse)
{	struct soap *soap = this;
	struct __ns2__withdrawToPaymentCard soap_tmp___ns2__withdrawToPaymentCard;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "withdrawToPaymentCard";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__withdrawToPaymentCard.ns2__withdrawToPaymentCard = ns2__withdrawToPaymentCard;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__withdrawToPaymentCard(soap, &soap_tmp___ns2__withdrawToPaymentCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__withdrawToPaymentCard(soap, &soap_tmp___ns2__withdrawToPaymentCard, "-ns2:withdrawToPaymentCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__withdrawToPaymentCard(soap, &soap_tmp___ns2__withdrawToPaymentCard, "-ns2:withdrawToPaymentCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__withdrawToPaymentCardResponse)
		return soap_closesock(soap);
	ns2__withdrawToPaymentCardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__withdrawToPaymentCardResponse->soap_get(soap, "ns2:withdrawToPaymentCardResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::selfExclude(_ns2__selfExclude *ns2__selfExclude, _ns2__selfExcludeResponse *ns2__selfExcludeResponse)
{	struct soap *soap = this;
	struct __ns2__selfExclude soap_tmp___ns2__selfExclude;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "selfExclude";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__selfExclude.ns2__selfExclude = ns2__selfExclude;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__selfExclude(soap, &soap_tmp___ns2__selfExclude);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__selfExclude(soap, &soap_tmp___ns2__selfExclude, "-ns2:selfExclude", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__selfExclude(soap, &soap_tmp___ns2__selfExclude, "-ns2:selfExclude", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__selfExcludeResponse)
		return soap_closesock(soap);
	ns2__selfExcludeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__selfExcludeResponse->soap_get(soap, "ns2:selfExcludeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::convertCurrency(_ns2__convertCurrency *ns2__convertCurrency, _ns2__convertCurrencyResponse *ns2__convertCurrencyResponse)
{	struct soap *soap = this;
	struct __ns2__convertCurrency soap_tmp___ns2__convertCurrency;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "convertCurrency";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__convertCurrency.ns2__convertCurrency = ns2__convertCurrency;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__convertCurrency(soap, &soap_tmp___ns2__convertCurrency);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__convertCurrency(soap, &soap_tmp___ns2__convertCurrency, "-ns2:convertCurrency", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__convertCurrency(soap, &soap_tmp___ns2__convertCurrency, "-ns2:convertCurrency", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__convertCurrencyResponse)
		return soap_closesock(soap);
	ns2__convertCurrencyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__convertCurrencyResponse->soap_get(soap, "ns2:convertCurrencyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getAllCurrencies(_ns2__getAllCurrencies *ns2__getAllCurrencies, _ns2__getAllCurrenciesResponse *ns2__getAllCurrenciesResponse)
{	struct soap *soap = this;
	struct __ns2__getAllCurrencies soap_tmp___ns2__getAllCurrencies;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getAllCurrencies";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getAllCurrencies.ns2__getAllCurrencies = ns2__getAllCurrencies;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getAllCurrencies(soap, &soap_tmp___ns2__getAllCurrencies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getAllCurrencies(soap, &soap_tmp___ns2__getAllCurrencies, "-ns2:getAllCurrencies", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getAllCurrencies(soap, &soap_tmp___ns2__getAllCurrencies, "-ns2:getAllCurrencies", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getAllCurrenciesResponse)
		return soap_closesock(soap);
	ns2__getAllCurrenciesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getAllCurrenciesResponse->soap_get(soap, "ns2:getAllCurrenciesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::getAllCurrenciesV2(_ns2__getAllCurrenciesV2 *ns2__getAllCurrenciesV2, _ns2__getAllCurrenciesV2Response *ns2__getAllCurrenciesV2Response)
{	struct soap *soap = this;
	struct __ns2__getAllCurrenciesV2 soap_tmp___ns2__getAllCurrenciesV2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "getAllCurrenciesV2";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__getAllCurrenciesV2.ns2__getAllCurrenciesV2 = ns2__getAllCurrenciesV2;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__getAllCurrenciesV2(soap, &soap_tmp___ns2__getAllCurrenciesV2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__getAllCurrenciesV2(soap, &soap_tmp___ns2__getAllCurrenciesV2, "-ns2:getAllCurrenciesV2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__getAllCurrenciesV2(soap, &soap_tmp___ns2__getAllCurrenciesV2, "-ns2:getAllCurrenciesV2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getAllCurrenciesV2Response)
		return soap_closesock(soap);
	ns2__getAllCurrenciesV2Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getAllCurrenciesV2Response->soap_get(soap, "ns2:getAllCurrenciesV2Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::viewReferAndEarn(_ns2__viewReferAndEarn *ns2__viewReferAndEarn, _ns2__viewReferAndEarnResponse *ns2__viewReferAndEarnResponse)
{	struct soap *soap = this;
	struct __ns2__viewReferAndEarn soap_tmp___ns2__viewReferAndEarn;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "viewReferAndEarn";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__viewReferAndEarn.ns2__viewReferAndEarn = ns2__viewReferAndEarn;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__viewReferAndEarn(soap, &soap_tmp___ns2__viewReferAndEarn);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__viewReferAndEarn(soap, &soap_tmp___ns2__viewReferAndEarn, "-ns2:viewReferAndEarn", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__viewReferAndEarn(soap, &soap_tmp___ns2__viewReferAndEarn, "-ns2:viewReferAndEarn", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__viewReferAndEarnResponse)
		return soap_closesock(soap);
	ns2__viewReferAndEarnResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__viewReferAndEarnResponse->soap_get(soap, "ns2:viewReferAndEarnResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::viewProfile(_ns2__viewProfile *ns2__viewProfile, _ns2__viewProfileResponse *ns2__viewProfileResponse)
{	struct soap *soap = this;
	struct __ns2__viewProfile soap_tmp___ns2__viewProfile;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "viewProfile";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__viewProfile.ns2__viewProfile = ns2__viewProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__viewProfile(soap, &soap_tmp___ns2__viewProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__viewProfile(soap, &soap_tmp___ns2__viewProfile, "-ns2:viewProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__viewProfile(soap, &soap_tmp___ns2__viewProfile, "-ns2:viewProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__viewProfileResponse)
		return soap_closesock(soap);
	ns2__viewProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__viewProfileResponse->soap_get(soap, "ns2:viewProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::viewProfileV2(_ns2__viewProfileV2 *ns2__viewProfileV2, _ns2__viewProfileV2Response *ns2__viewProfileV2Response)
{	struct soap *soap = this;
	struct __ns2__viewProfileV2 soap_tmp___ns2__viewProfileV2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "viewProfileV2";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__viewProfileV2.ns2__viewProfileV2 = ns2__viewProfileV2;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__viewProfileV2(soap, &soap_tmp___ns2__viewProfileV2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__viewProfileV2(soap, &soap_tmp___ns2__viewProfileV2, "-ns2:viewProfileV2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__viewProfileV2(soap, &soap_tmp___ns2__viewProfileV2, "-ns2:viewProfileV2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__viewProfileV2Response)
		return soap_closesock(soap);
	ns2__viewProfileV2Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__viewProfileV2Response->soap_get(soap, "ns2:viewProfileV2Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::modifyProfile(_ns2__modifyProfile *ns2__modifyProfile, _ns2__modifyProfileResponse *ns2__modifyProfileResponse)
{	struct soap *soap = this;
	struct __ns2__modifyProfile soap_tmp___ns2__modifyProfile;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "modifyProfile";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__modifyProfile.ns2__modifyProfile = ns2__modifyProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__modifyProfile(soap, &soap_tmp___ns2__modifyProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__modifyProfile(soap, &soap_tmp___ns2__modifyProfile, "-ns2:modifyProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__modifyProfile(soap, &soap_tmp___ns2__modifyProfile, "-ns2:modifyProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__modifyProfileResponse)
		return soap_closesock(soap);
	ns2__modifyProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__modifyProfileResponse->soap_get(soap, "ns2:modifyProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::createAccount(_ns2__createAccount *ns2__createAccount, _ns2__createAccountResponse *ns2__createAccountResponse)
{	struct soap *soap = this;
	struct __ns2__createAccount soap_tmp___ns2__createAccount;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "createAccount";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__createAccount.ns2__createAccount = ns2__createAccount;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__createAccount(soap, &soap_tmp___ns2__createAccount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__createAccount(soap, &soap_tmp___ns2__createAccount, "-ns2:createAccount", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__createAccount(soap, &soap_tmp___ns2__createAccount, "-ns2:createAccount", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__createAccountResponse)
		return soap_closesock(soap);
	ns2__createAccountResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__createAccountResponse->soap_get(soap, "ns2:createAccountResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::forgotPassword(_ns2__forgotPassword *ns2__forgotPassword, _ns2__forgotPasswordResponse *ns2__forgotPasswordResponse)
{	struct soap *soap = this;
	struct __ns2__forgotPassword soap_tmp___ns2__forgotPassword;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "forgotPassword";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__forgotPassword.ns2__forgotPassword = ns2__forgotPassword;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__forgotPassword(soap, &soap_tmp___ns2__forgotPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__forgotPassword(soap, &soap_tmp___ns2__forgotPassword, "-ns2:forgotPassword", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__forgotPassword(soap, &soap_tmp___ns2__forgotPassword, "-ns2:forgotPassword", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__forgotPasswordResponse)
		return soap_closesock(soap);
	ns2__forgotPasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__forgotPasswordResponse->soap_get(soap, "ns2:forgotPasswordResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::modifyPassword(_ns2__modifyPassword *ns2__modifyPassword, _ns2__modifyPasswordResponse *ns2__modifyPasswordResponse)
{	struct soap *soap = this;
	struct __ns2__modifyPassword soap_tmp___ns2__modifyPassword;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "modifyPassword";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__modifyPassword.ns2__modifyPassword = ns2__modifyPassword;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__modifyPassword(soap, &soap_tmp___ns2__modifyPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__modifyPassword(soap, &soap_tmp___ns2__modifyPassword, "-ns2:modifyPassword", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__modifyPassword(soap, &soap_tmp___ns2__modifyPassword, "-ns2:modifyPassword", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__modifyPasswordResponse)
		return soap_closesock(soap);
	ns2__modifyPasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__modifyPasswordResponse->soap_get(soap, "ns2:modifyPasswordResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::withdrawByBankTransfer(_ns2__withdrawByBankTransfer *ns2__withdrawByBankTransfer, _ns2__withdrawByBankTransferResponse *ns2__withdrawByBankTransferResponse)
{	struct soap *soap = this;
	struct __ns2__withdrawByBankTransfer soap_tmp___ns2__withdrawByBankTransfer;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "withdrawByBankTransfer";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__withdrawByBankTransfer.ns2__withdrawByBankTransfer = ns2__withdrawByBankTransfer;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__withdrawByBankTransfer(soap, &soap_tmp___ns2__withdrawByBankTransfer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__withdrawByBankTransfer(soap, &soap_tmp___ns2__withdrawByBankTransfer, "-ns2:withdrawByBankTransfer", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__withdrawByBankTransfer(soap, &soap_tmp___ns2__withdrawByBankTransfer, "-ns2:withdrawByBankTransfer", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__withdrawByBankTransferResponse)
		return soap_closesock(soap);
	ns2__withdrawByBankTransferResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__withdrawByBankTransferResponse->soap_get(soap, "ns2:withdrawByBankTransferResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::setChatName(_ns2__setChatName *ns2__setChatName, _ns2__setChatNameResponse *ns2__setChatNameResponse)
{	struct soap *soap = this;
	struct __ns2__setChatName soap_tmp___ns2__setChatName;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "setChatName";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__setChatName.ns2__setChatName = ns2__setChatName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__setChatName(soap, &soap_tmp___ns2__setChatName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__setChatName(soap, &soap_tmp___ns2__setChatName, "-ns2:setChatName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__setChatName(soap, &soap_tmp___ns2__setChatName, "-ns2:setChatName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__setChatNameResponse)
		return soap_closesock(soap);
	ns2__setChatNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__setChatNameResponse->soap_get(soap, "ns2:setChatNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BFGlobalServiceProxy::transferFunds(_ns2__transferFunds *ns2__transferFunds, _ns2__transferFundsResponse *ns2__transferFundsResponse)
{	struct soap *soap = this;
	struct __ns2__transferFunds soap_tmp___ns2__transferFunds;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://api.betfair.com/global/v3/BFGlobalService";
	soap_action = "transferFunds";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__transferFunds.ns2__transferFunds = ns2__transferFunds;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__transferFunds(soap, &soap_tmp___ns2__transferFunds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__transferFunds(soap, &soap_tmp___ns2__transferFunds, "-ns2:transferFunds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__transferFunds(soap, &soap_tmp___ns2__transferFunds, "-ns2:transferFunds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__transferFundsResponse)
		return soap_closesock(soap);
	ns2__transferFundsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__transferFundsResponse->soap_get(soap, "ns2:transferFundsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
